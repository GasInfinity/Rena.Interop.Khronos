using System.Buffers;
using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGL;

public unsafe partial class GLCompat
{
    public readonly ushort Major;
    public readonly ushort Minor;
    public readonly bool IsEmbedded;
    
    public readonly bool Version10;
    public readonly bool Version11;
    public readonly bool Version12;
    public readonly bool Version13;
    public readonly bool Version14;
    public readonly bool Version15;
    public readonly bool Version20;
    public readonly bool Version21;
    public readonly bool Version30;
    public readonly bool Version31;
    public readonly bool Version32;
    public readonly bool Version33;
    public readonly bool Version40;
    public readonly bool Version41;
    public readonly bool Version42;
    public readonly bool Version43;
    public readonly bool Version44;
    public readonly bool Version45;
    public readonly bool Version46;
    
    public GLCompat(LoadFunction loadFunc)
    {
        delegate* unmanaged<int, byte*> glGetString;
        fixed(byte* name = glGetStringFunctionName)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        
        var version = glGetString(GL_VERSION);
        if(version is null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor, out IsEmbedded)) return;
        
        Version10 = Major > 1 || (Major == 1 && Minor >= 0);
        Version11 = Major > 1 || (Major == 1 && Minor >= 1);
        Version12 = Major > 1 || (Major == 1 && Minor >= 2);
        Version13 = Major > 1 || (Major == 1 && Minor >= 3);
        Version14 = Major > 1 || (Major == 1 && Minor >= 4);
        Version15 = Major > 1 || (Major == 1 && Minor >= 5);
        Version20 = Major > 2 || (Major == 2 && Minor >= 0);
        Version21 = Major > 2 || (Major == 2 && Minor >= 1);
        Version30 = Major > 3 || (Major == 3 && Minor >= 0);
        Version31 = Major > 3 || (Major == 3 && Minor >= 1);
        Version32 = Major > 3 || (Major == 3 && Minor >= 2);
        Version33 = Major > 3 || (Major == 3 && Minor >= 3);
        Version40 = Major > 4 || (Major == 4 && Minor >= 0);
        Version41 = Major > 4 || (Major == 4 && Minor >= 1);
        Version42 = Major > 4 || (Major == 4 && Minor >= 2);
        Version43 = Major > 4 || (Major == 4 && Minor >= 3);
        Version44 = Major > 4 || (Major == 4 && Minor >= 4);
        Version45 = Major > 4 || (Major == 4 && Minor >= 5);
        Version46 = Major > 4 || (Major == 4 && Minor >= 6);
        
        if(!IsEmbedded & Version10)
        {
            fixed(byte* name = glCullFaceFunctionName)
                this.glCullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrontFaceFunctionName)
                this.glFrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glHintFunctionName)
                this.glHint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthFunctionName)
                this.glLineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizeFunctionName)
                this.glPointSize = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonModeFunctionName)
                this.glPolygonMode = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorFunctionName)
                this.glScissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfFunctionName)
                this.glTexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfvFunctionName)
                this.glTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameteriFunctionName)
                this.glTexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterivFunctionName)
                this.glTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage1DFunctionName)
                this.glTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DFunctionName)
                this.glTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawBufferFunctionName)
                this.glDrawBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearFunctionName)
                this.glClear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorFunctionName)
                this.glClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearStencilFunctionName)
                this.glClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthFunctionName)
                this.glClearDepth = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskFunctionName)
                this.glStencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskFunctionName)
                this.glColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthMaskFunctionName)
                this.glDepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableFunctionName)
                this.glDisable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableFunctionName)
                this.glEnable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFinishFunctionName)
                this.glFinish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFlushFunctionName)
                this.glFlush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncFunctionName)
                this.glBlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLogicOpFunctionName)
                this.glLogicOp = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncFunctionName)
                this.glStencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpFunctionName)
                this.glStencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthFuncFunctionName)
                this.glDepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStorefFunctionName)
                this.glPixelStoref = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStoreiFunctionName)
                this.glPixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadBufferFunctionName)
                this.glReadBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadPixelsFunctionName)
                this.glReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleanvFunctionName)
                this.glGetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDoublevFunctionName)
                this.glGetDoublev = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetErrorFunctionName)
                this.glGetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetFloatvFunctionName)
                this.glGetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegervFunctionName)
                this.glGetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringFunctionName)
                this.glGetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glGetTexImageFunctionName)
                this.glGetTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterfvFunctionName)
                this.glGetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterivFunctionName)
                this.glGetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterfvFunctionName)
                this.glGetTexLevelParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterivFunctionName)
                this.glGetTexLevelParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsEnabledFunctionName)
                this.glIsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDepthRangeFunctionName)
                this.glDepthRange = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportFunctionName)
                this.glViewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNewListFunctionName)
                this.glNewList = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndListFunctionName)
                this.glEndList = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glCallListFunctionName)
                this.glCallList = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCallListsFunctionName)
                this.glCallLists = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteListsFunctionName)
                this.glDeleteLists = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenListsFunctionName)
                this.glGenLists = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glListBaseFunctionName)
                this.glListBase = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginFunctionName)
                this.glBegin = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBitmapFunctionName)
                this.glBitmap = (delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3bFunctionName)
                this.glColor3b = (delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3bvFunctionName)
                this.glColor3bv = (delegate* unmanaged</* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3dFunctionName)
                this.glColor3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3dvFunctionName)
                this.glColor3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3fFunctionName)
                this.glColor3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3fvFunctionName)
                this.glColor3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3iFunctionName)
                this.glColor3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3ivFunctionName)
                this.glColor3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3sFunctionName)
                this.glColor3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3svFunctionName)
                this.glColor3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3ubFunctionName)
                this.glColor3ub = (delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3ubvFunctionName)
                this.glColor3ubv = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3uiFunctionName)
                this.glColor3ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3uivFunctionName)
                this.glColor3uiv = (delegate* unmanaged</* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3usFunctionName)
                this.glColor3us = (delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor3usvFunctionName)
                this.glColor3usv = (delegate* unmanaged</* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4bFunctionName)
                this.glColor4b = (delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4bvFunctionName)
                this.glColor4bv = (delegate* unmanaged</* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4dFunctionName)
                this.glColor4d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4dvFunctionName)
                this.glColor4dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4fFunctionName)
                this.glColor4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4fvFunctionName)
                this.glColor4fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4iFunctionName)
                this.glColor4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4ivFunctionName)
                this.glColor4iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4sFunctionName)
                this.glColor4s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4svFunctionName)
                this.glColor4sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4ubFunctionName)
                this.glColor4ub = (delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4ubvFunctionName)
                this.glColor4ubv = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4uiFunctionName)
                this.glColor4ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4uivFunctionName)
                this.glColor4uiv = (delegate* unmanaged</* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4usFunctionName)
                this.glColor4us = (delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4usvFunctionName)
                this.glColor4usv = (delegate* unmanaged</* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEdgeFlagFunctionName)
                this.glEdgeFlag = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEdgeFlagvFunctionName)
                this.glEdgeFlagv = (delegate* unmanaged</* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndFunctionName)
                this.glEnd = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexdFunctionName)
                this.glIndexd = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexdvFunctionName)
                this.glIndexdv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexfFunctionName)
                this.glIndexf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexfvFunctionName)
                this.glIndexfv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexiFunctionName)
                this.glIndexi = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexivFunctionName)
                this.glIndexiv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexsFunctionName)
                this.glIndexs = (delegate* unmanaged</* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexsvFunctionName)
                this.glIndexsv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3bFunctionName)
                this.glNormal3b = (delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3bvFunctionName)
                this.glNormal3bv = (delegate* unmanaged</* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3dFunctionName)
                this.glNormal3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3dvFunctionName)
                this.glNormal3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3fFunctionName)
                this.glNormal3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3fvFunctionName)
                this.glNormal3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3iFunctionName)
                this.glNormal3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3ivFunctionName)
                this.glNormal3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3sFunctionName)
                this.glNormal3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3svFunctionName)
                this.glNormal3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2dFunctionName)
                this.glRasterPos2d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2dvFunctionName)
                this.glRasterPos2dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2fFunctionName)
                this.glRasterPos2f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2fvFunctionName)
                this.glRasterPos2fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2iFunctionName)
                this.glRasterPos2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2ivFunctionName)
                this.glRasterPos2iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2sFunctionName)
                this.glRasterPos2s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos2svFunctionName)
                this.glRasterPos2sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3dFunctionName)
                this.glRasterPos3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3dvFunctionName)
                this.glRasterPos3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3fFunctionName)
                this.glRasterPos3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3fvFunctionName)
                this.glRasterPos3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3iFunctionName)
                this.glRasterPos3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3ivFunctionName)
                this.glRasterPos3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3sFunctionName)
                this.glRasterPos3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos3svFunctionName)
                this.glRasterPos3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4dFunctionName)
                this.glRasterPos4d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4dvFunctionName)
                this.glRasterPos4dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4fFunctionName)
                this.glRasterPos4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4fvFunctionName)
                this.glRasterPos4fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4iFunctionName)
                this.glRasterPos4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4ivFunctionName)
                this.glRasterPos4iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4sFunctionName)
                this.glRasterPos4s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRasterPos4svFunctionName)
                this.glRasterPos4sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectdFunctionName)
                this.glRectd = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectdvFunctionName)
                this.glRectdv = (delegate* unmanaged</* GLdouble */ double*, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectfFunctionName)
                this.glRectf = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectfvFunctionName)
                this.glRectfv = (delegate* unmanaged</* GLfloat */ float*, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectiFunctionName)
                this.glRecti = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectivFunctionName)
                this.glRectiv = (delegate* unmanaged</* GLint */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectsFunctionName)
                this.glRects = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRectsvFunctionName)
                this.glRectsv = (delegate* unmanaged</* GLshort */ short*, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1dFunctionName)
                this.glTexCoord1d = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1dvFunctionName)
                this.glTexCoord1dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1fFunctionName)
                this.glTexCoord1f = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1fvFunctionName)
                this.glTexCoord1fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1iFunctionName)
                this.glTexCoord1i = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1ivFunctionName)
                this.glTexCoord1iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1sFunctionName)
                this.glTexCoord1s = (delegate* unmanaged</* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord1svFunctionName)
                this.glTexCoord1sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2dFunctionName)
                this.glTexCoord2d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2dvFunctionName)
                this.glTexCoord2dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2fFunctionName)
                this.glTexCoord2f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2fvFunctionName)
                this.glTexCoord2fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2iFunctionName)
                this.glTexCoord2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2ivFunctionName)
                this.glTexCoord2iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2sFunctionName)
                this.glTexCoord2s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord2svFunctionName)
                this.glTexCoord2sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3dFunctionName)
                this.glTexCoord3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3dvFunctionName)
                this.glTexCoord3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3fFunctionName)
                this.glTexCoord3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3fvFunctionName)
                this.glTexCoord3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3iFunctionName)
                this.glTexCoord3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3ivFunctionName)
                this.glTexCoord3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3sFunctionName)
                this.glTexCoord3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord3svFunctionName)
                this.glTexCoord3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4dFunctionName)
                this.glTexCoord4d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4dvFunctionName)
                this.glTexCoord4dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4fFunctionName)
                this.glTexCoord4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4fvFunctionName)
                this.glTexCoord4fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4iFunctionName)
                this.glTexCoord4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4ivFunctionName)
                this.glTexCoord4iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4sFunctionName)
                this.glTexCoord4s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoord4svFunctionName)
                this.glTexCoord4sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2dFunctionName)
                this.glVertex2d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2dvFunctionName)
                this.glVertex2dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2fFunctionName)
                this.glVertex2f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2fvFunctionName)
                this.glVertex2fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2iFunctionName)
                this.glVertex2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2ivFunctionName)
                this.glVertex2iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2sFunctionName)
                this.glVertex2s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex2svFunctionName)
                this.glVertex2sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3dFunctionName)
                this.glVertex3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3dvFunctionName)
                this.glVertex3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3fFunctionName)
                this.glVertex3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3fvFunctionName)
                this.glVertex3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3iFunctionName)
                this.glVertex3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3ivFunctionName)
                this.glVertex3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3sFunctionName)
                this.glVertex3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex3svFunctionName)
                this.glVertex3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4dFunctionName)
                this.glVertex4d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4dvFunctionName)
                this.glVertex4dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4fFunctionName)
                this.glVertex4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4fvFunctionName)
                this.glVertex4fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4iFunctionName)
                this.glVertex4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4ivFunctionName)
                this.glVertex4iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4sFunctionName)
                this.glVertex4s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertex4svFunctionName)
                this.glVertex4sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClipPlaneFunctionName)
                this.glClipPlane = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaterialFunctionName)
                this.glColorMaterial = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfFunctionName)
                this.glFogf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfvFunctionName)
                this.glFogfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogiFunctionName)
                this.glFogi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogivFunctionName)
                this.glFogiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfFunctionName)
                this.glLightf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfvFunctionName)
                this.glLightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightiFunctionName)
                this.glLighti = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightivFunctionName)
                this.glLightiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfFunctionName)
                this.glLightModelf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfvFunctionName)
                this.glLightModelfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModeliFunctionName)
                this.glLightModeli = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelivFunctionName)
                this.glLightModeliv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineStippleFunctionName)
                this.glLineStipple = (delegate* unmanaged</* GLint */ int, /* GLushort */ ushort, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfFunctionName)
                this.glMaterialf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfvFunctionName)
                this.glMaterialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialiFunctionName)
                this.glMateriali = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialivFunctionName)
                this.glMaterialiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonStippleFunctionName)
                this.glPolygonStipple = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShadeModelFunctionName)
                this.glShadeModel = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfFunctionName)
                this.glTexEnvf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfvFunctionName)
                this.glTexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnviFunctionName)
                this.glTexEnvi = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvivFunctionName)
                this.glTexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGendFunctionName)
                this.glTexGend = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGendvFunctionName)
                this.glTexGendv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGenfFunctionName)
                this.glTexGenf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGenfvFunctionName)
                this.glTexGenfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGeniFunctionName)
                this.glTexGeni = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexGenivFunctionName)
                this.glTexGeniv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFeedbackBufferFunctionName)
                this.glFeedbackBuffer = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSelectBufferFunctionName)
                this.glSelectBuffer = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderModeFunctionName)
                this.glRenderMode = (delegate* unmanaged</* GLenum */ int, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glInitNamesFunctionName)
                this.glInitNames = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadNameFunctionName)
                this.glLoadName = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPassThroughFunctionName)
                this.glPassThrough = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopNameFunctionName)
                this.glPopName = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushNameFunctionName)
                this.glPushName = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearAccumFunctionName)
                this.glClearAccum = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearIndexFunctionName)
                this.glClearIndex = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexMaskFunctionName)
                this.glIndexMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAccumFunctionName)
                this.glAccum = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopAttribFunctionName)
                this.glPopAttrib = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushAttribFunctionName)
                this.glPushAttrib = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMap1dFunctionName)
                this.glMap1d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMap1fFunctionName)
                this.glMap1f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMap2dFunctionName)
                this.glMap2d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMap2fFunctionName)
                this.glMap2f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapGrid1dFunctionName)
                this.glMapGrid1d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapGrid1fFunctionName)
                this.glMapGrid1f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapGrid2dFunctionName)
                this.glMapGrid2d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapGrid2fFunctionName)
                this.glMapGrid2f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord1dFunctionName)
                this.glEvalCoord1d = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord1dvFunctionName)
                this.glEvalCoord1dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord1fFunctionName)
                this.glEvalCoord1f = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord1fvFunctionName)
                this.glEvalCoord1fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord2dFunctionName)
                this.glEvalCoord2d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord2dvFunctionName)
                this.glEvalCoord2dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord2fFunctionName)
                this.glEvalCoord2f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalCoord2fvFunctionName)
                this.glEvalCoord2fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalMesh1FunctionName)
                this.glEvalMesh1 = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalPoint1FunctionName)
                this.glEvalPoint1 = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalMesh2FunctionName)
                this.glEvalMesh2 = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEvalPoint2FunctionName)
                this.glEvalPoint2 = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAlphaFuncFunctionName)
                this.glAlphaFunc = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelZoomFunctionName)
                this.glPixelZoom = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelTransferfFunctionName)
                this.glPixelTransferf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelTransferiFunctionName)
                this.glPixelTransferi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelMapfvFunctionName)
                this.glPixelMapfv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelMapuivFunctionName)
                this.glPixelMapuiv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelMapusvFunctionName)
                this.glPixelMapusv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyPixelsFunctionName)
                this.glCopyPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawPixelsFunctionName)
                this.glDrawPixels = (delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetClipPlaneFunctionName)
                this.glGetClipPlane = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightfvFunctionName)
                this.glGetLightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightivFunctionName)
                this.glGetLightiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMapdvFunctionName)
                this.glGetMapdv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMapfvFunctionName)
                this.glGetMapfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMapivFunctionName)
                this.glGetMapiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialfvFunctionName)
                this.glGetMaterialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialivFunctionName)
                this.glGetMaterialiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPixelMapfvFunctionName)
                this.glGetPixelMapfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPixelMapuivFunctionName)
                this.glGetPixelMapuiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPixelMapusvFunctionName)
                this.glGetPixelMapusv = (delegate* unmanaged</* GLenum */ int, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPolygonStippleFunctionName)
                this.glGetPolygonStipple = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvfvFunctionName)
                this.glGetTexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvivFunctionName)
                this.glGetTexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexGendvFunctionName)
                this.glGetTexGendv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexGenfvFunctionName)
                this.glGetTexGenfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexGenivFunctionName)
                this.glGetTexGeniv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsListFunctionName)
                this.glIsList = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glFrustumFunctionName)
                this.glFrustum = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadIdentityFunctionName)
                this.glLoadIdentity = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixfFunctionName)
                this.glLoadMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixdFunctionName)
                this.glLoadMatrixd = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMatrixModeFunctionName)
                this.glMatrixMode = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixfFunctionName)
                this.glMultMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixdFunctionName)
                this.glMultMatrixd = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glOrthoFunctionName)
                this.glOrtho = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopMatrixFunctionName)
                this.glPopMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushMatrixFunctionName)
                this.glPushMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatedFunctionName)
                this.glRotated = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatefFunctionName)
                this.glRotatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScaledFunctionName)
                this.glScaled = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScalefFunctionName)
                this.glScalef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatedFunctionName)
                this.glTranslated = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatefFunctionName)
                this.glTranslatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version11)
        {
            fixed(byte* name = glDrawArraysFunctionName)
                this.glDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsFunctionName)
                this.glDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPointervFunctionName)
                this.glGetPointerv = (delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetFunctionName)
                this.glPolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage1DFunctionName)
                this.glCopyTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage2DFunctionName)
                this.glCopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage1DFunctionName)
                this.glCopyTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage2DFunctionName)
                this.glCopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage1DFunctionName)
                this.glTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage2DFunctionName)
                this.glTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureFunctionName)
                this.glBindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTexturesFunctionName)
                this.glDeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTexturesFunctionName)
                this.glGenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsTextureFunctionName)
                this.glIsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glArrayElementFunctionName)
                this.glArrayElement = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorPointerFunctionName)
                this.glColorPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableClientStateFunctionName)
                this.glDisableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEdgeFlagPointerFunctionName)
                this.glEdgeFlagPointer = (delegate* unmanaged</* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableClientStateFunctionName)
                this.glEnableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexPointerFunctionName)
                this.glIndexPointer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInterleavedArraysFunctionName)
                this.glInterleavedArrays = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormalPointerFunctionName)
                this.glNormalPointer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordPointerFunctionName)
                this.glTexCoordPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexPointerFunctionName)
                this.glVertexPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAreTexturesResidentFunctionName)
                this.glAreTexturesResident = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int*, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glPrioritizeTexturesFunctionName)
                this.glPrioritizeTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexubFunctionName)
                this.glIndexub = (delegate* unmanaged</* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIndexubvFunctionName)
                this.glIndexubv = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopClientAttribFunctionName)
                this.glPopClientAttrib = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushClientAttribFunctionName)
                this.glPushClientAttrib = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version12)
        {
            fixed(byte* name = glDrawRangeElementsFunctionName)
                this.glDrawRangeElements = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage3DFunctionName)
                this.glTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage3DFunctionName)
                this.glTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage3DFunctionName)
                this.glCopyTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version13)
        {
            fixed(byte* name = glActiveTextureFunctionName)
                this.glActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoverageFunctionName)
                this.glSampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage3DFunctionName)
                this.glCompressedTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage2DFunctionName)
                this.glCompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage1DFunctionName)
                this.glCompressedTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage3DFunctionName)
                this.glCompressedTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage2DFunctionName)
                this.glCompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage1DFunctionName)
                this.glCompressedTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTexImageFunctionName)
                this.glGetCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientActiveTextureFunctionName)
                this.glClientActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1dFunctionName)
                this.glMultiTexCoord1d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1dvFunctionName)
                this.glMultiTexCoord1dv = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1fFunctionName)
                this.glMultiTexCoord1f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1fvFunctionName)
                this.glMultiTexCoord1fv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1iFunctionName)
                this.glMultiTexCoord1i = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1ivFunctionName)
                this.glMultiTexCoord1iv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1sFunctionName)
                this.glMultiTexCoord1s = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord1svFunctionName)
                this.glMultiTexCoord1sv = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2dFunctionName)
                this.glMultiTexCoord2d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2dvFunctionName)
                this.glMultiTexCoord2dv = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2fFunctionName)
                this.glMultiTexCoord2f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2fvFunctionName)
                this.glMultiTexCoord2fv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2iFunctionName)
                this.glMultiTexCoord2i = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2ivFunctionName)
                this.glMultiTexCoord2iv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2sFunctionName)
                this.glMultiTexCoord2s = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord2svFunctionName)
                this.glMultiTexCoord2sv = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3dFunctionName)
                this.glMultiTexCoord3d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3dvFunctionName)
                this.glMultiTexCoord3dv = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3fFunctionName)
                this.glMultiTexCoord3f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3fvFunctionName)
                this.glMultiTexCoord3fv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3iFunctionName)
                this.glMultiTexCoord3i = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3ivFunctionName)
                this.glMultiTexCoord3iv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3sFunctionName)
                this.glMultiTexCoord3s = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord3svFunctionName)
                this.glMultiTexCoord3sv = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4dFunctionName)
                this.glMultiTexCoord4d = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4dvFunctionName)
                this.glMultiTexCoord4dv = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4fFunctionName)
                this.glMultiTexCoord4f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4fvFunctionName)
                this.glMultiTexCoord4fv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4iFunctionName)
                this.glMultiTexCoord4i = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4ivFunctionName)
                this.glMultiTexCoord4iv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4sFunctionName)
                this.glMultiTexCoord4s = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4svFunctionName)
                this.glMultiTexCoord4sv = (delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadTransposeMatrixfFunctionName)
                this.glLoadTransposeMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadTransposeMatrixdFunctionName)
                this.glLoadTransposeMatrixd = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultTransposeMatrixfFunctionName)
                this.glMultTransposeMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultTransposeMatrixdFunctionName)
                this.glMultTransposeMatrixd = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version14)
        {
            fixed(byte* name = glBlendFuncSeparateFunctionName)
                this.glBlendFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawArraysFunctionName)
                this.glMultiDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* GLsizei */ int*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsFunctionName)
                this.glMultiDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfFunctionName)
                this.glPointParameterf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfvFunctionName)
                this.glPointParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameteriFunctionName)
                this.glPointParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterivFunctionName)
                this.glPointParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogCoordfFunctionName)
                this.glFogCoordf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogCoordfvFunctionName)
                this.glFogCoordfv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogCoorddFunctionName)
                this.glFogCoordd = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogCoorddvFunctionName)
                this.glFogCoorddv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogCoordPointerFunctionName)
                this.glFogCoordPointer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3bFunctionName)
                this.glSecondaryColor3b = (delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3bvFunctionName)
                this.glSecondaryColor3bv = (delegate* unmanaged</* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3dFunctionName)
                this.glSecondaryColor3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3dvFunctionName)
                this.glSecondaryColor3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3fFunctionName)
                this.glSecondaryColor3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3fvFunctionName)
                this.glSecondaryColor3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3iFunctionName)
                this.glSecondaryColor3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3ivFunctionName)
                this.glSecondaryColor3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3sFunctionName)
                this.glSecondaryColor3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3svFunctionName)
                this.glSecondaryColor3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3ubFunctionName)
                this.glSecondaryColor3ub = (delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3ubvFunctionName)
                this.glSecondaryColor3ubv = (delegate* unmanaged</* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3uiFunctionName)
                this.glSecondaryColor3ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3uivFunctionName)
                this.glSecondaryColor3uiv = (delegate* unmanaged</* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3usFunctionName)
                this.glSecondaryColor3us = (delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColor3usvFunctionName)
                this.glSecondaryColor3usv = (delegate* unmanaged</* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColorPointerFunctionName)
                this.glSecondaryColorPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2dFunctionName)
                this.glWindowPos2d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2dvFunctionName)
                this.glWindowPos2dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2fFunctionName)
                this.glWindowPos2f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2fvFunctionName)
                this.glWindowPos2fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2iFunctionName)
                this.glWindowPos2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2ivFunctionName)
                this.glWindowPos2iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2sFunctionName)
                this.glWindowPos2s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos2svFunctionName)
                this.glWindowPos2sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3dFunctionName)
                this.glWindowPos3d = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3dvFunctionName)
                this.glWindowPos3dv = (delegate* unmanaged</* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3fFunctionName)
                this.glWindowPos3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3fvFunctionName)
                this.glWindowPos3fv = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3iFunctionName)
                this.glWindowPos3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3ivFunctionName)
                this.glWindowPos3iv = (delegate* unmanaged</* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3sFunctionName)
                this.glWindowPos3s = (delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glWindowPos3svFunctionName)
                this.glWindowPos3sv = (delegate* unmanaged</* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendColorFunctionName)
                this.glBlendColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationFunctionName)
                this.glBlendEquation = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version15)
        {
            fixed(byte* name = glGenQueriesFunctionName)
                this.glGenQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteQueriesFunctionName)
                this.glDeleteQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsQueryFunctionName)
                this.glIsQuery = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBeginQueryFunctionName)
                this.glBeginQuery = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndQueryFunctionName)
                this.glEndQuery = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryivFunctionName)
                this.glGetQueryiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectivFunctionName)
                this.glGetQueryObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectuivFunctionName)
                this.glGetQueryObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferFunctionName)
                this.glBindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteBuffersFunctionName)
                this.glDeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenBuffersFunctionName)
                this.glGenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsBufferFunctionName)
                this.glIsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBufferDataFunctionName)
                this.glBufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferSubDataFunctionName)
                this.glBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferSubDataFunctionName)
                this.glGetBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapBufferFunctionName)
                this.glMapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glUnmapBufferFunctionName)
                this.glUnmapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetBufferParameterivFunctionName)
                this.glGetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferPointervFunctionName)
                this.glGetBufferPointerv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version20)
        {
            fixed(byte* name = glBlendEquationSeparateFunctionName)
                this.glBlendEquationSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawBuffersFunctionName)
                this.glDrawBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpSeparateFunctionName)
                this.glStencilOpSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncSeparateFunctionName)
                this.glStencilFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskSeparateFunctionName)
                this.glStencilMaskSeparate = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAttachShaderFunctionName)
                this.glAttachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindAttribLocationFunctionName)
                this.glBindAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompileShaderFunctionName)
                this.glCompileShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateProgramFunctionName)
                this.glCreateProgram = (delegate* unmanaged</* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glCreateShaderFunctionName)
                this.glCreateShader = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glDeleteProgramFunctionName)
                this.glDeleteProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteShaderFunctionName)
                this.glDeleteShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDetachShaderFunctionName)
                this.glDetachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableVertexAttribArrayFunctionName)
                this.glDisableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableVertexAttribArrayFunctionName)
                this.glEnableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveAttribFunctionName)
                this.glGetActiveAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformFunctionName)
                this.glGetActiveUniform = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttachedShadersFunctionName)
                this.glGetAttachedShaders = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttribLocationFunctionName)
                this.glGetAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramivFunctionName)
                this.glGetProgramiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInfoLogFunctionName)
                this.glGetProgramInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderivFunctionName)
                this.glGetShaderiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderInfoLogFunctionName)
                this.glGetShaderInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderSourceFunctionName)
                this.glGetShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformLocationFunctionName)
                this.glGetUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetUniformfvFunctionName)
                this.glGetUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformivFunctionName)
                this.glGetUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribdvFunctionName)
                this.glGetVertexAttribdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribfvFunctionName)
                this.glGetVertexAttribfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribivFunctionName)
                this.glGetVertexAttribiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribPointervFunctionName)
                this.glGetVertexAttribPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsProgramFunctionName)
                this.glIsProgram = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsShaderFunctionName)
                this.glIsShader = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glLinkProgramFunctionName)
                this.glLinkProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderSourceFunctionName)
                this.glShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUseProgramFunctionName)
                this.glUseProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fFunctionName)
                this.glUniform1f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fFunctionName)
                this.glUniform2f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fFunctionName)
                this.glUniform3f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fFunctionName)
                this.glUniform4f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1iFunctionName)
                this.glUniform1i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2iFunctionName)
                this.glUniform2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3iFunctionName)
                this.glUniform3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4iFunctionName)
                this.glUniform4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fvFunctionName)
                this.glUniform1fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fvFunctionName)
                this.glUniform2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fvFunctionName)
                this.glUniform3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fvFunctionName)
                this.glUniform4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1ivFunctionName)
                this.glUniform1iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2ivFunctionName)
                this.glUniform2iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3ivFunctionName)
                this.glUniform3iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4ivFunctionName)
                this.glUniform4iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2fvFunctionName)
                this.glUniformMatrix2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3fvFunctionName)
                this.glUniformMatrix3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4fvFunctionName)
                this.glUniformMatrix4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramFunctionName)
                this.glValidateProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1dFunctionName)
                this.glVertexAttrib1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1dvFunctionName)
                this.glVertexAttrib1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fFunctionName)
                this.glVertexAttrib1f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fvFunctionName)
                this.glVertexAttrib1fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1sFunctionName)
                this.glVertexAttrib1s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1svFunctionName)
                this.glVertexAttrib1sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2dFunctionName)
                this.glVertexAttrib2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2dvFunctionName)
                this.glVertexAttrib2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fFunctionName)
                this.glVertexAttrib2f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fvFunctionName)
                this.glVertexAttrib2fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2sFunctionName)
                this.glVertexAttrib2s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2svFunctionName)
                this.glVertexAttrib2sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3dFunctionName)
                this.glVertexAttrib3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3dvFunctionName)
                this.glVertexAttrib3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fFunctionName)
                this.glVertexAttrib3f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fvFunctionName)
                this.glVertexAttrib3fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3sFunctionName)
                this.glVertexAttrib3s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3svFunctionName)
                this.glVertexAttrib3sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NbvFunctionName)
                this.glVertexAttrib4Nbv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NivFunctionName)
                this.glVertexAttrib4Niv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NsvFunctionName)
                this.glVertexAttrib4Nsv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NubFunctionName)
                this.glVertexAttrib4Nub = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NubvFunctionName)
                this.glVertexAttrib4Nubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NuivFunctionName)
                this.glVertexAttrib4Nuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NusvFunctionName)
                this.glVertexAttrib4Nusv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4bvFunctionName)
                this.glVertexAttrib4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4dFunctionName)
                this.glVertexAttrib4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4dvFunctionName)
                this.glVertexAttrib4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fFunctionName)
                this.glVertexAttrib4f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fvFunctionName)
                this.glVertexAttrib4fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4ivFunctionName)
                this.glVertexAttrib4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4sFunctionName)
                this.glVertexAttrib4s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4svFunctionName)
                this.glVertexAttrib4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4ubvFunctionName)
                this.glVertexAttrib4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4uivFunctionName)
                this.glVertexAttrib4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4usvFunctionName)
                this.glVertexAttrib4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribPointerFunctionName)
                this.glVertexAttribPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version21)
        {
            fixed(byte* name = glUniformMatrix2x3fvFunctionName)
                this.glUniformMatrix2x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x2fvFunctionName)
                this.glUniformMatrix3x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x4fvFunctionName)
                this.glUniformMatrix2x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x2fvFunctionName)
                this.glUniformMatrix4x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x4fvFunctionName)
                this.glUniformMatrix3x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x3fvFunctionName)
                this.glUniformMatrix4x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version30)
        {
            fixed(byte* name = glColorMaskiFunctionName)
                this.glColorMaski = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleani_vFunctionName)
                this.glGetBooleani_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegeri_vFunctionName)
                this.glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableiFunctionName)
                this.glEnablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableiFunctionName)
                this.glDisablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsEnablediFunctionName)
                this.glIsEnabledi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBeginTransformFeedbackFunctionName)
                this.glBeginTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndTransformFeedbackFunctionName)
                this.glEndTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferRangeFunctionName)
                this.glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferBaseFunctionName)
                this.glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackVaryingsFunctionName)
                this.glTransformFeedbackVaryings = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbackVaryingFunctionName)
                this.glGetTransformFeedbackVarying = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClampColorFunctionName)
                this.glClampColor = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginConditionalRenderFunctionName)
                this.glBeginConditionalRender = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndConditionalRenderFunctionName)
                this.glEndConditionalRender = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIPointerFunctionName)
                this.glVertexAttribIPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIivFunctionName)
                this.glGetVertexAttribIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIuivFunctionName)
                this.glGetVertexAttribIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1iFunctionName)
                this.glVertexAttribI1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2iFunctionName)
                this.glVertexAttribI2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3iFunctionName)
                this.glVertexAttribI3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4iFunctionName)
                this.glVertexAttribI4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1uiFunctionName)
                this.glVertexAttribI1ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2uiFunctionName)
                this.glVertexAttribI2ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3uiFunctionName)
                this.glVertexAttribI3ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uiFunctionName)
                this.glVertexAttribI4ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1ivFunctionName)
                this.glVertexAttribI1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2ivFunctionName)
                this.glVertexAttribI2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3ivFunctionName)
                this.glVertexAttribI3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4ivFunctionName)
                this.glVertexAttribI4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1uivFunctionName)
                this.glVertexAttribI1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2uivFunctionName)
                this.glVertexAttribI2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3uivFunctionName)
                this.glVertexAttribI3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uivFunctionName)
                this.glVertexAttribI4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4bvFunctionName)
                this.glVertexAttribI4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4svFunctionName)
                this.glVertexAttribI4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4ubvFunctionName)
                this.glVertexAttribI4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4usvFunctionName)
                this.glVertexAttribI4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformuivFunctionName)
                this.glGetUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindFragDataLocationFunctionName)
                this.glBindFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFragDataLocationFunctionName)
                this.glGetFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glUniform1uiFunctionName)
                this.glUniform1ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uiFunctionName)
                this.glUniform2ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uiFunctionName)
                this.glUniform3ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uiFunctionName)
                this.glUniform4ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1uivFunctionName)
                this.glUniform1uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uivFunctionName)
                this.glUniform2uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uivFunctionName)
                this.glUniform3uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uivFunctionName)
                this.glUniform4uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIivFunctionName)
                this.glTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIuivFunctionName)
                this.glTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIivFunctionName)
                this.glGetTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIuivFunctionName)
                this.glGetTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferivFunctionName)
                this.glClearBufferiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferuivFunctionName)
                this.glClearBufferuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfvFunctionName)
                this.glClearBufferfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfiFunctionName)
                this.glClearBufferfi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringiFunctionName)
                this.glGetStringi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glIsRenderbufferFunctionName)
                this.glIsRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindRenderbufferFunctionName)
                this.glBindRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteRenderbuffersFunctionName)
                this.glDeleteRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenRenderbuffersFunctionName)
                this.glGenRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageFunctionName)
                this.glRenderbufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetRenderbufferParameterivFunctionName)
                this.glGetRenderbufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsFramebufferFunctionName)
                this.glIsFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindFramebufferFunctionName)
                this.glBindFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteFramebuffersFunctionName)
                this.glDeleteFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenFramebuffersFunctionName)
                this.glGenFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCheckFramebufferStatusFunctionName)
                this.glCheckFramebufferStatus = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture1DFunctionName)
                this.glFramebufferTexture1D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture2DFunctionName)
                this.glFramebufferTexture2D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture3DFunctionName)
                this.glFramebufferTexture3D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferRenderbufferFunctionName)
                this.glFramebufferRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferAttachmentParameterivFunctionName)
                this.glGetFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenerateMipmapFunctionName)
                this.glGenerateMipmap = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlitFramebufferFunctionName)
                this.glBlitFramebuffer = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageMultisampleFunctionName)
                this.glRenderbufferStorageMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureLayerFunctionName)
                this.glFramebufferTextureLayer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapBufferRangeFunctionName)
                this.glMapBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glFlushMappedBufferRangeFunctionName)
                this.glFlushMappedBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexArrayFunctionName)
                this.glBindVertexArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteVertexArraysFunctionName)
                this.glDeleteVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenVertexArraysFunctionName)
                this.glGenVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsVertexArrayFunctionName)
                this.glIsVertexArray = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version31)
        {
            fixed(byte* name = glDrawArraysInstancedFunctionName)
                this.glDrawArraysInstanced = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedFunctionName)
                this.glDrawElementsInstanced = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferFunctionName)
                this.glTexBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPrimitiveRestartIndexFunctionName)
                this.glPrimitiveRestartIndex = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyBufferSubDataFunctionName)
                this.glCopyBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformIndicesFunctionName)
                this.glGetUniformIndices = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformsivFunctionName)
                this.glGetActiveUniformsiv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformNameFunctionName)
                this.glGetActiveUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformBlockIndexFunctionName)
                this.glGetUniformBlockIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockivFunctionName)
                this.glGetActiveUniformBlockiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockNameFunctionName)
                this.glGetActiveUniformBlockName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformBlockBindingFunctionName)
                this.glUniformBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferRangeFunctionName)
                this.glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferBaseFunctionName)
                this.glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegeri_vFunctionName)
                this.glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version32)
        {
            fixed(byte* name = glDrawElementsBaseVertexFunctionName)
                this.glDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawRangeElementsBaseVertexFunctionName)
                this.glDrawRangeElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseVertexFunctionName)
                this.glDrawElementsInstancedBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsBaseVertexFunctionName)
                this.glMultiDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProvokingVertexFunctionName)
                this.glProvokingVertex = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFenceSyncFunctionName)
                this.glFenceSync = (delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*>)loadFunc(name);
            fixed(byte* name = glIsSyncFunctionName)
                this.glIsSync = (delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDeleteSyncFunctionName)
                this.glDeleteSync = (delegate* unmanaged</* GLsync */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientWaitSyncFunctionName)
                this.glClientWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glWaitSyncFunctionName)
                this.glWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64vFunctionName)
                this.glGetInteger64v = (delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSyncivFunctionName)
                this.glGetSynciv = (delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64i_vFunctionName)
                this.glGetInteger64i_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameteri64vFunctionName)
                this.glGetBufferParameteri64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureFunctionName)
                this.glFramebufferTexture = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DMultisampleFunctionName)
                this.glTexImage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage3DMultisampleFunctionName)
                this.glTexImage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMultisamplefvFunctionName)
                this.glGetMultisamplefv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleMaskiFunctionName)
                this.glSampleMaski = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version33)
        {
            fixed(byte* name = glBindFragDataLocationIndexedFunctionName)
                this.glBindFragDataLocationIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFragDataIndexFunctionName)
                this.glGetFragDataIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGenSamplersFunctionName)
                this.glGenSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteSamplersFunctionName)
                this.glDeleteSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsSamplerFunctionName)
                this.glIsSampler = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindSamplerFunctionName)
                this.glBindSampler = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameteriFunctionName)
                this.glSamplerParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterivFunctionName)
                this.glSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfFunctionName)
                this.glSamplerParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfvFunctionName)
                this.glSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIivFunctionName)
                this.glSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIuivFunctionName)
                this.glSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterivFunctionName)
                this.glGetSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIivFunctionName)
                this.glGetSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterfvFunctionName)
                this.glGetSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIuivFunctionName)
                this.glGetSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glQueryCounterFunctionName)
                this.glQueryCounter = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjecti64vFunctionName)
                this.glGetQueryObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectui64vFunctionName)
                this.glGetQueryObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint64 */ ulong*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribDivisorFunctionName)
                this.glVertexAttribDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP1uiFunctionName)
                this.glVertexAttribP1ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP1uivFunctionName)
                this.glVertexAttribP1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP2uiFunctionName)
                this.glVertexAttribP2ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP2uivFunctionName)
                this.glVertexAttribP2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP3uiFunctionName)
                this.glVertexAttribP3ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP3uivFunctionName)
                this.glVertexAttribP3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP4uiFunctionName)
                this.glVertexAttribP4ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP4uivFunctionName)
                this.glVertexAttribP4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP2uiFunctionName)
                this.glVertexP2ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP2uivFunctionName)
                this.glVertexP2uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP3uiFunctionName)
                this.glVertexP3ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP3uivFunctionName)
                this.glVertexP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP4uiFunctionName)
                this.glVertexP4ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexP4uivFunctionName)
                this.glVertexP4uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP1uiFunctionName)
                this.glTexCoordP1ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP1uivFunctionName)
                this.glTexCoordP1uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP2uiFunctionName)
                this.glTexCoordP2ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP2uivFunctionName)
                this.glTexCoordP2uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP3uiFunctionName)
                this.glTexCoordP3ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP3uivFunctionName)
                this.glTexCoordP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP4uiFunctionName)
                this.glTexCoordP4ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordP4uivFunctionName)
                this.glTexCoordP4uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP1uiFunctionName)
                this.glMultiTexCoordP1ui = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP1uivFunctionName)
                this.glMultiTexCoordP1uiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP2uiFunctionName)
                this.glMultiTexCoordP2ui = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP2uivFunctionName)
                this.glMultiTexCoordP2uiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP3uiFunctionName)
                this.glMultiTexCoordP3ui = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP3uivFunctionName)
                this.glMultiTexCoordP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP4uiFunctionName)
                this.glMultiTexCoordP4ui = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoordP4uivFunctionName)
                this.glMultiTexCoordP4uiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormalP3uiFunctionName)
                this.glNormalP3ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormalP3uivFunctionName)
                this.glNormalP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorP3uiFunctionName)
                this.glColorP3ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorP3uivFunctionName)
                this.glColorP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorP4uiFunctionName)
                this.glColorP4ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorP4uivFunctionName)
                this.glColorP4uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColorP3uiFunctionName)
                this.glSecondaryColorP3ui = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSecondaryColorP3uivFunctionName)
                this.glSecondaryColorP3uiv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version40)
        {
            fixed(byte* name = glMinSampleShadingFunctionName)
                this.glMinSampleShading = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationiFunctionName)
                this.glBlendEquationi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationSeparateiFunctionName)
                this.glBlendEquationSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFunciFunctionName)
                this.glBlendFunci = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncSeparateiFunctionName)
                this.glBlendFuncSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysIndirectFunctionName)
                this.glDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsIndirectFunctionName)
                this.glDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1dFunctionName)
                this.glUniform1d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2dFunctionName)
                this.glUniform2d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3dFunctionName)
                this.glUniform3d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4dFunctionName)
                this.glUniform4d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1dvFunctionName)
                this.glUniform1dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2dvFunctionName)
                this.glUniform2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3dvFunctionName)
                this.glUniform3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4dvFunctionName)
                this.glUniform4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2dvFunctionName)
                this.glUniformMatrix2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3dvFunctionName)
                this.glUniformMatrix3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4dvFunctionName)
                this.glUniformMatrix4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x3dvFunctionName)
                this.glUniformMatrix2x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x4dvFunctionName)
                this.glUniformMatrix2x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x2dvFunctionName)
                this.glUniformMatrix3x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x4dvFunctionName)
                this.glUniformMatrix3x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x2dvFunctionName)
                this.glUniformMatrix4x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x3dvFunctionName)
                this.glUniformMatrix4x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformdvFunctionName)
                this.glGetUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSubroutineUniformLocationFunctionName)
                this.glGetSubroutineUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetSubroutineIndexFunctionName)
                this.glGetSubroutineIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineUniformivFunctionName)
                this.glGetActiveSubroutineUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineUniformNameFunctionName)
                this.glGetActiveSubroutineUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineNameFunctionName)
                this.glGetActiveSubroutineName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformSubroutinesuivFunctionName)
                this.glUniformSubroutinesuiv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformSubroutineuivFunctionName)
                this.glGetUniformSubroutineuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramStageivFunctionName)
                this.glGetProgramStageiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPatchParameteriFunctionName)
                this.glPatchParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPatchParameterfvFunctionName)
                this.glPatchParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTransformFeedbackFunctionName)
                this.glBindTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTransformFeedbacksFunctionName)
                this.glDeleteTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTransformFeedbacksFunctionName)
                this.glGenTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsTransformFeedbackFunctionName)
                this.glIsTransformFeedback = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glPauseTransformFeedbackFunctionName)
                this.glPauseTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glResumeTransformFeedbackFunctionName)
                this.glResumeTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackFunctionName)
                this.glDrawTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackStreamFunctionName)
                this.glDrawTransformFeedbackStream = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginQueryIndexedFunctionName)
                this.glBeginQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndQueryIndexedFunctionName)
                this.glEndQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryIndexedivFunctionName)
                this.glGetQueryIndexediv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version41)
        {
            fixed(byte* name = glReleaseShaderCompilerFunctionName)
                this.glReleaseShaderCompiler = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderBinaryFunctionName)
                this.glShaderBinary = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderPrecisionFormatFunctionName)
                this.glGetShaderPrecisionFormat = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangefFunctionName)
                this.glDepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthfFunctionName)
                this.glClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramBinaryFunctionName)
                this.glGetProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramBinaryFunctionName)
                this.glProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramParameteriFunctionName)
                this.glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUseProgramStagesFunctionName)
                this.glUseProgramStages = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glActiveShaderProgramFunctionName)
                this.glActiveShaderProgram = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateShaderProgramvFunctionName)
                this.glCreateShaderProgramv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glBindProgramPipelineFunctionName)
                this.glBindProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteProgramPipelinesFunctionName)
                this.glDeleteProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenProgramPipelinesFunctionName)
                this.glGenProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsProgramPipelineFunctionName)
                this.glIsProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineivFunctionName)
                this.glGetProgramPipelineiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramParameteriFunctionName)
                this.glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1iFunctionName)
                this.glProgramUniform1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1ivFunctionName)
                this.glProgramUniform1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fFunctionName)
                this.glProgramUniform1f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fvFunctionName)
                this.glProgramUniform1fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1dFunctionName)
                this.glProgramUniform1d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1dvFunctionName)
                this.glProgramUniform1dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uiFunctionName)
                this.glProgramUniform1ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uivFunctionName)
                this.glProgramUniform1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2iFunctionName)
                this.glProgramUniform2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2ivFunctionName)
                this.glProgramUniform2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fFunctionName)
                this.glProgramUniform2f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fvFunctionName)
                this.glProgramUniform2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2dFunctionName)
                this.glProgramUniform2d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2dvFunctionName)
                this.glProgramUniform2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uiFunctionName)
                this.glProgramUniform2ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uivFunctionName)
                this.glProgramUniform2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3iFunctionName)
                this.glProgramUniform3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3ivFunctionName)
                this.glProgramUniform3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fFunctionName)
                this.glProgramUniform3f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fvFunctionName)
                this.glProgramUniform3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3dFunctionName)
                this.glProgramUniform3d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3dvFunctionName)
                this.glProgramUniform3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uiFunctionName)
                this.glProgramUniform3ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uivFunctionName)
                this.glProgramUniform3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4iFunctionName)
                this.glProgramUniform4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4ivFunctionName)
                this.glProgramUniform4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fFunctionName)
                this.glProgramUniform4f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fvFunctionName)
                this.glProgramUniform4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4dFunctionName)
                this.glProgramUniform4d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4dvFunctionName)
                this.glProgramUniform4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uiFunctionName)
                this.glProgramUniform4ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uivFunctionName)
                this.glProgramUniform4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2fvFunctionName)
                this.glProgramUniformMatrix2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3fvFunctionName)
                this.glProgramUniformMatrix3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4fvFunctionName)
                this.glProgramUniformMatrix4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2dvFunctionName)
                this.glProgramUniformMatrix2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3dvFunctionName)
                this.glProgramUniformMatrix3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4dvFunctionName)
                this.glProgramUniformMatrix4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x3fvFunctionName)
                this.glProgramUniformMatrix2x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x2fvFunctionName)
                this.glProgramUniformMatrix3x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x4fvFunctionName)
                this.glProgramUniformMatrix2x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x2fvFunctionName)
                this.glProgramUniformMatrix4x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x4fvFunctionName)
                this.glProgramUniformMatrix3x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x3fvFunctionName)
                this.glProgramUniformMatrix4x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x3dvFunctionName)
                this.glProgramUniformMatrix2x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x2dvFunctionName)
                this.glProgramUniformMatrix3x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x4dvFunctionName)
                this.glProgramUniformMatrix2x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x2dvFunctionName)
                this.glProgramUniformMatrix4x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x4dvFunctionName)
                this.glProgramUniformMatrix3x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x3dvFunctionName)
                this.glProgramUniformMatrix4x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramPipelineFunctionName)
                this.glValidateProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineInfoLogFunctionName)
                this.glGetProgramPipelineInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL1dFunctionName)
                this.glVertexAttribL1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL2dFunctionName)
                this.glVertexAttribL2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL3dFunctionName)
                this.glVertexAttribL3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL4dFunctionName)
                this.glVertexAttribL4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL1dvFunctionName)
                this.glVertexAttribL1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL2dvFunctionName)
                this.glVertexAttribL2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL3dvFunctionName)
                this.glVertexAttribL3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL4dvFunctionName)
                this.glVertexAttribL4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribLPointerFunctionName)
                this.glVertexAttribLPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribLdvFunctionName)
                this.glGetVertexAttribLdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportArrayvFunctionName)
                this.glViewportArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportIndexedfFunctionName)
                this.glViewportIndexedf = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportIndexedfvFunctionName)
                this.glViewportIndexedfv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorArrayvFunctionName)
                this.glScissorArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorIndexedFunctionName)
                this.glScissorIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorIndexedvFunctionName)
                this.glScissorIndexedv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangeArrayvFunctionName)
                this.glDepthRangeArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangeIndexedFunctionName)
                this.glDepthRangeIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFloati_vFunctionName)
                this.glGetFloati_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDoublei_vFunctionName)
                this.glGetDoublei_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version42)
        {
            fixed(byte* name = glDrawArraysInstancedBaseInstanceFunctionName)
                this.glDrawArraysInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseInstanceFunctionName)
                this.glDrawElementsInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseVertexBaseInstanceFunctionName)
                this.glDrawElementsInstancedBaseVertexBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInternalformativFunctionName)
                this.glGetInternalformativ = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveAtomicCounterBufferivFunctionName)
                this.glGetActiveAtomicCounterBufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindImageTextureFunctionName)
                this.glBindImageTexture = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierFunctionName)
                this.glMemoryBarrier = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage1DFunctionName)
                this.glTexStorage1D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DFunctionName)
                this.glTexStorage2D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DFunctionName)
                this.glTexStorage3D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackInstancedFunctionName)
                this.glDrawTransformFeedbackInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackStreamInstancedFunctionName)
                this.glDrawTransformFeedbackStreamInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version43)
        {
            fixed(byte* name = glClearBufferDataFunctionName)
                this.glClearBufferData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferSubDataFunctionName)
                this.glClearBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDispatchComputeFunctionName)
                this.glDispatchCompute = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDispatchComputeIndirectFunctionName)
                this.glDispatchComputeIndirect = (delegate* unmanaged</* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyImageSubDataFunctionName)
                this.glCopyImageSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferParameteriFunctionName)
                this.glFramebufferParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferParameterivFunctionName)
                this.glGetFramebufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInternalformati64vFunctionName)
                this.glGetInternalformati64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateTexSubImageFunctionName)
                this.glInvalidateTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateTexImageFunctionName)
                this.glInvalidateTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateBufferSubDataFunctionName)
                this.glInvalidateBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateBufferDataFunctionName)
                this.glInvalidateBufferData = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateFramebufferFunctionName)
                this.glInvalidateFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateSubFramebufferFunctionName)
                this.glInvalidateSubFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawArraysIndirectFunctionName)
                this.glMultiDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsIndirectFunctionName)
                this.glMultiDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInterfaceivFunctionName)
                this.glGetProgramInterfaceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceIndexFunctionName)
                this.glGetProgramResourceIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceNameFunctionName)
                this.glGetProgramResourceName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceivFunctionName)
                this.glGetProgramResourceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceLocationFunctionName)
                this.glGetProgramResourceLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceLocationIndexFunctionName)
                this.glGetProgramResourceLocationIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glShaderStorageBlockBindingFunctionName)
                this.glShaderStorageBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferRangeFunctionName)
                this.glTexBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DMultisampleFunctionName)
                this.glTexStorage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DMultisampleFunctionName)
                this.glTexStorage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureViewFunctionName)
                this.glTextureView = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexBufferFunctionName)
                this.glBindVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribFormatFunctionName)
                this.glVertexAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIFormatFunctionName)
                this.glVertexAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribLFormatFunctionName)
                this.glVertexAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribBindingFunctionName)
                this.glVertexAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexBindingDivisorFunctionName)
                this.glVertexBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageControlFunctionName)
                this.glDebugMessageControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageInsertFunctionName)
                this.glDebugMessageInsert = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageCallbackFunctionName)
                this.glDebugMessageCallback = (delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDebugMessageLogFunctionName)
                this.glGetDebugMessageLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glPushDebugGroupFunctionName)
                this.glPushDebugGroup = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopDebugGroupFunctionName)
                this.glPopDebugGroup = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectLabelFunctionName)
                this.glObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectLabelFunctionName)
                this.glGetObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectPtrLabelFunctionName)
                this.glObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectPtrLabelFunctionName)
                this.glGetObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPointervFunctionName)
                this.glGetPointerv = (delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version44)
        {
            fixed(byte* name = glBufferStorageFunctionName)
                this.glBufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearTexImageFunctionName)
                this.glClearTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearTexSubImageFunctionName)
                this.glClearTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBuffersBaseFunctionName)
                this.glBindBuffersBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBuffersRangeFunctionName)
                this.glBindBuffersRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizeiptr */ nint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTexturesFunctionName)
                this.glBindTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindSamplersFunctionName)
                this.glBindSamplers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindImageTexturesFunctionName)
                this.glBindImageTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexBuffersFunctionName)
                this.glBindVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version45)
        {
            fixed(byte* name = glClipControlFunctionName)
                this.glClipControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateTransformFeedbacksFunctionName)
                this.glCreateTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackBufferBaseFunctionName)
                this.glTransformFeedbackBufferBase = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackBufferRangeFunctionName)
                this.glTransformFeedbackBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbackivFunctionName)
                this.glGetTransformFeedbackiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbacki_vFunctionName)
                this.glGetTransformFeedbacki_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbacki64_vFunctionName)
                this.glGetTransformFeedbacki64_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateBuffersFunctionName)
                this.glCreateBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferStorageFunctionName)
                this.glNamedBufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferDataFunctionName)
                this.glNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferSubDataFunctionName)
                this.glNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyNamedBufferSubDataFunctionName)
                this.glCopyNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedBufferDataFunctionName)
                this.glClearNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedBufferSubDataFunctionName)
                this.glClearNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapNamedBufferFunctionName)
                this.glMapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glMapNamedBufferRangeFunctionName)
                this.glMapNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glUnmapNamedBufferFunctionName)
                this.glUnmapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glFlushMappedNamedBufferRangeFunctionName)
                this.glFlushMappedNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferParameterivFunctionName)
                this.glGetNamedBufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferParameteri64vFunctionName)
                this.glGetNamedBufferParameteri64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferPointervFunctionName)
                this.glGetNamedBufferPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferSubDataFunctionName)
                this.glGetNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateFramebuffersFunctionName)
                this.glCreateFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferRenderbufferFunctionName)
                this.glNamedFramebufferRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferParameteriFunctionName)
                this.glNamedFramebufferParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferTextureFunctionName)
                this.glNamedFramebufferTexture = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferTextureLayerFunctionName)
                this.glNamedFramebufferTextureLayer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferDrawBufferFunctionName)
                this.glNamedFramebufferDrawBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferDrawBuffersFunctionName)
                this.glNamedFramebufferDrawBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferReadBufferFunctionName)
                this.glNamedFramebufferReadBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateNamedFramebufferDataFunctionName)
                this.glInvalidateNamedFramebufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateNamedFramebufferSubDataFunctionName)
                this.glInvalidateNamedFramebufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferivFunctionName)
                this.glClearNamedFramebufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferuivFunctionName)
                this.glClearNamedFramebufferuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferfvFunctionName)
                this.glClearNamedFramebufferfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferfiFunctionName)
                this.glClearNamedFramebufferfi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlitNamedFramebufferFunctionName)
                this.glBlitNamedFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCheckNamedFramebufferStatusFunctionName)
                this.glCheckNamedFramebufferStatus = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetNamedFramebufferParameterivFunctionName)
                this.glGetNamedFramebufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedFramebufferAttachmentParameterivFunctionName)
                this.glGetNamedFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateRenderbuffersFunctionName)
                this.glCreateRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedRenderbufferStorageFunctionName)
                this.glNamedRenderbufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedRenderbufferStorageMultisampleFunctionName)
                this.glNamedRenderbufferStorageMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedRenderbufferParameterivFunctionName)
                this.glGetNamedRenderbufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateTexturesFunctionName)
                this.glCreateTextures = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBufferFunctionName)
                this.glTextureBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBufferRangeFunctionName)
                this.glTextureBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage1DFunctionName)
                this.glTextureStorage1D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage2DFunctionName)
                this.glTextureStorage2D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage3DFunctionName)
                this.glTextureStorage3D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage2DMultisampleFunctionName)
                this.glTextureStorage2DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage3DMultisampleFunctionName)
                this.glTextureStorage3DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage1DFunctionName)
                this.glTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage2DFunctionName)
                this.glTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage3DFunctionName)
                this.glTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage1DFunctionName)
                this.glCompressedTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage2DFunctionName)
                this.glCompressedTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage3DFunctionName)
                this.glCompressedTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage1DFunctionName)
                this.glCopyTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage2DFunctionName)
                this.glCopyTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage3DFunctionName)
                this.glCopyTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterfFunctionName)
                this.glTextureParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterfvFunctionName)
                this.glTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameteriFunctionName)
                this.glTextureParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterIivFunctionName)
                this.glTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterIuivFunctionName)
                this.glTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterivFunctionName)
                this.glTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenerateTextureMipmapFunctionName)
                this.glGenerateTextureMipmap = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureUnitFunctionName)
                this.glBindTextureUnit = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureImageFunctionName)
                this.glGetTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTextureImageFunctionName)
                this.glGetCompressedTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureLevelParameterfvFunctionName)
                this.glGetTextureLevelParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureLevelParameterivFunctionName)
                this.glGetTextureLevelParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterfvFunctionName)
                this.glGetTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterIivFunctionName)
                this.glGetTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterIuivFunctionName)
                this.glGetTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterivFunctionName)
                this.glGetTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateVertexArraysFunctionName)
                this.glCreateVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableVertexArrayAttribFunctionName)
                this.glDisableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableVertexArrayAttribFunctionName)
                this.glEnableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayElementBufferFunctionName)
                this.glVertexArrayElementBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayVertexBufferFunctionName)
                this.glVertexArrayVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayVertexBuffersFunctionName)
                this.glVertexArrayVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribBindingFunctionName)
                this.glVertexArrayAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribFormatFunctionName)
                this.glVertexArrayAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribIFormatFunctionName)
                this.glVertexArrayAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribLFormatFunctionName)
                this.glVertexArrayAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayBindingDivisorFunctionName)
                this.glVertexArrayBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayivFunctionName)
                this.glGetVertexArrayiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayIndexedivFunctionName)
                this.glGetVertexArrayIndexediv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayIndexed64ivFunctionName)
                this.glGetVertexArrayIndexed64iv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateSamplersFunctionName)
                this.glCreateSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateProgramPipelinesFunctionName)
                this.glCreateProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateQueriesFunctionName)
                this.glCreateQueries = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjecti64vFunctionName)
                this.glGetQueryBufferObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectivFunctionName)
                this.glGetQueryBufferObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectui64vFunctionName)
                this.glGetQueryBufferObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectuivFunctionName)
                this.glGetQueryBufferObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierByRegionFunctionName)
                this.glMemoryBarrierByRegion = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureSubImageFunctionName)
                this.glGetTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTextureSubImageFunctionName)
                this.glGetCompressedTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetGraphicsResetStatusFunctionName)
                this.glGetGraphicsResetStatus = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetnCompressedTexImageFunctionName)
                this.glGetnCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnTexImageFunctionName)
                this.glGetnTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformdvFunctionName)
                this.glGetnUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformfvFunctionName)
                this.glGetnUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformivFunctionName)
                this.glGetnUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformuivFunctionName)
                this.glGetnUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadnPixelsFunctionName)
                this.glReadnPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnMapdvFunctionName)
                this.glGetnMapdv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnMapfvFunctionName)
                this.glGetnMapfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnMapivFunctionName)
                this.glGetnMapiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnPixelMapfvFunctionName)
                this.glGetnPixelMapfv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnPixelMapuivFunctionName)
                this.glGetnPixelMapuiv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnPixelMapusvFunctionName)
                this.glGetnPixelMapusv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnPolygonStippleFunctionName)
                this.glGetnPolygonStipple = (delegate* unmanaged</* GLsizei */ int, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnColorTableFunctionName)
                this.glGetnColorTable = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnConvolutionFilterFunctionName)
                this.glGetnConvolutionFilter = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnSeparableFilterFunctionName)
                this.glGetnSeparableFilter = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* GLsizei */ int, /* void */ void*, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnHistogramFunctionName)
                this.glGetnHistogram = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnMinmaxFunctionName)
                this.glGetnMinmax = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBarrierFunctionName)
                this.glTextureBarrier = (delegate* unmanaged</* void */ void>)loadFunc(name);
        }
        
        if(!IsEmbedded & Version46)
        {
            fixed(byte* name = glSpecializeShaderFunctionName)
                this.glSpecializeShader = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint, /* GLuint */ uint*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawArraysIndirectCountFunctionName)
                this.glMultiDrawArraysIndirectCount = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsIndirectCountFunctionName)
                this.glMultiDrawElementsIndirectCount = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetClampFunctionName)
                this.glPolygonOffsetClamp = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
        }
    }
}
