namespace Rena.Interop.OpenGL;

public unsafe partial class GLES2
{
    internal static ReadOnlySpan<byte> glActiveTextureFunctionName => "glActiveTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glActiveTexture;
    internal static ReadOnlySpan<byte> glAttachShaderFunctionName => "glAttachShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glAttachShader;
    internal static ReadOnlySpan<byte> glBindAttribLocationFunctionName => "glBindAttribLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> glBindAttribLocation;
    internal static ReadOnlySpan<byte> glBindBufferFunctionName => "glBindBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindBuffer;
    internal static ReadOnlySpan<byte> glBindFramebufferFunctionName => "glBindFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindFramebuffer;
    internal static ReadOnlySpan<byte> glBindRenderbufferFunctionName => "glBindRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindRenderbuffer;
    internal static ReadOnlySpan<byte> glBindTextureFunctionName => "glBindTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindTexture;
    internal static ReadOnlySpan<byte> glBlendColorFunctionName => "glBlendColor"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glBlendColor;
    internal static ReadOnlySpan<byte> glBlendEquationFunctionName => "glBlendEquation"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glBlendEquation;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateFunctionName => "glBlendEquationSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendEquationSeparate;
    internal static ReadOnlySpan<byte> glBlendFuncFunctionName => "glBlendFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFunc;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateFunctionName => "glBlendFuncSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFuncSeparate;
    internal static ReadOnlySpan<byte> glBufferDataFunctionName => "glBufferData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> glBufferData;
    internal static ReadOnlySpan<byte> glBufferSubDataFunctionName => "glBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glBufferSubData;
    internal static ReadOnlySpan<byte> glCheckFramebufferStatusFunctionName => "glCheckFramebufferStatus"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int> glCheckFramebufferStatus;
    internal static ReadOnlySpan<byte> glClearFunctionName => "glClear"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glClear;
    internal static ReadOnlySpan<byte> glClearColorFunctionName => "glClearColor"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glClearColor;
    internal static ReadOnlySpan<byte> glClearDepthfFunctionName => "glClearDepthf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glClearDepthf;
    internal static ReadOnlySpan<byte> glClearStencilFunctionName => "glClearStencil"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glClearStencil;
    internal static ReadOnlySpan<byte> glColorMaskFunctionName => "glColorMask"u8;
    private readonly delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> glColorMask;
    internal static ReadOnlySpan<byte> glCompileShaderFunctionName => "glCompileShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glCompileShader;
    internal static ReadOnlySpan<byte> glCompressedTexImage2DFunctionName => "glCompressedTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage2D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage2DFunctionName => "glCompressedTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage2D;
    internal static ReadOnlySpan<byte> glCopyTexImage2DFunctionName => "glCopyTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> glCopyTexImage2D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage2DFunctionName => "glCopyTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage2D;
    internal static ReadOnlySpan<byte> glCreateProgramFunctionName => "glCreateProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint> glCreateProgram;
    internal static ReadOnlySpan<byte> glCreateShaderFunctionName => "glCreateShader"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint> glCreateShader;
    internal static ReadOnlySpan<byte> glCullFaceFunctionName => "glCullFace"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glCullFace;
    internal static ReadOnlySpan<byte> glDeleteBuffersFunctionName => "glDeleteBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteBuffers;
    internal static ReadOnlySpan<byte> glDeleteFramebuffersFunctionName => "glDeleteFramebuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteFramebuffers;
    internal static ReadOnlySpan<byte> glDeleteProgramFunctionName => "glDeleteProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDeleteProgram;
    internal static ReadOnlySpan<byte> glDeleteRenderbuffersFunctionName => "glDeleteRenderbuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteRenderbuffers;
    internal static ReadOnlySpan<byte> glDeleteShaderFunctionName => "glDeleteShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDeleteShader;
    internal static ReadOnlySpan<byte> glDeleteTexturesFunctionName => "glDeleteTextures"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteTextures;
    internal static ReadOnlySpan<byte> glDepthFuncFunctionName => "glDepthFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDepthFunc;
    internal static ReadOnlySpan<byte> glDepthMaskFunctionName => "glDepthMask"u8;
    private readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> glDepthMask;
    internal static ReadOnlySpan<byte> glDepthRangefFunctionName => "glDepthRangef"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glDepthRangef;
    internal static ReadOnlySpan<byte> glDetachShaderFunctionName => "glDetachShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDetachShader;
    internal static ReadOnlySpan<byte> glDisableFunctionName => "glDisable"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDisable;
    internal static ReadOnlySpan<byte> glDisableVertexAttribArrayFunctionName => "glDisableVertexAttribArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDisableVertexAttribArray;
    internal static ReadOnlySpan<byte> glDrawArraysFunctionName => "glDrawArrays"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> glDrawArrays;
    internal static ReadOnlySpan<byte> glDrawElementsFunctionName => "glDrawElements"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawElements;
    internal static ReadOnlySpan<byte> glEnableFunctionName => "glEnable"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEnable;
    internal static ReadOnlySpan<byte> glEnableVertexAttribArrayFunctionName => "glEnableVertexAttribArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glEnableVertexAttribArray;
    internal static ReadOnlySpan<byte> glFinishFunctionName => "glFinish"u8;
    private readonly delegate* unmanaged</* void */ void> glFinish;
    internal static ReadOnlySpan<byte> glFlushFunctionName => "glFlush"u8;
    private readonly delegate* unmanaged</* void */ void> glFlush;
    internal static ReadOnlySpan<byte> glFramebufferRenderbufferFunctionName => "glFramebufferRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glFramebufferRenderbuffer;
    internal static ReadOnlySpan<byte> glFramebufferTexture2DFunctionName => "glFramebufferTexture2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glFramebufferTexture2D;
    internal static ReadOnlySpan<byte> glFrontFaceFunctionName => "glFrontFace"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glFrontFace;
    internal static ReadOnlySpan<byte> glGenBuffersFunctionName => "glGenBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenBuffers;
    internal static ReadOnlySpan<byte> glGenerateMipmapFunctionName => "glGenerateMipmap"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glGenerateMipmap;
    internal static ReadOnlySpan<byte> glGenFramebuffersFunctionName => "glGenFramebuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenFramebuffers;
    internal static ReadOnlySpan<byte> glGenRenderbuffersFunctionName => "glGenRenderbuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenRenderbuffers;
    internal static ReadOnlySpan<byte> glGenTexturesFunctionName => "glGenTextures"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenTextures;
    internal static ReadOnlySpan<byte> glGetActiveAttribFunctionName => "glGetActiveAttrib"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveAttrib;
    internal static ReadOnlySpan<byte> glGetActiveUniformFunctionName => "glGetActiveUniform"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveUniform;
    internal static ReadOnlySpan<byte> glGetAttachedShadersFunctionName => "glGetAttachedShaders"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void> glGetAttachedShaders;
    internal static ReadOnlySpan<byte> glGetAttribLocationFunctionName => "glGetAttribLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetAttribLocation;
    internal static ReadOnlySpan<byte> glGetBooleanvFunctionName => "glGetBooleanv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void> glGetBooleanv;
    internal static ReadOnlySpan<byte> glGetBufferParameterivFunctionName => "glGetBufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetBufferParameteriv;
    internal static ReadOnlySpan<byte> glGetErrorFunctionName => "glGetError"u8;
    private readonly delegate* unmanaged</* GLenum */ int> glGetError;
    internal static ReadOnlySpan<byte> glGetFloatvFunctionName => "glGetFloatv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetFloatv;
    internal static ReadOnlySpan<byte> glGetFramebufferAttachmentParameterivFunctionName => "glGetFramebufferAttachmentParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetFramebufferAttachmentParameteriv;
    internal static ReadOnlySpan<byte> glGetIntegervFunctionName => "glGetIntegerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glGetIntegerv;
    internal static ReadOnlySpan<byte> glGetProgramivFunctionName => "glGetProgramiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramiv;
    internal static ReadOnlySpan<byte> glGetProgramInfoLogFunctionName => "glGetProgramInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramInfoLog;
    internal static ReadOnlySpan<byte> glGetRenderbufferParameterivFunctionName => "glGetRenderbufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetRenderbufferParameteriv;
    internal static ReadOnlySpan<byte> glGetShaderivFunctionName => "glGetShaderiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetShaderiv;
    internal static ReadOnlySpan<byte> glGetShaderInfoLogFunctionName => "glGetShaderInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetShaderInfoLog;
    internal static ReadOnlySpan<byte> glGetShaderPrecisionFormatFunctionName => "glGetShaderPrecisionFormat"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void> glGetShaderPrecisionFormat;
    internal static ReadOnlySpan<byte> glGetShaderSourceFunctionName => "glGetShaderSource"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetShaderSource;
    internal static ReadOnlySpan<byte> glGetStringFunctionName => "glGetString"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*> glGetString;
    internal static ReadOnlySpan<byte> glGetTexParameterfvFunctionName => "glGetTexParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexParameterfv;
    internal static ReadOnlySpan<byte> glGetTexParameterivFunctionName => "glGetTexParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexParameteriv;
    internal static ReadOnlySpan<byte> glGetUniformfvFunctionName => "glGetUniformfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glGetUniformfv;
    internal static ReadOnlySpan<byte> glGetUniformivFunctionName => "glGetUniformiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void> glGetUniformiv;
    internal static ReadOnlySpan<byte> glGetUniformLocationFunctionName => "glGetUniformLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetUniformLocation;
    internal static ReadOnlySpan<byte> glGetVertexAttribfvFunctionName => "glGetVertexAttribfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetVertexAttribfv;
    internal static ReadOnlySpan<byte> glGetVertexAttribivFunctionName => "glGetVertexAttribiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexAttribiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribPointervFunctionName => "glGetVertexAttribPointerv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void> glGetVertexAttribPointerv;
    internal static ReadOnlySpan<byte> glHintFunctionName => "glHint"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glHint;
    internal static ReadOnlySpan<byte> glIsBufferFunctionName => "glIsBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsBuffer;
    internal static ReadOnlySpan<byte> glIsEnabledFunctionName => "glIsEnabled"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> glIsEnabled;
    internal static ReadOnlySpan<byte> glIsFramebufferFunctionName => "glIsFramebuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsFramebuffer;
    internal static ReadOnlySpan<byte> glIsProgramFunctionName => "glIsProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsProgram;
    internal static ReadOnlySpan<byte> glIsRenderbufferFunctionName => "glIsRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsRenderbuffer;
    internal static ReadOnlySpan<byte> glIsShaderFunctionName => "glIsShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsShader;
    internal static ReadOnlySpan<byte> glIsTextureFunctionName => "glIsTexture"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsTexture;
    internal static ReadOnlySpan<byte> glLineWidthFunctionName => "glLineWidth"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glLineWidth;
    internal static ReadOnlySpan<byte> glLinkProgramFunctionName => "glLinkProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glLinkProgram;
    internal static ReadOnlySpan<byte> glPixelStoreiFunctionName => "glPixelStorei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPixelStorei;
    internal static ReadOnlySpan<byte> glPolygonOffsetFunctionName => "glPolygonOffset"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPolygonOffset;
    internal static ReadOnlySpan<byte> glReadPixelsFunctionName => "glReadPixels"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glReadPixels;
    internal static ReadOnlySpan<byte> glReleaseShaderCompilerFunctionName => "glReleaseShaderCompiler"u8;
    private readonly delegate* unmanaged</* void */ void> glReleaseShaderCompiler;
    internal static ReadOnlySpan<byte> glRenderbufferStorageFunctionName => "glRenderbufferStorage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glRenderbufferStorage;
    internal static ReadOnlySpan<byte> glSampleCoverageFunctionName => "glSampleCoverage"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void> glSampleCoverage;
    internal static ReadOnlySpan<byte> glScissorFunctionName => "glScissor"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glScissor;
    internal static ReadOnlySpan<byte> glShaderBinaryFunctionName => "glShaderBinary"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glShaderBinary;
    internal static ReadOnlySpan<byte> glShaderSourceFunctionName => "glShaderSource"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLint */ int*, /* void */ void> glShaderSource;
    internal static ReadOnlySpan<byte> glStencilFuncFunctionName => "glStencilFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glStencilFunc;
    internal static ReadOnlySpan<byte> glStencilFuncSeparateFunctionName => "glStencilFuncSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glStencilFuncSeparate;
    internal static ReadOnlySpan<byte> glStencilMaskFunctionName => "glStencilMask"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glStencilMask;
    internal static ReadOnlySpan<byte> glStencilMaskSeparateFunctionName => "glStencilMaskSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glStencilMaskSeparate;
    internal static ReadOnlySpan<byte> glStencilOpFunctionName => "glStencilOp"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glStencilOp;
    internal static ReadOnlySpan<byte> glStencilOpSeparateFunctionName => "glStencilOpSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glStencilOpSeparate;
    internal static ReadOnlySpan<byte> glTexImage2DFunctionName => "glTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage2D;
    internal static ReadOnlySpan<byte> glTexParameterfFunctionName => "glTexParameterf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexParameterf;
    internal static ReadOnlySpan<byte> glTexParameterfvFunctionName => "glTexParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexParameterfv;
    internal static ReadOnlySpan<byte> glTexParameteriFunctionName => "glTexParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexParameteri;
    internal static ReadOnlySpan<byte> glTexParameterivFunctionName => "glTexParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexParameteriv;
    internal static ReadOnlySpan<byte> glTexSubImage2DFunctionName => "glTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage2D;
    internal static ReadOnlySpan<byte> glUniform1fFunctionName => "glUniform1f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void> glUniform1f;
    internal static ReadOnlySpan<byte> glUniform1fvFunctionName => "glUniform1fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform1fv;
    internal static ReadOnlySpan<byte> glUniform1iFunctionName => "glUniform1i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glUniform1i;
    internal static ReadOnlySpan<byte> glUniform1ivFunctionName => "glUniform1iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform1iv;
    internal static ReadOnlySpan<byte> glUniform2fFunctionName => "glUniform2f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform2f;
    internal static ReadOnlySpan<byte> glUniform2fvFunctionName => "glUniform2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform2fv;
    internal static ReadOnlySpan<byte> glUniform2iFunctionName => "glUniform2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform2i;
    internal static ReadOnlySpan<byte> glUniform2ivFunctionName => "glUniform2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform2iv;
    internal static ReadOnlySpan<byte> glUniform3fFunctionName => "glUniform3f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform3f;
    internal static ReadOnlySpan<byte> glUniform3fvFunctionName => "glUniform3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform3fv;
    internal static ReadOnlySpan<byte> glUniform3iFunctionName => "glUniform3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform3i;
    internal static ReadOnlySpan<byte> glUniform3ivFunctionName => "glUniform3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform3iv;
    internal static ReadOnlySpan<byte> glUniform4fFunctionName => "glUniform4f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform4f;
    internal static ReadOnlySpan<byte> glUniform4fvFunctionName => "glUniform4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform4fv;
    internal static ReadOnlySpan<byte> glUniform4iFunctionName => "glUniform4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform4i;
    internal static ReadOnlySpan<byte> glUniform4ivFunctionName => "glUniform4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform4iv;
    internal static ReadOnlySpan<byte> glUniformMatrix2fvFunctionName => "glUniformMatrix2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3fvFunctionName => "glUniformMatrix3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4fvFunctionName => "glUniformMatrix4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4fv;
    internal static ReadOnlySpan<byte> glUseProgramFunctionName => "glUseProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glUseProgram;
    internal static ReadOnlySpan<byte> glValidateProgramFunctionName => "glValidateProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glValidateProgram;
    internal static ReadOnlySpan<byte> glVertexAttrib1fFunctionName => "glVertexAttrib1f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void> glVertexAttrib1f;
    internal static ReadOnlySpan<byte> glVertexAttrib1fvFunctionName => "glVertexAttrib1fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib1fv;
    internal static ReadOnlySpan<byte> glVertexAttrib2fFunctionName => "glVertexAttrib2f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib2f;
    internal static ReadOnlySpan<byte> glVertexAttrib2fvFunctionName => "glVertexAttrib2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib2fv;
    internal static ReadOnlySpan<byte> glVertexAttrib3fFunctionName => "glVertexAttrib3f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib3f;
    internal static ReadOnlySpan<byte> glVertexAttrib3fvFunctionName => "glVertexAttrib3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib3fv;
    internal static ReadOnlySpan<byte> glVertexAttrib4fFunctionName => "glVertexAttrib4f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib4f;
    internal static ReadOnlySpan<byte> glVertexAttrib4fvFunctionName => "glVertexAttrib4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib4fv;
    internal static ReadOnlySpan<byte> glVertexAttribPointerFunctionName => "glVertexAttribPointer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexAttribPointer;
    internal static ReadOnlySpan<byte> glViewportFunctionName => "glViewport"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glViewport;
    internal static ReadOnlySpan<byte> glReadBufferFunctionName => "glReadBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glReadBuffer;
    internal static ReadOnlySpan<byte> glDrawRangeElementsFunctionName => "glDrawRangeElements"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawRangeElements;
    internal static ReadOnlySpan<byte> glTexImage3DFunctionName => "glTexImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage3D;
    internal static ReadOnlySpan<byte> glTexSubImage3DFunctionName => "glTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage3D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage3DFunctionName => "glCopyTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexImage3DFunctionName => "glCompressedTexImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage3DFunctionName => "glCompressedTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage3D;
    internal static ReadOnlySpan<byte> glGenQueriesFunctionName => "glGenQueries"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenQueries;
    internal static ReadOnlySpan<byte> glDeleteQueriesFunctionName => "glDeleteQueries"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteQueries;
    internal static ReadOnlySpan<byte> glIsQueryFunctionName => "glIsQuery"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsQuery;
    internal static ReadOnlySpan<byte> glBeginQueryFunctionName => "glBeginQuery"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBeginQuery;
    internal static ReadOnlySpan<byte> glEndQueryFunctionName => "glEndQuery"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEndQuery;
    internal static ReadOnlySpan<byte> glGetQueryivFunctionName => "glGetQueryiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetQueryiv;
    internal static ReadOnlySpan<byte> glGetQueryObjectuivFunctionName => "glGetQueryObjectuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetQueryObjectuiv;
    internal static ReadOnlySpan<byte> glUnmapBufferFunctionName => "glUnmapBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> glUnmapBuffer;
    internal static ReadOnlySpan<byte> glGetBufferPointervFunctionName => "glGetBufferPointerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void> glGetBufferPointerv;
    internal static ReadOnlySpan<byte> glDrawBuffersFunctionName => "glDrawBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void> glDrawBuffers;
    internal static ReadOnlySpan<byte> glUniformMatrix2x3fvFunctionName => "glUniformMatrix2x3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x2fvFunctionName => "glUniformMatrix3x2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x4fvFunctionName => "glUniformMatrix2x4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x2fvFunctionName => "glUniformMatrix4x2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x4fvFunctionName => "glUniformMatrix3x4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x3fvFunctionName => "glUniformMatrix4x3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glBlitFramebufferFunctionName => "glBlitFramebuffer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void> glBlitFramebuffer;
    internal static ReadOnlySpan<byte> glRenderbufferStorageMultisampleFunctionName => "glRenderbufferStorageMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glRenderbufferStorageMultisample;
    internal static ReadOnlySpan<byte> glFramebufferTextureLayerFunctionName => "glFramebufferTextureLayer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glFramebufferTextureLayer;
    internal static ReadOnlySpan<byte> glMapBufferRangeFunctionName => "glMapBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*> glMapBufferRange;
    internal static ReadOnlySpan<byte> glFlushMappedBufferRangeFunctionName => "glFlushMappedBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glFlushMappedBufferRange;
    internal static ReadOnlySpan<byte> glBindVertexArrayFunctionName => "glBindVertexArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glBindVertexArray;
    internal static ReadOnlySpan<byte> glDeleteVertexArraysFunctionName => "glDeleteVertexArrays"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteVertexArrays;
    internal static ReadOnlySpan<byte> glGenVertexArraysFunctionName => "glGenVertexArrays"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenVertexArrays;
    internal static ReadOnlySpan<byte> glIsVertexArrayFunctionName => "glIsVertexArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsVertexArray;
    internal static ReadOnlySpan<byte> glGetIntegeri_vFunctionName => "glGetIntegeri_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void> glGetIntegeri_v;
    internal static ReadOnlySpan<byte> glBeginTransformFeedbackFunctionName => "glBeginTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glBeginTransformFeedback;
    internal static ReadOnlySpan<byte> glEndTransformFeedbackFunctionName => "glEndTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glEndTransformFeedback;
    internal static ReadOnlySpan<byte> glBindBufferRangeFunctionName => "glBindBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glBindBufferRange;
    internal static ReadOnlySpan<byte> glBindBufferBaseFunctionName => "glBindBufferBase"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBindBufferBase;
    internal static ReadOnlySpan<byte> glTransformFeedbackVaryingsFunctionName => "glTransformFeedbackVaryings"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLenum */ int, /* void */ void> glTransformFeedbackVaryings;
    internal static ReadOnlySpan<byte> glGetTransformFeedbackVaryingFunctionName => "glGetTransformFeedbackVarying"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetTransformFeedbackVarying;
    internal static ReadOnlySpan<byte> glVertexAttribIPointerFunctionName => "glVertexAttribIPointer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexAttribIPointer;
    internal static ReadOnlySpan<byte> glGetVertexAttribIivFunctionName => "glGetVertexAttribIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexAttribIiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribIuivFunctionName => "glGetVertexAttribIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetVertexAttribIuiv;
    internal static ReadOnlySpan<byte> glVertexAttribI4iFunctionName => "glVertexAttribI4i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glVertexAttribI4i;
    internal static ReadOnlySpan<byte> glVertexAttribI4uiFunctionName => "glVertexAttribI4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribI4ui;
    internal static ReadOnlySpan<byte> glVertexAttribI4ivFunctionName => "glVertexAttribI4iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttribI4iv;
    internal static ReadOnlySpan<byte> glVertexAttribI4uivFunctionName => "glVertexAttribI4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttribI4uiv;
    internal static ReadOnlySpan<byte> glGetUniformuivFunctionName => "glGetUniformuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glGetUniformuiv;
    internal static ReadOnlySpan<byte> glGetFragDataLocationFunctionName => "glGetFragDataLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetFragDataLocation;
    internal static ReadOnlySpan<byte> glUniform1uiFunctionName => "glUniform1ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void> glUniform1ui;
    internal static ReadOnlySpan<byte> glUniform2uiFunctionName => "glUniform2ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform2ui;
    internal static ReadOnlySpan<byte> glUniform3uiFunctionName => "glUniform3ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform3ui;
    internal static ReadOnlySpan<byte> glUniform4uiFunctionName => "glUniform4ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform4ui;
    internal static ReadOnlySpan<byte> glUniform1uivFunctionName => "glUniform1uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform1uiv;
    internal static ReadOnlySpan<byte> glUniform2uivFunctionName => "glUniform2uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform2uiv;
    internal static ReadOnlySpan<byte> glUniform3uivFunctionName => "glUniform3uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform3uiv;
    internal static ReadOnlySpan<byte> glUniform4uivFunctionName => "glUniform4uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform4uiv;
    internal static ReadOnlySpan<byte> glClearBufferivFunctionName => "glClearBufferiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void> glClearBufferiv;
    internal static ReadOnlySpan<byte> glClearBufferuivFunctionName => "glClearBufferuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glClearBufferuiv;
    internal static ReadOnlySpan<byte> glClearBufferfvFunctionName => "glClearBufferfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glClearBufferfv;
    internal static ReadOnlySpan<byte> glClearBufferfiFunctionName => "glClearBufferfi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void> glClearBufferfi;
    internal static ReadOnlySpan<byte> glGetStringiFunctionName => "glGetStringi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*> glGetStringi;
    internal static ReadOnlySpan<byte> glCopyBufferSubDataFunctionName => "glCopyBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glCopyBufferSubData;
    internal static ReadOnlySpan<byte> glGetUniformIndicesFunctionName => "glGetUniformIndices"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint*, /* void */ void> glGetUniformIndices;
    internal static ReadOnlySpan<byte> glGetActiveUniformsivFunctionName => "glGetActiveUniformsiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveUniformsiv;
    internal static ReadOnlySpan<byte> glGetUniformBlockIndexFunctionName => "glGetUniformBlockIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint> glGetUniformBlockIndex;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockivFunctionName => "glGetActiveUniformBlockiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveUniformBlockiv;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockNameFunctionName => "glGetActiveUniformBlockName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveUniformBlockName;
    internal static ReadOnlySpan<byte> glUniformBlockBindingFunctionName => "glUniformBlockBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniformBlockBinding;
    internal static ReadOnlySpan<byte> glDrawArraysInstancedFunctionName => "glDrawArraysInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glDrawArraysInstanced;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedFunctionName => "glDrawElementsInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glDrawElementsInstanced;
    internal static ReadOnlySpan<byte> glFenceSyncFunctionName => "glFenceSync"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*> glFenceSync;
    internal static ReadOnlySpan<byte> glIsSyncFunctionName => "glIsSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int> glIsSync;
    internal static ReadOnlySpan<byte> glDeleteSyncFunctionName => "glDeleteSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* void */ void> glDeleteSync;
    internal static ReadOnlySpan<byte> glClientWaitSyncFunctionName => "glClientWaitSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int> glClientWaitSync;
    internal static ReadOnlySpan<byte> glWaitSyncFunctionName => "glWaitSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void> glWaitSync;
    internal static ReadOnlySpan<byte> glGetInteger64vFunctionName => "glGetInteger64v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetInteger64v;
    internal static ReadOnlySpan<byte> glGetSyncivFunctionName => "glGetSynciv"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> glGetSynciv;
    internal static ReadOnlySpan<byte> glGetInteger64i_vFunctionName => "glGetInteger64i_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void> glGetInteger64i_v;
    internal static ReadOnlySpan<byte> glGetBufferParameteri64vFunctionName => "glGetBufferParameteri64v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetBufferParameteri64v;
    internal static ReadOnlySpan<byte> glGenSamplersFunctionName => "glGenSamplers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenSamplers;
    internal static ReadOnlySpan<byte> glDeleteSamplersFunctionName => "glDeleteSamplers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteSamplers;
    internal static ReadOnlySpan<byte> glIsSamplerFunctionName => "glIsSampler"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsSampler;
    internal static ReadOnlySpan<byte> glBindSamplerFunctionName => "glBindSampler"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBindSampler;
    internal static ReadOnlySpan<byte> glSamplerParameteriFunctionName => "glSamplerParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glSamplerParameteri;
    internal static ReadOnlySpan<byte> glSamplerParameterivFunctionName => "glSamplerParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glSamplerParameteriv;
    internal static ReadOnlySpan<byte> glSamplerParameterfFunctionName => "glSamplerParameterf"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glSamplerParameterf;
    internal static ReadOnlySpan<byte> glSamplerParameterfvFunctionName => "glSamplerParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glSamplerParameterfv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterivFunctionName => "glGetSamplerParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetSamplerParameteriv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterfvFunctionName => "glGetSamplerParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetSamplerParameterfv;
    internal static ReadOnlySpan<byte> glVertexAttribDivisorFunctionName => "glVertexAttribDivisor"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribDivisor;
    internal static ReadOnlySpan<byte> glBindTransformFeedbackFunctionName => "glBindTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindTransformFeedback;
    internal static ReadOnlySpan<byte> glDeleteTransformFeedbacksFunctionName => "glDeleteTransformFeedbacks"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteTransformFeedbacks;
    internal static ReadOnlySpan<byte> glGenTransformFeedbacksFunctionName => "glGenTransformFeedbacks"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenTransformFeedbacks;
    internal static ReadOnlySpan<byte> glIsTransformFeedbackFunctionName => "glIsTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsTransformFeedback;
    internal static ReadOnlySpan<byte> glPauseTransformFeedbackFunctionName => "glPauseTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glPauseTransformFeedback;
    internal static ReadOnlySpan<byte> glResumeTransformFeedbackFunctionName => "glResumeTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glResumeTransformFeedback;
    internal static ReadOnlySpan<byte> glGetProgramBinaryFunctionName => "glGetProgramBinary"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void> glGetProgramBinary;
    internal static ReadOnlySpan<byte> glProgramBinaryFunctionName => "glProgramBinary"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glProgramBinary;
    internal static ReadOnlySpan<byte> glProgramParameteriFunctionName => "glProgramParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glProgramParameteri;
    internal static ReadOnlySpan<byte> glInvalidateFramebufferFunctionName => "glInvalidateFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> glInvalidateFramebuffer;
    internal static ReadOnlySpan<byte> glInvalidateSubFramebufferFunctionName => "glInvalidateSubFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glInvalidateSubFramebuffer;
    internal static ReadOnlySpan<byte> glTexStorage2DFunctionName => "glTexStorage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTexStorage2D;
    internal static ReadOnlySpan<byte> glTexStorage3DFunctionName => "glTexStorage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTexStorage3D;
    internal static ReadOnlySpan<byte> glGetInternalformativFunctionName => "glGetInternalformativ"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glGetInternalformativ;
    internal static ReadOnlySpan<byte> glDispatchComputeFunctionName => "glDispatchCompute"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDispatchCompute;
    internal static ReadOnlySpan<byte> glDispatchComputeIndirectFunctionName => "glDispatchComputeIndirect"u8;
    private readonly delegate* unmanaged</* GLintptr */ nint, /* void */ void> glDispatchComputeIndirect;
    internal static ReadOnlySpan<byte> glDrawArraysIndirectFunctionName => "glDrawArraysIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void> glDrawArraysIndirect;
    internal static ReadOnlySpan<byte> glDrawElementsIndirectFunctionName => "glDrawElementsIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawElementsIndirect;
    internal static ReadOnlySpan<byte> glFramebufferParameteriFunctionName => "glFramebufferParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glFramebufferParameteri;
    internal static ReadOnlySpan<byte> glGetFramebufferParameterivFunctionName => "glGetFramebufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetFramebufferParameteriv;
    internal static ReadOnlySpan<byte> glGetProgramInterfaceivFunctionName => "glGetProgramInterfaceiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramInterfaceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceIndexFunctionName => "glGetProgramResourceIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint> glGetProgramResourceIndex;
    internal static ReadOnlySpan<byte> glGetProgramResourceNameFunctionName => "glGetProgramResourceName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramResourceName;
    internal static ReadOnlySpan<byte> glGetProgramResourceivFunctionName => "glGetProgramResourceiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> glGetProgramResourceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceLocationFunctionName => "glGetProgramResourceLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> glGetProgramResourceLocation;
    internal static ReadOnlySpan<byte> glUseProgramStagesFunctionName => "glUseProgramStages"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void> glUseProgramStages;
    internal static ReadOnlySpan<byte> glActiveShaderProgramFunctionName => "glActiveShaderProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glActiveShaderProgram;
    internal static ReadOnlySpan<byte> glCreateShaderProgramvFunctionName => "glCreateShaderProgramv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint> glCreateShaderProgramv;
    internal static ReadOnlySpan<byte> glBindProgramPipelineFunctionName => "glBindProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glBindProgramPipeline;
    internal static ReadOnlySpan<byte> glDeleteProgramPipelinesFunctionName => "glDeleteProgramPipelines"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteProgramPipelines;
    internal static ReadOnlySpan<byte> glGenProgramPipelinesFunctionName => "glGenProgramPipelines"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenProgramPipelines;
    internal static ReadOnlySpan<byte> glIsProgramPipelineFunctionName => "glIsProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineivFunctionName => "glGetProgramPipelineiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramPipelineiv;
    internal static ReadOnlySpan<byte> glProgramUniform1iFunctionName => "glProgramUniform1i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform1i;
    internal static ReadOnlySpan<byte> glProgramUniform2iFunctionName => "glProgramUniform2i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform2i;
    internal static ReadOnlySpan<byte> glProgramUniform3iFunctionName => "glProgramUniform3i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform3i;
    internal static ReadOnlySpan<byte> glProgramUniform4iFunctionName => "glProgramUniform4i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform4i;
    internal static ReadOnlySpan<byte> glProgramUniform1uiFunctionName => "glProgramUniform1ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void> glProgramUniform1ui;
    internal static ReadOnlySpan<byte> glProgramUniform2uiFunctionName => "glProgramUniform2ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform2ui;
    internal static ReadOnlySpan<byte> glProgramUniform3uiFunctionName => "glProgramUniform3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform3ui;
    internal static ReadOnlySpan<byte> glProgramUniform4uiFunctionName => "glProgramUniform4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform4ui;
    internal static ReadOnlySpan<byte> glProgramUniform1fFunctionName => "glProgramUniform1f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void> glProgramUniform1f;
    internal static ReadOnlySpan<byte> glProgramUniform2fFunctionName => "glProgramUniform2f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform2f;
    internal static ReadOnlySpan<byte> glProgramUniform3fFunctionName => "glProgramUniform3f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform3f;
    internal static ReadOnlySpan<byte> glProgramUniform4fFunctionName => "glProgramUniform4f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform4f;
    internal static ReadOnlySpan<byte> glProgramUniform1ivFunctionName => "glProgramUniform1iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform1iv;
    internal static ReadOnlySpan<byte> glProgramUniform2ivFunctionName => "glProgramUniform2iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform2iv;
    internal static ReadOnlySpan<byte> glProgramUniform3ivFunctionName => "glProgramUniform3iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform3iv;
    internal static ReadOnlySpan<byte> glProgramUniform4ivFunctionName => "glProgramUniform4iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform4iv;
    internal static ReadOnlySpan<byte> glProgramUniform1uivFunctionName => "glProgramUniform1uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform1uiv;
    internal static ReadOnlySpan<byte> glProgramUniform2uivFunctionName => "glProgramUniform2uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform2uiv;
    internal static ReadOnlySpan<byte> glProgramUniform3uivFunctionName => "glProgramUniform3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform3uiv;
    internal static ReadOnlySpan<byte> glProgramUniform4uivFunctionName => "glProgramUniform4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform4uiv;
    internal static ReadOnlySpan<byte> glProgramUniform1fvFunctionName => "glProgramUniform1fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform1fv;
    internal static ReadOnlySpan<byte> glProgramUniform2fvFunctionName => "glProgramUniform2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform2fv;
    internal static ReadOnlySpan<byte> glProgramUniform3fvFunctionName => "glProgramUniform3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform3fv;
    internal static ReadOnlySpan<byte> glProgramUniform4fvFunctionName => "glProgramUniform4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2fvFunctionName => "glProgramUniformMatrix2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3fvFunctionName => "glProgramUniformMatrix3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4fvFunctionName => "glProgramUniformMatrix4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x3fvFunctionName => "glProgramUniformMatrix2x3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x2fvFunctionName => "glProgramUniformMatrix3x2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x4fvFunctionName => "glProgramUniformMatrix2x4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x2fvFunctionName => "glProgramUniformMatrix4x2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x4fvFunctionName => "glProgramUniformMatrix3x4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x3fvFunctionName => "glProgramUniformMatrix4x3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glValidateProgramPipelineFunctionName => "glValidateProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glValidateProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineInfoLogFunctionName => "glGetProgramPipelineInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramPipelineInfoLog;
    internal static ReadOnlySpan<byte> glBindImageTextureFunctionName => "glBindImageTexture"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBindImageTexture;
    internal static ReadOnlySpan<byte> glGetBooleani_vFunctionName => "glGetBooleani_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void> glGetBooleani_v;
    internal static ReadOnlySpan<byte> glMemoryBarrierFunctionName => "glMemoryBarrier"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glMemoryBarrier;
    internal static ReadOnlySpan<byte> glMemoryBarrierByRegionFunctionName => "glMemoryBarrierByRegion"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glMemoryBarrierByRegion;
    internal static ReadOnlySpan<byte> glTexStorage2DMultisampleFunctionName => "glTexStorage2DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexStorage2DMultisample;
    internal static ReadOnlySpan<byte> glGetMultisamplefvFunctionName => "glGetMultisamplefv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glGetMultisamplefv;
    internal static ReadOnlySpan<byte> glSampleMaskiFunctionName => "glSampleMaski"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void> glSampleMaski;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterivFunctionName => "glGetTexLevelParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexLevelParameteriv;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterfvFunctionName => "glGetTexLevelParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexLevelParameterfv;
    internal static ReadOnlySpan<byte> glBindVertexBufferFunctionName => "glBindVertexBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void> glBindVertexBuffer;
    internal static ReadOnlySpan<byte> glVertexAttribFormatFunctionName => "glVertexAttribFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribFormat;
    internal static ReadOnlySpan<byte> glVertexAttribIFormatFunctionName => "glVertexAttribIFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexAttribIFormat;
    internal static ReadOnlySpan<byte> glVertexAttribBindingFunctionName => "glVertexAttribBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribBinding;
    internal static ReadOnlySpan<byte> glVertexBindingDivisorFunctionName => "glVertexBindingDivisor"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexBindingDivisor;
    internal static ReadOnlySpan<byte> glBlendBarrierFunctionName => "glBlendBarrier"u8;
    private readonly delegate* unmanaged</* void */ void> glBlendBarrier;
    internal static ReadOnlySpan<byte> glCopyImageSubDataFunctionName => "glCopyImageSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyImageSubData;
    internal static ReadOnlySpan<byte> glDebugMessageControlFunctionName => "glDebugMessageControl"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void> glDebugMessageControl;
    internal static ReadOnlySpan<byte> glDebugMessageInsertFunctionName => "glDebugMessageInsert"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glDebugMessageInsert;
    internal static ReadOnlySpan<byte> glDebugMessageCallbackFunctionName => "glDebugMessageCallback"u8;
    private readonly delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void> glDebugMessageCallback;
    internal static ReadOnlySpan<byte> glGetDebugMessageLogFunctionName => "glGetDebugMessageLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint> glGetDebugMessageLog;
    internal static ReadOnlySpan<byte> glPushDebugGroupFunctionName => "glPushDebugGroup"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glPushDebugGroup;
    internal static ReadOnlySpan<byte> glPopDebugGroupFunctionName => "glPopDebugGroup"u8;
    private readonly delegate* unmanaged</* void */ void> glPopDebugGroup;
    internal static ReadOnlySpan<byte> glObjectLabelFunctionName => "glObjectLabel"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glObjectLabel;
    internal static ReadOnlySpan<byte> glGetObjectLabelFunctionName => "glGetObjectLabel"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetObjectLabel;
    internal static ReadOnlySpan<byte> glObjectPtrLabelFunctionName => "glObjectPtrLabel"u8;
    private readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glObjectPtrLabel;
    internal static ReadOnlySpan<byte> glGetObjectPtrLabelFunctionName => "glGetObjectPtrLabel"u8;
    private readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetObjectPtrLabel;
    internal static ReadOnlySpan<byte> glGetPointervFunctionName => "glGetPointerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void> glGetPointerv;
    internal static ReadOnlySpan<byte> glEnableiFunctionName => "glEnablei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glEnablei;
    internal static ReadOnlySpan<byte> glDisableiFunctionName => "glDisablei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glDisablei;
    internal static ReadOnlySpan<byte> glBlendEquationiFunctionName => "glBlendEquationi"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glBlendEquationi;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateiFunctionName => "glBlendEquationSeparatei"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendEquationSeparatei;
    internal static ReadOnlySpan<byte> glBlendFunciFunctionName => "glBlendFunci"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFunci;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateiFunctionName => "glBlendFuncSeparatei"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFuncSeparatei;
    internal static ReadOnlySpan<byte> glColorMaskiFunctionName => "glColorMaski"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> glColorMaski;
    internal static ReadOnlySpan<byte> glIsEnablediFunctionName => "glIsEnabledi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int> glIsEnabledi;
    internal static ReadOnlySpan<byte> glDrawElementsBaseVertexFunctionName => "glDrawElementsBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> glDrawElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawRangeElementsBaseVertexFunctionName => "glDrawRangeElementsBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> glDrawRangeElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseVertexFunctionName => "glDrawElementsInstancedBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void> glDrawElementsInstancedBaseVertex;
    internal static ReadOnlySpan<byte> glFramebufferTextureFunctionName => "glFramebufferTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glFramebufferTexture;
    internal static ReadOnlySpan<byte> glPrimitiveBoundingBoxFunctionName => "glPrimitiveBoundingBox"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPrimitiveBoundingBox;
    internal static ReadOnlySpan<byte> glGetGraphicsResetStatusFunctionName => "glGetGraphicsResetStatus"u8;
    private readonly delegate* unmanaged</* GLenum */ int> glGetGraphicsResetStatus;
    internal static ReadOnlySpan<byte> glReadnPixelsFunctionName => "glReadnPixels"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glReadnPixels;
    internal static ReadOnlySpan<byte> glGetnUniformfvFunctionName => "glGetnUniformfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glGetnUniformfv;
    internal static ReadOnlySpan<byte> glGetnUniformivFunctionName => "glGetnUniformiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glGetnUniformiv;
    internal static ReadOnlySpan<byte> glGetnUniformuivFunctionName => "glGetnUniformuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGetnUniformuiv;
    internal static ReadOnlySpan<byte> glMinSampleShadingFunctionName => "glMinSampleShading"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glMinSampleShading;
    internal static ReadOnlySpan<byte> glPatchParameteriFunctionName => "glPatchParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPatchParameteri;
    internal static ReadOnlySpan<byte> glTexParameterIivFunctionName => "glTexParameterIiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexParameterIiv;
    internal static ReadOnlySpan<byte> glTexParameterIuivFunctionName => "glTexParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexParameterIuiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIivFunctionName => "glGetTexParameterIiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexParameterIiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIuivFunctionName => "glGetTexParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetTexParameterIuiv;
    internal static ReadOnlySpan<byte> glSamplerParameterIivFunctionName => "glSamplerParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glSamplerParameterIiv;
    internal static ReadOnlySpan<byte> glSamplerParameterIuivFunctionName => "glSamplerParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glSamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIivFunctionName => "glGetSamplerParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetSamplerParameterIiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIuivFunctionName => "glGetSamplerParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetSamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glTexBufferFunctionName => "glTexBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexBuffer;
    internal static ReadOnlySpan<byte> glTexBufferRangeFunctionName => "glTexBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glTexBufferRange;
    internal static ReadOnlySpan<byte> glTexStorage3DMultisampleFunctionName => "glTexStorage3DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexStorage3DMultisample;
}
