namespace Rena.Interop.OpenGL;

public unsafe partial class GLES1
{
    internal static ReadOnlySpan<byte> glAlphaFuncFunctionName => "glAlphaFunc"u8;
    internal static ReadOnlySpan<byte> glClearColorFunctionName => "glClearColor"u8;
    internal static ReadOnlySpan<byte> glClearDepthfFunctionName => "glClearDepthf"u8;
    internal static ReadOnlySpan<byte> glClipPlanefFunctionName => "glClipPlanef"u8;
    internal static ReadOnlySpan<byte> glColor4fFunctionName => "glColor4f"u8;
    internal static ReadOnlySpan<byte> glDepthRangefFunctionName => "glDepthRangef"u8;
    internal static ReadOnlySpan<byte> glFogfFunctionName => "glFogf"u8;
    internal static ReadOnlySpan<byte> glFogfvFunctionName => "glFogfv"u8;
    internal static ReadOnlySpan<byte> glFrustumfFunctionName => "glFrustumf"u8;
    internal static ReadOnlySpan<byte> glGetClipPlanefFunctionName => "glGetClipPlanef"u8;
    internal static ReadOnlySpan<byte> glGetFloatvFunctionName => "glGetFloatv"u8;
    internal static ReadOnlySpan<byte> glGetLightfvFunctionName => "glGetLightfv"u8;
    internal static ReadOnlySpan<byte> glGetMaterialfvFunctionName => "glGetMaterialfv"u8;
    internal static ReadOnlySpan<byte> glGetTexEnvfvFunctionName => "glGetTexEnvfv"u8;
    internal static ReadOnlySpan<byte> glGetTexParameterfvFunctionName => "glGetTexParameterfv"u8;
    internal static ReadOnlySpan<byte> glLightModelfFunctionName => "glLightModelf"u8;
    internal static ReadOnlySpan<byte> glLightModelfvFunctionName => "glLightModelfv"u8;
    internal static ReadOnlySpan<byte> glLightfFunctionName => "glLightf"u8;
    internal static ReadOnlySpan<byte> glLightfvFunctionName => "glLightfv"u8;
    internal static ReadOnlySpan<byte> glLineWidthFunctionName => "glLineWidth"u8;
    internal static ReadOnlySpan<byte> glLoadMatrixfFunctionName => "glLoadMatrixf"u8;
    internal static ReadOnlySpan<byte> glMaterialfFunctionName => "glMaterialf"u8;
    internal static ReadOnlySpan<byte> glMaterialfvFunctionName => "glMaterialfv"u8;
    internal static ReadOnlySpan<byte> glMultMatrixfFunctionName => "glMultMatrixf"u8;
    internal static ReadOnlySpan<byte> glMultiTexCoord4fFunctionName => "glMultiTexCoord4f"u8;
    internal static ReadOnlySpan<byte> glNormal3fFunctionName => "glNormal3f"u8;
    internal static ReadOnlySpan<byte> glOrthofFunctionName => "glOrthof"u8;
    internal static ReadOnlySpan<byte> glPointParameterfFunctionName => "glPointParameterf"u8;
    internal static ReadOnlySpan<byte> glPointParameterfvFunctionName => "glPointParameterfv"u8;
    internal static ReadOnlySpan<byte> glPointSizeFunctionName => "glPointSize"u8;
    internal static ReadOnlySpan<byte> glPolygonOffsetFunctionName => "glPolygonOffset"u8;
    internal static ReadOnlySpan<byte> glRotatefFunctionName => "glRotatef"u8;
    internal static ReadOnlySpan<byte> glScalefFunctionName => "glScalef"u8;
    internal static ReadOnlySpan<byte> glTexEnvfFunctionName => "glTexEnvf"u8;
    internal static ReadOnlySpan<byte> glTexEnvfvFunctionName => "glTexEnvfv"u8;
    internal static ReadOnlySpan<byte> glTexParameterfFunctionName => "glTexParameterf"u8;
    internal static ReadOnlySpan<byte> glTexParameterfvFunctionName => "glTexParameterfv"u8;
    internal static ReadOnlySpan<byte> glTranslatefFunctionName => "glTranslatef"u8;
    internal static ReadOnlySpan<byte> glActiveTextureFunctionName => "glActiveTexture"u8;
    internal static ReadOnlySpan<byte> glAlphaFuncxFunctionName => "glAlphaFuncx"u8;
    internal static ReadOnlySpan<byte> glBindBufferFunctionName => "glBindBuffer"u8;
    internal static ReadOnlySpan<byte> glBindTextureFunctionName => "glBindTexture"u8;
    internal static ReadOnlySpan<byte> glBlendFuncFunctionName => "glBlendFunc"u8;
    internal static ReadOnlySpan<byte> glBufferDataFunctionName => "glBufferData"u8;
    internal static ReadOnlySpan<byte> glBufferSubDataFunctionName => "glBufferSubData"u8;
    internal static ReadOnlySpan<byte> glClearFunctionName => "glClear"u8;
    internal static ReadOnlySpan<byte> glClearColorxFunctionName => "glClearColorx"u8;
    internal static ReadOnlySpan<byte> glClearDepthxFunctionName => "glClearDepthx"u8;
    internal static ReadOnlySpan<byte> glClearStencilFunctionName => "glClearStencil"u8;
    internal static ReadOnlySpan<byte> glClientActiveTextureFunctionName => "glClientActiveTexture"u8;
    internal static ReadOnlySpan<byte> glClipPlanexFunctionName => "glClipPlanex"u8;
    internal static ReadOnlySpan<byte> glColor4ubFunctionName => "glColor4ub"u8;
    internal static ReadOnlySpan<byte> glColor4xFunctionName => "glColor4x"u8;
    internal static ReadOnlySpan<byte> glColorMaskFunctionName => "glColorMask"u8;
    internal static ReadOnlySpan<byte> glColorPointerFunctionName => "glColorPointer"u8;
    internal static ReadOnlySpan<byte> glCompressedTexImage2DFunctionName => "glCompressedTexImage2D"u8;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage2DFunctionName => "glCompressedTexSubImage2D"u8;
    internal static ReadOnlySpan<byte> glCopyTexImage2DFunctionName => "glCopyTexImage2D"u8;
    internal static ReadOnlySpan<byte> glCopyTexSubImage2DFunctionName => "glCopyTexSubImage2D"u8;
    internal static ReadOnlySpan<byte> glCullFaceFunctionName => "glCullFace"u8;
    internal static ReadOnlySpan<byte> glDeleteBuffersFunctionName => "glDeleteBuffers"u8;
    internal static ReadOnlySpan<byte> glDeleteTexturesFunctionName => "glDeleteTextures"u8;
    internal static ReadOnlySpan<byte> glDepthFuncFunctionName => "glDepthFunc"u8;
    internal static ReadOnlySpan<byte> glDepthMaskFunctionName => "glDepthMask"u8;
    internal static ReadOnlySpan<byte> glDepthRangexFunctionName => "glDepthRangex"u8;
    internal static ReadOnlySpan<byte> glDisableFunctionName => "glDisable"u8;
    internal static ReadOnlySpan<byte> glDisableClientStateFunctionName => "glDisableClientState"u8;
    internal static ReadOnlySpan<byte> glDrawArraysFunctionName => "glDrawArrays"u8;
    internal static ReadOnlySpan<byte> glDrawElementsFunctionName => "glDrawElements"u8;
    internal static ReadOnlySpan<byte> glEnableFunctionName => "glEnable"u8;
    internal static ReadOnlySpan<byte> glEnableClientStateFunctionName => "glEnableClientState"u8;
    internal static ReadOnlySpan<byte> glFinishFunctionName => "glFinish"u8;
    internal static ReadOnlySpan<byte> glFlushFunctionName => "glFlush"u8;
    internal static ReadOnlySpan<byte> glFogxFunctionName => "glFogx"u8;
    internal static ReadOnlySpan<byte> glFogxvFunctionName => "glFogxv"u8;
    internal static ReadOnlySpan<byte> glFrontFaceFunctionName => "glFrontFace"u8;
    internal static ReadOnlySpan<byte> glFrustumxFunctionName => "glFrustumx"u8;
    internal static ReadOnlySpan<byte> glGetBooleanvFunctionName => "glGetBooleanv"u8;
    internal static ReadOnlySpan<byte> glGetBufferParameterivFunctionName => "glGetBufferParameteriv"u8;
    internal static ReadOnlySpan<byte> glGetClipPlanexFunctionName => "glGetClipPlanex"u8;
    internal static ReadOnlySpan<byte> glGenBuffersFunctionName => "glGenBuffers"u8;
    internal static ReadOnlySpan<byte> glGenTexturesFunctionName => "glGenTextures"u8;
    internal static ReadOnlySpan<byte> glGetErrorFunctionName => "glGetError"u8;
    internal static ReadOnlySpan<byte> glGetFixedvFunctionName => "glGetFixedv"u8;
    internal static ReadOnlySpan<byte> glGetIntegervFunctionName => "glGetIntegerv"u8;
    internal static ReadOnlySpan<byte> glGetLightxvFunctionName => "glGetLightxv"u8;
    internal static ReadOnlySpan<byte> glGetMaterialxvFunctionName => "glGetMaterialxv"u8;
    internal static ReadOnlySpan<byte> glGetPointervFunctionName => "glGetPointerv"u8;
    internal static ReadOnlySpan<byte> glGetStringFunctionName => "glGetString"u8;
    internal static ReadOnlySpan<byte> glGetTexEnvivFunctionName => "glGetTexEnviv"u8;
    internal static ReadOnlySpan<byte> glGetTexEnvxvFunctionName => "glGetTexEnvxv"u8;
    internal static ReadOnlySpan<byte> glGetTexParameterivFunctionName => "glGetTexParameteriv"u8;
    internal static ReadOnlySpan<byte> glGetTexParameterxvFunctionName => "glGetTexParameterxv"u8;
    internal static ReadOnlySpan<byte> glHintFunctionName => "glHint"u8;
    internal static ReadOnlySpan<byte> glIsBufferFunctionName => "glIsBuffer"u8;
    internal static ReadOnlySpan<byte> glIsEnabledFunctionName => "glIsEnabled"u8;
    internal static ReadOnlySpan<byte> glIsTextureFunctionName => "glIsTexture"u8;
    internal static ReadOnlySpan<byte> glLightModelxFunctionName => "glLightModelx"u8;
    internal static ReadOnlySpan<byte> glLightModelxvFunctionName => "glLightModelxv"u8;
    internal static ReadOnlySpan<byte> glLightxFunctionName => "glLightx"u8;
    internal static ReadOnlySpan<byte> glLightxvFunctionName => "glLightxv"u8;
    internal static ReadOnlySpan<byte> glLineWidthxFunctionName => "glLineWidthx"u8;
    internal static ReadOnlySpan<byte> glLoadIdentityFunctionName => "glLoadIdentity"u8;
    internal static ReadOnlySpan<byte> glLoadMatrixxFunctionName => "glLoadMatrixx"u8;
    internal static ReadOnlySpan<byte> glLogicOpFunctionName => "glLogicOp"u8;
    internal static ReadOnlySpan<byte> glMaterialxFunctionName => "glMaterialx"u8;
    internal static ReadOnlySpan<byte> glMaterialxvFunctionName => "glMaterialxv"u8;
    internal static ReadOnlySpan<byte> glMatrixModeFunctionName => "glMatrixMode"u8;
    internal static ReadOnlySpan<byte> glMultMatrixxFunctionName => "glMultMatrixx"u8;
    internal static ReadOnlySpan<byte> glMultiTexCoord4xFunctionName => "glMultiTexCoord4x"u8;
    internal static ReadOnlySpan<byte> glNormal3xFunctionName => "glNormal3x"u8;
    internal static ReadOnlySpan<byte> glNormalPointerFunctionName => "glNormalPointer"u8;
    internal static ReadOnlySpan<byte> glOrthoxFunctionName => "glOrthox"u8;
    internal static ReadOnlySpan<byte> glPixelStoreiFunctionName => "glPixelStorei"u8;
    internal static ReadOnlySpan<byte> glPointParameterxFunctionName => "glPointParameterx"u8;
    internal static ReadOnlySpan<byte> glPointParameterxvFunctionName => "glPointParameterxv"u8;
    internal static ReadOnlySpan<byte> glPointSizexFunctionName => "glPointSizex"u8;
    internal static ReadOnlySpan<byte> glPolygonOffsetxFunctionName => "glPolygonOffsetx"u8;
    internal static ReadOnlySpan<byte> glPopMatrixFunctionName => "glPopMatrix"u8;
    internal static ReadOnlySpan<byte> glPushMatrixFunctionName => "glPushMatrix"u8;
    internal static ReadOnlySpan<byte> glReadPixelsFunctionName => "glReadPixels"u8;
    internal static ReadOnlySpan<byte> glRotatexFunctionName => "glRotatex"u8;
    internal static ReadOnlySpan<byte> glSampleCoverageFunctionName => "glSampleCoverage"u8;
    internal static ReadOnlySpan<byte> glSampleCoveragexFunctionName => "glSampleCoveragex"u8;
    internal static ReadOnlySpan<byte> glScalexFunctionName => "glScalex"u8;
    internal static ReadOnlySpan<byte> glScissorFunctionName => "glScissor"u8;
    internal static ReadOnlySpan<byte> glShadeModelFunctionName => "glShadeModel"u8;
    internal static ReadOnlySpan<byte> glStencilFuncFunctionName => "glStencilFunc"u8;
    internal static ReadOnlySpan<byte> glStencilMaskFunctionName => "glStencilMask"u8;
    internal static ReadOnlySpan<byte> glStencilOpFunctionName => "glStencilOp"u8;
    internal static ReadOnlySpan<byte> glTexCoordPointerFunctionName => "glTexCoordPointer"u8;
    internal static ReadOnlySpan<byte> glTexEnviFunctionName => "glTexEnvi"u8;
    internal static ReadOnlySpan<byte> glTexEnvxFunctionName => "glTexEnvx"u8;
    internal static ReadOnlySpan<byte> glTexEnvivFunctionName => "glTexEnviv"u8;
    internal static ReadOnlySpan<byte> glTexEnvxvFunctionName => "glTexEnvxv"u8;
    internal static ReadOnlySpan<byte> glTexImage2DFunctionName => "glTexImage2D"u8;
    internal static ReadOnlySpan<byte> glTexParameteriFunctionName => "glTexParameteri"u8;
    internal static ReadOnlySpan<byte> glTexParameterxFunctionName => "glTexParameterx"u8;
    internal static ReadOnlySpan<byte> glTexParameterivFunctionName => "glTexParameteriv"u8;
    internal static ReadOnlySpan<byte> glTexParameterxvFunctionName => "glTexParameterxv"u8;
    internal static ReadOnlySpan<byte> glTexSubImage2DFunctionName => "glTexSubImage2D"u8;
    internal static ReadOnlySpan<byte> glTranslatexFunctionName => "glTranslatex"u8;
    internal static ReadOnlySpan<byte> glVertexPointerFunctionName => "glVertexPointer"u8;
    internal static ReadOnlySpan<byte> glViewportFunctionName => "glViewport"u8;
    
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glAlphaFunc;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glClearColor;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glClearDepthf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glClipPlanef;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glColor4f;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glDepthRangef;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glFogf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glFogfv;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glFrustumf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetClipPlanef;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetFloatv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetLightfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetMaterialfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexEnvfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexParameterfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glLightModelf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glLightModelfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glLightf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glLightfv;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glLineWidth;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glLoadMatrixf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glMaterialf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMaterialfv;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glMultMatrixf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMultiTexCoord4f;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glNormal3f;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glOrthof;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glPointParameterf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glPointParameterfv;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glPointSize;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPolygonOffset;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRotatef;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glScalef;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexEnvf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexEnvfv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexParameterf;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexParameterfv;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glTranslatef;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glActiveTexture;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> glAlphaFuncx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindBuffer;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindTexture;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFunc;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> glBufferData;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glBufferSubData;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glClear;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glClearColorx;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> glClearDepthx;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glClearStencil;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glClientActiveTexture;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glClipPlanex;
    private readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> glColor4ub;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glColor4x;
    private readonly delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> glColorMask;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glColorPointer;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage2D;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage2D;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> glCopyTexImage2D;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage2D;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glCullFace;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteBuffers;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteTextures;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDepthFunc;
    private readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> glDepthMask;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glDepthRangex;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDisable;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDisableClientState;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> glDrawArrays;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawElements;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEnable;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEnableClientState;
    private readonly delegate* unmanaged</* void */ void> glFinish;
    private readonly delegate* unmanaged</* void */ void> glFlush;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> glFogx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glFogxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glFrontFace;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glFrustumx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void> glGetBooleanv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetBufferParameteriv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetClipPlanex;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenBuffers;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenTextures;
    private readonly delegate* unmanaged</* GLenum */ int> glGetError;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetFixedv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glGetIntegerv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetLightxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetMaterialxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void> glGetPointerv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*> glGetString;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexEnviv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetTexEnvxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexParameteriv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glGetTexParameterxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glHint;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsBuffer;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> glIsEnabled;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsTexture;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> glLightModelx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glLightModelxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> glLightx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glLightxv;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> glLineWidthx;
    private readonly delegate* unmanaged</* void */ void> glLoadIdentity;
    private readonly delegate* unmanaged</* GLfixed */ uint*, /* void */ void> glLoadMatrixx;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glLogicOp;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> glMaterialx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glMaterialxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glMatrixMode;
    private readonly delegate* unmanaged</* GLfixed */ uint*, /* void */ void> glMultMatrixx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glMultiTexCoord4x;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glNormal3x;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glNormalPointer;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glOrthox;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPixelStorei;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> glPointParameterx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glPointParameterxv;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> glPointSizex;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glPolygonOffsetx;
    private readonly delegate* unmanaged</* void */ void> glPopMatrix;
    private readonly delegate* unmanaged</* void */ void> glPushMatrix;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glReadPixels;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glRotatex;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void> glSampleCoverage;
    private readonly delegate* unmanaged</* GLclampx */ int, /* GLboolean */ int, /* void */ void> glSampleCoveragex;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glScalex;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glScissor;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glShadeModel;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glStencilFunc;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glStencilMask;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glStencilOp;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glTexCoordPointer;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexEnvi;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> glTexEnvx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexEnviv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glTexEnvxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage2D;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexParameteri;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> glTexParameterx;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexParameteriv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> glTexParameterxv;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage2D;
    private readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> glTranslatex;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexPointer;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glViewport;
}
