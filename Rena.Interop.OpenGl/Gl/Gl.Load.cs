using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGl;

public unsafe partial class Gl
{
    public readonly ushort Major;
    public readonly ushort Minor;
    public readonly bool Version10;
    public readonly bool Version11;
    public readonly bool Version12;
    public readonly bool Version13;
    public readonly bool Version14;
    public readonly bool Version15;
    public readonly bool Version20;
    public readonly bool Version21;
    public readonly bool Version30;
    public readonly bool Version31;
    public readonly bool Version32;
    public readonly bool Version33;
    public readonly bool Version40;
    public readonly bool Version41;
    public readonly bool Version42;
    public readonly bool Version43;
    public readonly bool Version44;
    public readonly bool Version45;
    
    // Extensions
    
    public Gl(delegate* <byte*, void*> loadFunc)
    {
        fixed(byte* name = "glGetString"u8)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        var version = glGetString(GL_VERSION);
        if(version == null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor)) return;
        
        Version10 = Major > 1 || (Major == 1 && Minor >= 0);
        Version11 = Major > 1 || (Major == 1 && Minor >= 1);
        Version12 = Major > 1 || (Major == 1 && Minor >= 2);
        Version13 = Major > 1 || (Major == 1 && Minor >= 3);
        Version14 = Major > 1 || (Major == 1 && Minor >= 4);
        Version15 = Major > 1 || (Major == 1 && Minor >= 5);
        Version20 = Major > 2 || (Major == 2 && Minor >= 0);
        Version21 = Major > 2 || (Major == 2 && Minor >= 1);
        Version30 = Major > 3 || (Major == 3 && Minor >= 0);
        Version31 = Major > 3 || (Major == 3 && Minor >= 1);
        Version32 = Major > 3 || (Major == 3 && Minor >= 2);
        Version33 = Major > 3 || (Major == 3 && Minor >= 3);
        Version40 = Major > 4 || (Major == 4 && Minor >= 0);
        Version41 = Major > 4 || (Major == 4 && Minor >= 1);
        Version42 = Major > 4 || (Major == 4 && Minor >= 2);
        Version43 = Major > 4 || (Major == 4 && Minor >= 3);
        Version44 = Major > 4 || (Major == 4 && Minor >= 4);
        Version45 = Major > 4 || (Major == 4 && Minor >= 5);
        
        if(Version10)
        {
            fixed(byte* name = "glCullFace"u8)
                glCullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFrontFace"u8)
                glFrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glHint"u8)
                glHint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glLineWidth"u8)
                glLineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPointSize"u8)
                glPointSize = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPolygonMode"u8)
                glPolygonMode = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glScissor"u8)
                glScissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameterf"u8)
                glTexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameterfv"u8)
                glTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameteri"u8)
                glTexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameteriv"u8)
                glTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexImage1D"u8)
                glTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexImage2D"u8)
                glTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawBuffer"u8)
                glDrawBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClear"u8)
                glClear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearColor"u8)
                glClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearStencil"u8)
                glClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearDepth"u8)
                glClearDepth = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilMask"u8)
                glStencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glColorMask"u8)
                glColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDepthMask"u8)
                glDepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDisable"u8)
                glDisable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEnable"u8)
                glEnable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFinish"u8)
                glFinish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glFlush"u8)
                glFlush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendFunc"u8)
                glBlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glLogicOp"u8)
                glLogicOp = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilFunc"u8)
                glStencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilOp"u8)
                glStencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDepthFunc"u8)
                glDepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPixelStoref"u8)
                glPixelStoref = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPixelStorei"u8)
                glPixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glReadBuffer"u8)
                glReadBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glReadPixels"u8)
                glReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetBooleanv"u8)
                glGetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetDoublev"u8)
                glGetDoublev = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetError"u8)
                glGetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = "glGetFloatv"u8)
                glGetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetIntegerv"u8)
                glGetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetString"u8)
                glGetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = "glGetTexImage"u8)
                glGetTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexParameterfv"u8)
                glGetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexParameteriv"u8)
                glGetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexLevelParameterfv"u8)
                glGetTexLevelParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexLevelParameteriv"u8)
                glGetTexLevelParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsEnabled"u8)
                glIsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glDepthRange"u8)
                glDepthRange = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glViewport"u8)
                glViewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version11)
        {
            fixed(byte* name = "glDrawArrays"u8)
                glDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElements"u8)
                glDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPolygonOffset"u8)
                glPolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTexImage1D"u8)
                glCopyTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTexImage2D"u8)
                glCopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTexSubImage1D"u8)
                glCopyTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTexSubImage2D"u8)
                glCopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexSubImage1D"u8)
                glTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexSubImage2D"u8)
                glTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindTexture"u8)
                glBindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteTextures"u8)
                glDeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenTextures"u8)
                glGenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsTexture"u8)
                glIsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
        }
        
        if(Version12)
        {
            fixed(byte* name = "glDrawRangeElements"u8)
                glDrawRangeElements = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexImage3D"u8)
                glTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexSubImage3D"u8)
                glTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTexSubImage3D"u8)
                glCopyTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version13)
        {
            fixed(byte* name = "glActiveTexture"u8)
                glActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSampleCoverage"u8)
                glSampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexImage3D"u8)
                glCompressedTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexImage2D"u8)
                glCompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexImage1D"u8)
                glCompressedTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexSubImage3D"u8)
                glCompressedTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexSubImage2D"u8)
                glCompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTexSubImage1D"u8)
                glCompressedTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetCompressedTexImage"u8)
                glGetCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void*, /* void */ void>)loadFunc(name);
        }
        
        if(Version14)
        {
            fixed(byte* name = "glBlendFuncSeparate"u8)
                glBlendFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMultiDrawArrays"u8)
                glMultiDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* GLsizei */ int*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMultiDrawElements"u8)
                glMultiDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPointParameterf"u8)
                glPointParameterf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPointParameterfv"u8)
                glPointParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPointParameteri"u8)
                glPointParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPointParameteriv"u8)
                glPointParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendColor"u8)
                glBlendColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendEquation"u8)
                glBlendEquation = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version15)
        {
            fixed(byte* name = "glGenQueries"u8)
                glGenQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteQueries"u8)
                glDeleteQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsQuery"u8)
                glIsQuery = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBeginQuery"u8)
                glBeginQuery = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEndQuery"u8)
                glEndQuery = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryiv"u8)
                glGetQueryiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryObjectiv"u8)
                glGetQueryObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryObjectuiv"u8)
                glGetQueryObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBuffer"u8)
                glBindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteBuffers"u8)
                glDeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenBuffers"u8)
                glGenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsBuffer"u8)
                glIsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBufferData"u8)
                glBufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBufferSubData"u8)
                glBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetBufferSubData"u8)
                glGetBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMapBuffer"u8)
                glMapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = "glUnmapBuffer"u8)
                glUnmapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glGetBufferParameteriv"u8)
                glGetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetBufferPointerv"u8)
                glGetBufferPointerv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
        }
        
        if(Version20)
        {
            fixed(byte* name = "glBlendEquationSeparate"u8)
                glBlendEquationSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawBuffers"u8)
                glDrawBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilOpSeparate"u8)
                glStencilOpSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilFuncSeparate"u8)
                glStencilFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glStencilMaskSeparate"u8)
                glStencilMaskSeparate = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glAttachShader"u8)
                glAttachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindAttribLocation"u8)
                glBindAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompileShader"u8)
                glCompileShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateProgram"u8)
                glCreateProgram = (delegate* unmanaged</* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glCreateShader"u8)
                glCreateShader = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glDeleteProgram"u8)
                glDeleteProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteShader"u8)
                glDeleteShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDetachShader"u8)
                glDetachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDisableVertexAttribArray"u8)
                glDisableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEnableVertexAttribArray"u8)
                glEnableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveAttrib"u8)
                glGetActiveAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveUniform"u8)
                glGetActiveUniform = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetAttachedShaders"u8)
                glGetAttachedShaders = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetAttribLocation"u8)
                glGetAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glGetProgramiv"u8)
                glGetProgramiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramInfoLog"u8)
                glGetProgramInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetShaderiv"u8)
                glGetShaderiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetShaderInfoLog"u8)
                glGetShaderInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetShaderSource"u8)
                glGetShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformLocation"u8)
                glGetUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glGetUniformfv"u8)
                glGetUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformiv"u8)
                glGetUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribdv"u8)
                glGetVertexAttribdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribfv"u8)
                glGetVertexAttribfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribiv"u8)
                glGetVertexAttribiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribPointerv"u8)
                glGetVertexAttribPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsProgram"u8)
                glIsProgram = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glIsShader"u8)
                glIsShader = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glLinkProgram"u8)
                glLinkProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glShaderSource"u8)
                glShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUseProgram"u8)
                glUseProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1f"u8)
                glUniform1f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2f"u8)
                glUniform2f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3f"u8)
                glUniform3f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4f"u8)
                glUniform4f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1i"u8)
                glUniform1i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2i"u8)
                glUniform2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3i"u8)
                glUniform3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4i"u8)
                glUniform4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1fv"u8)
                glUniform1fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2fv"u8)
                glUniform2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3fv"u8)
                glUniform3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4fv"u8)
                glUniform4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1iv"u8)
                glUniform1iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2iv"u8)
                glUniform2iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3iv"u8)
                glUniform3iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4iv"u8)
                glUniform4iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix2fv"u8)
                glUniformMatrix2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3fv"u8)
                glUniformMatrix3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4fv"u8)
                glUniformMatrix4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glValidateProgram"u8)
                glValidateProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1d"u8)
                glVertexAttrib1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1dv"u8)
                glVertexAttrib1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1f"u8)
                glVertexAttrib1f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1fv"u8)
                glVertexAttrib1fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1s"u8)
                glVertexAttrib1s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib1sv"u8)
                glVertexAttrib1sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2d"u8)
                glVertexAttrib2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2dv"u8)
                glVertexAttrib2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2f"u8)
                glVertexAttrib2f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2fv"u8)
                glVertexAttrib2fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2s"u8)
                glVertexAttrib2s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib2sv"u8)
                glVertexAttrib2sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3d"u8)
                glVertexAttrib3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3dv"u8)
                glVertexAttrib3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3f"u8)
                glVertexAttrib3f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3fv"u8)
                glVertexAttrib3fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3s"u8)
                glVertexAttrib3s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib3sv"u8)
                glVertexAttrib3sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nbv"u8)
                glVertexAttrib4Nbv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Niv"u8)
                glVertexAttrib4Niv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nsv"u8)
                glVertexAttrib4Nsv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nub"u8)
                glVertexAttrib4Nub = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nubv"u8)
                glVertexAttrib4Nubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nuiv"u8)
                glVertexAttrib4Nuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4Nusv"u8)
                glVertexAttrib4Nusv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4bv"u8)
                glVertexAttrib4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4d"u8)
                glVertexAttrib4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4dv"u8)
                glVertexAttrib4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4f"u8)
                glVertexAttrib4f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4fv"u8)
                glVertexAttrib4fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4iv"u8)
                glVertexAttrib4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4s"u8)
                glVertexAttrib4s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4sv"u8)
                glVertexAttrib4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4ubv"u8)
                glVertexAttrib4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4uiv"u8)
                glVertexAttrib4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttrib4usv"u8)
                glVertexAttrib4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribPointer"u8)
                glVertexAttribPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
        }
        
        if(Version21)
        {
            fixed(byte* name = "glUniformMatrix2x3fv"u8)
                glUniformMatrix2x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3x2fv"u8)
                glUniformMatrix3x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix2x4fv"u8)
                glUniformMatrix2x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4x2fv"u8)
                glUniformMatrix4x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3x4fv"u8)
                glUniformMatrix3x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4x3fv"u8)
                glUniformMatrix4x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
        }
        
        if(Version30)
        {
            fixed(byte* name = "glColorMaski"u8)
                glColorMaski = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetBooleani_v"u8)
                glGetBooleani_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetIntegeri_v"u8)
                glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEnablei"u8)
                glEnablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDisablei"u8)
                glDisablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsEnabledi"u8)
                glIsEnabledi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBeginTransformFeedback"u8)
                glBeginTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEndTransformFeedback"u8)
                glEndTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBufferRange"u8)
                glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBufferBase"u8)
                glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTransformFeedbackVaryings"u8)
                glTransformFeedbackVaryings = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTransformFeedbackVarying"u8)
                glGetTransformFeedbackVarying = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClampColor"u8)
                glClampColor = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBeginConditionalRender"u8)
                glBeginConditionalRender = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEndConditionalRender"u8)
                glEndConditionalRender = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribIPointer"u8)
                glVertexAttribIPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribIiv"u8)
                glGetVertexAttribIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribIuiv"u8)
                glGetVertexAttribIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI1i"u8)
                glVertexAttribI1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI2i"u8)
                glVertexAttribI2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI3i"u8)
                glVertexAttribI3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4i"u8)
                glVertexAttribI4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI1ui"u8)
                glVertexAttribI1ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI2ui"u8)
                glVertexAttribI2ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI3ui"u8)
                glVertexAttribI3ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4ui"u8)
                glVertexAttribI4ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI1iv"u8)
                glVertexAttribI1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI2iv"u8)
                glVertexAttribI2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI3iv"u8)
                glVertexAttribI3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4iv"u8)
                glVertexAttribI4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI1uiv"u8)
                glVertexAttribI1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI2uiv"u8)
                glVertexAttribI2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI3uiv"u8)
                glVertexAttribI3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4uiv"u8)
                glVertexAttribI4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4bv"u8)
                glVertexAttribI4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4sv"u8)
                glVertexAttribI4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4ubv"u8)
                glVertexAttribI4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribI4usv"u8)
                glVertexAttribI4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformuiv"u8)
                glGetUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindFragDataLocation"u8)
                glBindFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetFragDataLocation"u8)
                glGetFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glUniform1ui"u8)
                glUniform1ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2ui"u8)
                glUniform2ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3ui"u8)
                glUniform3ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4ui"u8)
                glUniform4ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1uiv"u8)
                glUniform1uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2uiv"u8)
                glUniform2uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3uiv"u8)
                glUniform3uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4uiv"u8)
                glUniform4uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameterIiv"u8)
                glTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexParameterIuiv"u8)
                glTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexParameterIiv"u8)
                glGetTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTexParameterIuiv"u8)
                glGetTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearBufferiv"u8)
                glClearBufferiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearBufferuiv"u8)
                glClearBufferuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearBufferfv"u8)
                glClearBufferfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearBufferfi"u8)
                glClearBufferfi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetStringi"u8)
                glGetStringi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = "glIsRenderbuffer"u8)
                glIsRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBindRenderbuffer"u8)
                glBindRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteRenderbuffers"u8)
                glDeleteRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenRenderbuffers"u8)
                glGenRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glRenderbufferStorage"u8)
                glRenderbufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetRenderbufferParameteriv"u8)
                glGetRenderbufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsFramebuffer"u8)
                glIsFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBindFramebuffer"u8)
                glBindFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteFramebuffers"u8)
                glDeleteFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenFramebuffers"u8)
                glGenFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCheckFramebufferStatus"u8)
                glCheckFramebufferStatus = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = "glFramebufferTexture1D"u8)
                glFramebufferTexture1D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferTexture2D"u8)
                glFramebufferTexture2D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferTexture3D"u8)
                glFramebufferTexture3D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferRenderbuffer"u8)
                glFramebufferRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetFramebufferAttachmentParameteriv"u8)
                glGetFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenerateMipmap"u8)
                glGenerateMipmap = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlitFramebuffer"u8)
                glBlitFramebuffer = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glRenderbufferStorageMultisample"u8)
                glRenderbufferStorageMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferTextureLayer"u8)
                glFramebufferTextureLayer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMapBufferRange"u8)
                glMapBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = "glFlushMappedBufferRange"u8)
                glFlushMappedBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindVertexArray"u8)
                glBindVertexArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteVertexArrays"u8)
                glDeleteVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenVertexArrays"u8)
                glGenVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsVertexArray"u8)
                glIsVertexArray = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
        }
        
        if(Version31)
        {
            fixed(byte* name = "glDrawArraysInstanced"u8)
                glDrawArraysInstanced = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElementsInstanced"u8)
                glDrawElementsInstanced = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexBuffer"u8)
                glTexBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPrimitiveRestartIndex"u8)
                glPrimitiveRestartIndex = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyBufferSubData"u8)
                glCopyBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformIndices"u8)
                glGetUniformIndices = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveUniformsiv"u8)
                glGetActiveUniformsiv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveUniformName"u8)
                glGetActiveUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformBlockIndex"u8)
                glGetUniformBlockIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glGetActiveUniformBlockiv"u8)
                glGetActiveUniformBlockiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveUniformBlockName"u8)
                glGetActiveUniformBlockName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformBlockBinding"u8)
                glUniformBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBufferRange"u8)
                glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBufferBase"u8)
                glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetIntegeri_v"u8)
                glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version32)
        {
            fixed(byte* name = "glDrawElementsBaseVertex"u8)
                glDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawRangeElementsBaseVertex"u8)
                glDrawRangeElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElementsInstancedBaseVertex"u8)
                glDrawElementsInstancedBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMultiDrawElementsBaseVertex"u8)
                glMultiDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProvokingVertex"u8)
                glProvokingVertex = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFenceSync"u8)
                glFenceSync = (delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*>)loadFunc(name);
            fixed(byte* name = "glIsSync"u8)
                glIsSync = (delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glDeleteSync"u8)
                glDeleteSync = (delegate* unmanaged</* GLsync */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClientWaitSync"u8)
                glClientWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = "glWaitSync"u8)
                glWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetInteger64v"u8)
                glGetInteger64v = (delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSynciv"u8)
                glGetSynciv = (delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetInteger64i_v"u8)
                glGetInteger64i_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetBufferParameteri64v"u8)
                glGetBufferParameteri64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferTexture"u8)
                glFramebufferTexture = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexImage2DMultisample"u8)
                glTexImage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexImage3DMultisample"u8)
                glTexImage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetMultisamplefv"u8)
                glGetMultisamplefv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSampleMaski"u8)
                glSampleMaski = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version33)
        {
            fixed(byte* name = "glBindFragDataLocationIndexed"u8)
                glBindFragDataLocationIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetFragDataIndex"u8)
                glGetFragDataIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glGenSamplers"u8)
                glGenSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteSamplers"u8)
                glDeleteSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsSampler"u8)
                glIsSampler = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glBindSampler"u8)
                glBindSampler = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameteri"u8)
                glSamplerParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameteriv"u8)
                glSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameterf"u8)
                glSamplerParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameterfv"u8)
                glSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameterIiv"u8)
                glSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glSamplerParameterIuiv"u8)
                glSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSamplerParameteriv"u8)
                glGetSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSamplerParameterIiv"u8)
                glGetSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSamplerParameterfv"u8)
                glGetSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSamplerParameterIuiv"u8)
                glGetSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glQueryCounter"u8)
                glQueryCounter = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryObjecti64v"u8)
                glGetQueryObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryObjectui64v"u8)
                glGetQueryObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint64 */ ulong*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribDivisor"u8)
                glVertexAttribDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP1ui"u8)
                glVertexAttribP1ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP1uiv"u8)
                glVertexAttribP1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP2ui"u8)
                glVertexAttribP2ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP2uiv"u8)
                glVertexAttribP2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP3ui"u8)
                glVertexAttribP3ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP3uiv"u8)
                glVertexAttribP3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP4ui"u8)
                glVertexAttribP4ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribP4uiv"u8)
                glVertexAttribP4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
        }
        
        if(Version40)
        {
            fixed(byte* name = "glMinSampleShading"u8)
                glMinSampleShading = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendEquationi"u8)
                glBlendEquationi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendEquationSeparatei"u8)
                glBlendEquationSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendFunci"u8)
                glBlendFunci = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlendFuncSeparatei"u8)
                glBlendFuncSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawArraysIndirect"u8)
                glDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElementsIndirect"u8)
                glDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1d"u8)
                glUniform1d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2d"u8)
                glUniform2d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3d"u8)
                glUniform3d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4d"u8)
                glUniform4d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform1dv"u8)
                glUniform1dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform2dv"u8)
                glUniform2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform3dv"u8)
                glUniform3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniform4dv"u8)
                glUniform4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix2dv"u8)
                glUniformMatrix2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3dv"u8)
                glUniformMatrix3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4dv"u8)
                glUniformMatrix4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix2x3dv"u8)
                glUniformMatrix2x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix2x4dv"u8)
                glUniformMatrix2x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3x2dv"u8)
                glUniformMatrix3x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix3x4dv"u8)
                glUniformMatrix3x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4x2dv"u8)
                glUniformMatrix4x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformMatrix4x3dv"u8)
                glUniformMatrix4x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformdv"u8)
                glGetUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetSubroutineUniformLocation"u8)
                glGetSubroutineUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glGetSubroutineIndex"u8)
                glGetSubroutineIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glGetActiveSubroutineUniformiv"u8)
                glGetActiveSubroutineUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveSubroutineUniformName"u8)
                glGetActiveSubroutineUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveSubroutineName"u8)
                glGetActiveSubroutineName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUniformSubroutinesuiv"u8)
                glUniformSubroutinesuiv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetUniformSubroutineuiv"u8)
                glGetUniformSubroutineuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramStageiv"u8)
                glGetProgramStageiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPatchParameteri"u8)
                glPatchParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPatchParameterfv"u8)
                glPatchParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindTransformFeedback"u8)
                glBindTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteTransformFeedbacks"u8)
                glDeleteTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenTransformFeedbacks"u8)
                glGenTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsTransformFeedback"u8)
                glIsTransformFeedback = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glPauseTransformFeedback"u8)
                glPauseTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glResumeTransformFeedback"u8)
                glResumeTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawTransformFeedback"u8)
                glDrawTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawTransformFeedbackStream"u8)
                glDrawTransformFeedbackStream = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBeginQueryIndexed"u8)
                glBeginQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEndQueryIndexed"u8)
                glEndQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryIndexediv"u8)
                glGetQueryIndexediv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version41)
        {
            fixed(byte* name = "glReleaseShaderCompiler"u8)
                glReleaseShaderCompiler = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glShaderBinary"u8)
                glShaderBinary = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetShaderPrecisionFormat"u8)
                glGetShaderPrecisionFormat = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDepthRangef"u8)
                glDepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearDepthf"u8)
                glClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramBinary"u8)
                glGetProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramBinary"u8)
                glProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramParameteri"u8)
                glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glUseProgramStages"u8)
                glUseProgramStages = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glActiveShaderProgram"u8)
                glActiveShaderProgram = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateShaderProgramv"u8)
                glCreateShaderProgramv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glBindProgramPipeline"u8)
                glBindProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDeleteProgramPipelines"u8)
                glDeleteProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenProgramPipelines"u8)
                glGenProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glIsProgramPipeline"u8)
                glIsProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glGetProgramPipelineiv"u8)
                glGetProgramPipelineiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramParameteri"u8)
                glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1i"u8)
                glProgramUniform1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1iv"u8)
                glProgramUniform1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1f"u8)
                glProgramUniform1f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1fv"u8)
                glProgramUniform1fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1d"u8)
                glProgramUniform1d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1dv"u8)
                glProgramUniform1dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1ui"u8)
                glProgramUniform1ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform1uiv"u8)
                glProgramUniform1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2i"u8)
                glProgramUniform2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2iv"u8)
                glProgramUniform2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2f"u8)
                glProgramUniform2f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2fv"u8)
                glProgramUniform2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2d"u8)
                glProgramUniform2d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2dv"u8)
                glProgramUniform2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2ui"u8)
                glProgramUniform2ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform2uiv"u8)
                glProgramUniform2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3i"u8)
                glProgramUniform3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3iv"u8)
                glProgramUniform3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3f"u8)
                glProgramUniform3f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3fv"u8)
                glProgramUniform3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3d"u8)
                glProgramUniform3d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3dv"u8)
                glProgramUniform3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3ui"u8)
                glProgramUniform3ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform3uiv"u8)
                glProgramUniform3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4i"u8)
                glProgramUniform4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4iv"u8)
                glProgramUniform4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4f"u8)
                glProgramUniform4f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4fv"u8)
                glProgramUniform4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4d"u8)
                glProgramUniform4d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4dv"u8)
                glProgramUniform4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4ui"u8)
                glProgramUniform4ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniform4uiv"u8)
                glProgramUniform4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2fv"u8)
                glProgramUniformMatrix2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3fv"u8)
                glProgramUniformMatrix3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4fv"u8)
                glProgramUniformMatrix4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2dv"u8)
                glProgramUniformMatrix2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3dv"u8)
                glProgramUniformMatrix3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4dv"u8)
                glProgramUniformMatrix4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2x3fv"u8)
                glProgramUniformMatrix2x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3x2fv"u8)
                glProgramUniformMatrix3x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2x4fv"u8)
                glProgramUniformMatrix2x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4x2fv"u8)
                glProgramUniformMatrix4x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3x4fv"u8)
                glProgramUniformMatrix3x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4x3fv"u8)
                glProgramUniformMatrix4x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2x3dv"u8)
                glProgramUniformMatrix2x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3x2dv"u8)
                glProgramUniformMatrix3x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix2x4dv"u8)
                glProgramUniformMatrix2x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4x2dv"u8)
                glProgramUniformMatrix4x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix3x4dv"u8)
                glProgramUniformMatrix3x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glProgramUniformMatrix4x3dv"u8)
                glProgramUniformMatrix4x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glValidateProgramPipeline"u8)
                glValidateProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramPipelineInfoLog"u8)
                glGetProgramPipelineInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL1d"u8)
                glVertexAttribL1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL2d"u8)
                glVertexAttribL2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL3d"u8)
                glVertexAttribL3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL4d"u8)
                glVertexAttribL4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL1dv"u8)
                glVertexAttribL1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL2dv"u8)
                glVertexAttribL2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL3dv"u8)
                glVertexAttribL3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribL4dv"u8)
                glVertexAttribL4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribLPointer"u8)
                glVertexAttribLPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexAttribLdv"u8)
                glGetVertexAttribLdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glViewportArrayv"u8)
                glViewportArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glViewportIndexedf"u8)
                glViewportIndexedf = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glViewportIndexedfv"u8)
                glViewportIndexedfv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glScissorArrayv"u8)
                glScissorArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glScissorIndexed"u8)
                glScissorIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glScissorIndexedv"u8)
                glScissorIndexedv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDepthRangeArrayv"u8)
                glDepthRangeArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDepthRangeIndexed"u8)
                glDepthRangeIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetFloati_v"u8)
                glGetFloati_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetDoublei_v"u8)
                glGetDoublei_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
        }
        
        if(Version42)
        {
            fixed(byte* name = "glDrawArraysInstancedBaseInstance"u8)
                glDrawArraysInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElementsInstancedBaseInstance"u8)
                glDrawElementsInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawElementsInstancedBaseVertexBaseInstance"u8)
                glDrawElementsInstancedBaseVertexBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetInternalformativ"u8)
                glGetInternalformativ = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetActiveAtomicCounterBufferiv"u8)
                glGetActiveAtomicCounterBufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindImageTexture"u8)
                glBindImageTexture = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMemoryBarrier"u8)
                glMemoryBarrier = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexStorage1D"u8)
                glTexStorage1D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexStorage2D"u8)
                glTexStorage2D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexStorage3D"u8)
                glTexStorage3D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawTransformFeedbackInstanced"u8)
                glDrawTransformFeedbackInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDrawTransformFeedbackStreamInstanced"u8)
                glDrawTransformFeedbackStreamInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version43)
        {
            fixed(byte* name = "glClearBufferData"u8)
                glClearBufferData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearBufferSubData"u8)
                glClearBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDispatchCompute"u8)
                glDispatchCompute = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDispatchComputeIndirect"u8)
                glDispatchComputeIndirect = (delegate* unmanaged</* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyImageSubData"u8)
                glCopyImageSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glFramebufferParameteri"u8)
                glFramebufferParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetFramebufferParameteriv"u8)
                glGetFramebufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetInternalformati64v"u8)
                glGetInternalformati64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateTexSubImage"u8)
                glInvalidateTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateTexImage"u8)
                glInvalidateTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateBufferSubData"u8)
                glInvalidateBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateBufferData"u8)
                glInvalidateBufferData = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateFramebuffer"u8)
                glInvalidateFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateSubFramebuffer"u8)
                glInvalidateSubFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMultiDrawArraysIndirect"u8)
                glMultiDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMultiDrawElementsIndirect"u8)
                glMultiDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramInterfaceiv"u8)
                glGetProgramInterfaceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramResourceIndex"u8)
                glGetProgramResourceIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glGetProgramResourceName"u8)
                glGetProgramResourceName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramResourceiv"u8)
                glGetProgramResourceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetProgramResourceLocation"u8)
                glGetProgramResourceLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glGetProgramResourceLocationIndex"u8)
                glGetProgramResourceLocationIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = "glShaderStorageBlockBinding"u8)
                glShaderStorageBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexBufferRange"u8)
                glTexBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexStorage2DMultisample"u8)
                glTexStorage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTexStorage3DMultisample"u8)
                glTexStorage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureView"u8)
                glTextureView = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindVertexBuffer"u8)
                glBindVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribFormat"u8)
                glVertexAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribIFormat"u8)
                glVertexAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribLFormat"u8)
                glVertexAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexAttribBinding"u8)
                glVertexAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexBindingDivisor"u8)
                glVertexBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDebugMessageControl"u8)
                glDebugMessageControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDebugMessageInsert"u8)
                glDebugMessageInsert = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDebugMessageCallback"u8)
                glDebugMessageCallback = (delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetDebugMessageLog"u8)
                glGetDebugMessageLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = "glPushDebugGroup"u8)
                glPushDebugGroup = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glPopDebugGroup"u8)
                glPopDebugGroup = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = "glObjectLabel"u8)
                glObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetObjectLabel"u8)
                glGetObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glObjectPtrLabel"u8)
                glObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetObjectPtrLabel"u8)
                glGetObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
        }
        
        if(Version44)
        {
            fixed(byte* name = "glBufferStorage"u8)
                glBufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearTexImage"u8)
                glClearTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearTexSubImage"u8)
                glClearTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBuffersBase"u8)
                glBindBuffersBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindBuffersRange"u8)
                glBindBuffersRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizeiptr */ nint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindTextures"u8)
                glBindTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindSamplers"u8)
                glBindSamplers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindImageTextures"u8)
                glBindImageTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindVertexBuffers"u8)
                glBindVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version45)
        {
            fixed(byte* name = "glClipControl"u8)
                glClipControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateTransformFeedbacks"u8)
                glCreateTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTransformFeedbackBufferBase"u8)
                glTransformFeedbackBufferBase = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTransformFeedbackBufferRange"u8)
                glTransformFeedbackBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTransformFeedbackiv"u8)
                glGetTransformFeedbackiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTransformFeedbacki_v"u8)
                glGetTransformFeedbacki_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTransformFeedbacki64_v"u8)
                glGetTransformFeedbacki64_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateBuffers"u8)
                glCreateBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedBufferStorage"u8)
                glNamedBufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedBufferData"u8)
                glNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedBufferSubData"u8)
                glNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyNamedBufferSubData"u8)
                glCopyNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedBufferData"u8)
                glClearNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedBufferSubData"u8)
                glClearNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMapNamedBuffer"u8)
                glMapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = "glMapNamedBufferRange"u8)
                glMapNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = "glUnmapNamedBuffer"u8)
                glUnmapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = "glFlushMappedNamedBufferRange"u8)
                glFlushMappedNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedBufferParameteriv"u8)
                glGetNamedBufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedBufferParameteri64v"u8)
                glGetNamedBufferParameteri64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedBufferPointerv"u8)
                glGetNamedBufferPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedBufferSubData"u8)
                glGetNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateFramebuffers"u8)
                glCreateFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferRenderbuffer"u8)
                glNamedFramebufferRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferParameteri"u8)
                glNamedFramebufferParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferTexture"u8)
                glNamedFramebufferTexture = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferTextureLayer"u8)
                glNamedFramebufferTextureLayer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferDrawBuffer"u8)
                glNamedFramebufferDrawBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferDrawBuffers"u8)
                glNamedFramebufferDrawBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedFramebufferReadBuffer"u8)
                glNamedFramebufferReadBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateNamedFramebufferData"u8)
                glInvalidateNamedFramebufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glInvalidateNamedFramebufferSubData"u8)
                glInvalidateNamedFramebufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedFramebufferiv"u8)
                glClearNamedFramebufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedFramebufferuiv"u8)
                glClearNamedFramebufferuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedFramebufferfv"u8)
                glClearNamedFramebufferfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glClearNamedFramebufferfi"u8)
                glClearNamedFramebufferfi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBlitNamedFramebuffer"u8)
                glBlitNamedFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCheckNamedFramebufferStatus"u8)
                glCheckNamedFramebufferStatus = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = "glGetNamedFramebufferParameteriv"u8)
                glGetNamedFramebufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedFramebufferAttachmentParameteriv"u8)
                glGetNamedFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateRenderbuffers"u8)
                glCreateRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedRenderbufferStorage"u8)
                glNamedRenderbufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glNamedRenderbufferStorageMultisample"u8)
                glNamedRenderbufferStorageMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetNamedRenderbufferParameteriv"u8)
                glGetNamedRenderbufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateTextures"u8)
                glCreateTextures = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureBuffer"u8)
                glTextureBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureBufferRange"u8)
                glTextureBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureStorage1D"u8)
                glTextureStorage1D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureStorage2D"u8)
                glTextureStorage2D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureStorage3D"u8)
                glTextureStorage3D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureStorage2DMultisample"u8)
                glTextureStorage2DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureStorage3DMultisample"u8)
                glTextureStorage3DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureSubImage1D"u8)
                glTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureSubImage2D"u8)
                glTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureSubImage3D"u8)
                glTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTextureSubImage1D"u8)
                glCompressedTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTextureSubImage2D"u8)
                glCompressedTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCompressedTextureSubImage3D"u8)
                glCompressedTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTextureSubImage1D"u8)
                glCopyTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTextureSubImage2D"u8)
                glCopyTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCopyTextureSubImage3D"u8)
                glCopyTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameterf"u8)
                glTextureParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameterfv"u8)
                glTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameteri"u8)
                glTextureParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameterIiv"u8)
                glTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameterIuiv"u8)
                glTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureParameteriv"u8)
                glTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGenerateTextureMipmap"u8)
                glGenerateTextureMipmap = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glBindTextureUnit"u8)
                glBindTextureUnit = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureImage"u8)
                glGetTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetCompressedTextureImage"u8)
                glGetCompressedTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureLevelParameterfv"u8)
                glGetTextureLevelParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureLevelParameteriv"u8)
                glGetTextureLevelParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureParameterfv"u8)
                glGetTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureParameterIiv"u8)
                glGetTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureParameterIuiv"u8)
                glGetTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureParameteriv"u8)
                glGetTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateVertexArrays"u8)
                glCreateVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glDisableVertexArrayAttrib"u8)
                glDisableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glEnableVertexArrayAttrib"u8)
                glEnableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayElementBuffer"u8)
                glVertexArrayElementBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayVertexBuffer"u8)
                glVertexArrayVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayVertexBuffers"u8)
                glVertexArrayVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayAttribBinding"u8)
                glVertexArrayAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayAttribFormat"u8)
                glVertexArrayAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayAttribIFormat"u8)
                glVertexArrayAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayAttribLFormat"u8)
                glVertexArrayAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glVertexArrayBindingDivisor"u8)
                glVertexArrayBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexArrayiv"u8)
                glGetVertexArrayiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexArrayIndexediv"u8)
                glGetVertexArrayIndexediv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetVertexArrayIndexed64iv"u8)
                glGetVertexArrayIndexed64iv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateSamplers"u8)
                glCreateSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateProgramPipelines"u8)
                glCreateProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glCreateQueries"u8)
                glCreateQueries = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryBufferObjecti64v"u8)
                glGetQueryBufferObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryBufferObjectiv"u8)
                glGetQueryBufferObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryBufferObjectui64v"u8)
                glGetQueryBufferObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetQueryBufferObjectuiv"u8)
                glGetQueryBufferObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glMemoryBarrierByRegion"u8)
                glMemoryBarrierByRegion = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetTextureSubImage"u8)
                glGetTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetCompressedTextureSubImage"u8)
                glGetCompressedTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetGraphicsResetStatus"u8)
                glGetGraphicsResetStatus = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = "glGetnCompressedTexImage"u8)
                glGetnCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetnTexImage"u8)
                glGetnTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetnUniformdv"u8)
                glGetnUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetnUniformfv"u8)
                glGetnUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetnUniformiv"u8)
                glGetnUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glGetnUniformuiv"u8)
                glGetnUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glReadnPixels"u8)
                glReadnPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = "glTextureBarrier"u8)
                glTextureBarrier = (delegate* unmanaged</* void */ void>)loadFunc(name);
        }
        
    }
}
