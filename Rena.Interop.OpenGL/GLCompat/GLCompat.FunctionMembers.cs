namespace Rena.Interop.OpenGL;

public unsafe partial class GLCompat
{
    internal static ReadOnlySpan<byte> glCullFaceFunctionName => "glCullFace"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glCullFace;
    internal static ReadOnlySpan<byte> glFrontFaceFunctionName => "glFrontFace"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glFrontFace;
    internal static ReadOnlySpan<byte> glHintFunctionName => "glHint"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glHint;
    internal static ReadOnlySpan<byte> glLineWidthFunctionName => "glLineWidth"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glLineWidth;
    internal static ReadOnlySpan<byte> glPointSizeFunctionName => "glPointSize"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glPointSize;
    internal static ReadOnlySpan<byte> glPolygonModeFunctionName => "glPolygonMode"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glPolygonMode;
    internal static ReadOnlySpan<byte> glScissorFunctionName => "glScissor"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glScissor;
    internal static ReadOnlySpan<byte> glTexParameterfFunctionName => "glTexParameterf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexParameterf;
    internal static ReadOnlySpan<byte> glTexParameterfvFunctionName => "glTexParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexParameterfv;
    internal static ReadOnlySpan<byte> glTexParameteriFunctionName => "glTexParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexParameteri;
    internal static ReadOnlySpan<byte> glTexParameterivFunctionName => "glTexParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexParameteriv;
    internal static ReadOnlySpan<byte> glTexImage1DFunctionName => "glTexImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage1D;
    internal static ReadOnlySpan<byte> glTexImage2DFunctionName => "glTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage2D;
    internal static ReadOnlySpan<byte> glDrawBufferFunctionName => "glDrawBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDrawBuffer;
    internal static ReadOnlySpan<byte> glClearFunctionName => "glClear"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glClear;
    internal static ReadOnlySpan<byte> glClearColorFunctionName => "glClearColor"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glClearColor;
    internal static ReadOnlySpan<byte> glClearStencilFunctionName => "glClearStencil"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glClearStencil;
    internal static ReadOnlySpan<byte> glClearDepthFunctionName => "glClearDepth"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> glClearDepth;
    internal static ReadOnlySpan<byte> glStencilMaskFunctionName => "glStencilMask"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glStencilMask;
    internal static ReadOnlySpan<byte> glColorMaskFunctionName => "glColorMask"u8;
    private readonly delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> glColorMask;
    internal static ReadOnlySpan<byte> glDepthMaskFunctionName => "glDepthMask"u8;
    private readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> glDepthMask;
    internal static ReadOnlySpan<byte> glDisableFunctionName => "glDisable"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDisable;
    internal static ReadOnlySpan<byte> glEnableFunctionName => "glEnable"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEnable;
    internal static ReadOnlySpan<byte> glFinishFunctionName => "glFinish"u8;
    private readonly delegate* unmanaged</* void */ void> glFinish;
    internal static ReadOnlySpan<byte> glFlushFunctionName => "glFlush"u8;
    private readonly delegate* unmanaged</* void */ void> glFlush;
    internal static ReadOnlySpan<byte> glBlendFuncFunctionName => "glBlendFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFunc;
    internal static ReadOnlySpan<byte> glLogicOpFunctionName => "glLogicOp"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glLogicOp;
    internal static ReadOnlySpan<byte> glStencilFuncFunctionName => "glStencilFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glStencilFunc;
    internal static ReadOnlySpan<byte> glStencilOpFunctionName => "glStencilOp"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glStencilOp;
    internal static ReadOnlySpan<byte> glDepthFuncFunctionName => "glDepthFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDepthFunc;
    internal static ReadOnlySpan<byte> glPixelStorefFunctionName => "glPixelStoref"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glPixelStoref;
    internal static ReadOnlySpan<byte> glPixelStoreiFunctionName => "glPixelStorei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPixelStorei;
    internal static ReadOnlySpan<byte> glReadBufferFunctionName => "glReadBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glReadBuffer;
    internal static ReadOnlySpan<byte> glReadPixelsFunctionName => "glReadPixels"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glReadPixels;
    internal static ReadOnlySpan<byte> glGetBooleanvFunctionName => "glGetBooleanv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void> glGetBooleanv;
    internal static ReadOnlySpan<byte> glGetDoublevFunctionName => "glGetDoublev"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetDoublev;
    internal static ReadOnlySpan<byte> glGetErrorFunctionName => "glGetError"u8;
    private readonly delegate* unmanaged</* GLenum */ int> glGetError;
    internal static ReadOnlySpan<byte> glGetFloatvFunctionName => "glGetFloatv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetFloatv;
    internal static ReadOnlySpan<byte> glGetIntegervFunctionName => "glGetIntegerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glGetIntegerv;
    internal static ReadOnlySpan<byte> glGetStringFunctionName => "glGetString"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*> glGetString;
    internal static ReadOnlySpan<byte> glGetTexImageFunctionName => "glGetTexImage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glGetTexImage;
    internal static ReadOnlySpan<byte> glGetTexParameterfvFunctionName => "glGetTexParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexParameterfv;
    internal static ReadOnlySpan<byte> glGetTexParameterivFunctionName => "glGetTexParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexParameteriv;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterfvFunctionName => "glGetTexLevelParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexLevelParameterfv;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterivFunctionName => "glGetTexLevelParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexLevelParameteriv;
    internal static ReadOnlySpan<byte> glIsEnabledFunctionName => "glIsEnabled"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> glIsEnabled;
    internal static ReadOnlySpan<byte> glDepthRangeFunctionName => "glDepthRange"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glDepthRange;
    internal static ReadOnlySpan<byte> glViewportFunctionName => "glViewport"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glViewport;
    internal static ReadOnlySpan<byte> glNewListFunctionName => "glNewList"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glNewList;
    internal static ReadOnlySpan<byte> glEndListFunctionName => "glEndList"u8;
    private readonly delegate* unmanaged</* void */ void> glEndList;
    internal static ReadOnlySpan<byte> glCallListFunctionName => "glCallList"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glCallList;
    internal static ReadOnlySpan<byte> glCallListsFunctionName => "glCallLists"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glCallLists;
    internal static ReadOnlySpan<byte> glDeleteListsFunctionName => "glDeleteLists"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* void */ void> glDeleteLists;
    internal static ReadOnlySpan<byte> glGenListsFunctionName => "glGenLists"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint> glGenLists;
    internal static ReadOnlySpan<byte> glListBaseFunctionName => "glListBase"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glListBase;
    internal static ReadOnlySpan<byte> glBeginFunctionName => "glBegin"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glBegin;
    internal static ReadOnlySpan<byte> glBitmapFunctionName => "glBitmap"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLubyte */ byte*, /* void */ void> glBitmap;
    internal static ReadOnlySpan<byte> glColor3bFunctionName => "glColor3b"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> glColor3b;
    internal static ReadOnlySpan<byte> glColor3bvFunctionName => "glColor3bv"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> glColor3bv;
    internal static ReadOnlySpan<byte> glColor3dFunctionName => "glColor3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glColor3d;
    internal static ReadOnlySpan<byte> glColor3dvFunctionName => "glColor3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glColor3dv;
    internal static ReadOnlySpan<byte> glColor3fFunctionName => "glColor3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glColor3f;
    internal static ReadOnlySpan<byte> glColor3fvFunctionName => "glColor3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glColor3fv;
    internal static ReadOnlySpan<byte> glColor3iFunctionName => "glColor3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glColor3i;
    internal static ReadOnlySpan<byte> glColor3ivFunctionName => "glColor3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glColor3iv;
    internal static ReadOnlySpan<byte> glColor3sFunctionName => "glColor3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glColor3s;
    internal static ReadOnlySpan<byte> glColor3svFunctionName => "glColor3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glColor3sv;
    internal static ReadOnlySpan<byte> glColor3ubFunctionName => "glColor3ub"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> glColor3ub;
    internal static ReadOnlySpan<byte> glColor3ubvFunctionName => "glColor3ubv"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glColor3ubv;
    internal static ReadOnlySpan<byte> glColor3uiFunctionName => "glColor3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glColor3ui;
    internal static ReadOnlySpan<byte> glColor3uivFunctionName => "glColor3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> glColor3uiv;
    internal static ReadOnlySpan<byte> glColor3usFunctionName => "glColor3us"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> glColor3us;
    internal static ReadOnlySpan<byte> glColor3usvFunctionName => "glColor3usv"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> glColor3usv;
    internal static ReadOnlySpan<byte> glColor4bFunctionName => "glColor4b"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> glColor4b;
    internal static ReadOnlySpan<byte> glColor4bvFunctionName => "glColor4bv"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> glColor4bv;
    internal static ReadOnlySpan<byte> glColor4dFunctionName => "glColor4d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glColor4d;
    internal static ReadOnlySpan<byte> glColor4dvFunctionName => "glColor4dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glColor4dv;
    internal static ReadOnlySpan<byte> glColor4fFunctionName => "glColor4f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glColor4f;
    internal static ReadOnlySpan<byte> glColor4fvFunctionName => "glColor4fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glColor4fv;
    internal static ReadOnlySpan<byte> glColor4iFunctionName => "glColor4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glColor4i;
    internal static ReadOnlySpan<byte> glColor4ivFunctionName => "glColor4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glColor4iv;
    internal static ReadOnlySpan<byte> glColor4sFunctionName => "glColor4s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glColor4s;
    internal static ReadOnlySpan<byte> glColor4svFunctionName => "glColor4sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glColor4sv;
    internal static ReadOnlySpan<byte> glColor4ubFunctionName => "glColor4ub"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> glColor4ub;
    internal static ReadOnlySpan<byte> glColor4ubvFunctionName => "glColor4ubv"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glColor4ubv;
    internal static ReadOnlySpan<byte> glColor4uiFunctionName => "glColor4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glColor4ui;
    internal static ReadOnlySpan<byte> glColor4uivFunctionName => "glColor4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> glColor4uiv;
    internal static ReadOnlySpan<byte> glColor4usFunctionName => "glColor4us"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> glColor4us;
    internal static ReadOnlySpan<byte> glColor4usvFunctionName => "glColor4usv"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> glColor4usv;
    internal static ReadOnlySpan<byte> glEdgeFlagFunctionName => "glEdgeFlag"u8;
    private readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> glEdgeFlag;
    internal static ReadOnlySpan<byte> glEdgeFlagvFunctionName => "glEdgeFlagv"u8;
    private readonly delegate* unmanaged</* GLboolean */ int*, /* void */ void> glEdgeFlagv;
    internal static ReadOnlySpan<byte> glEndFunctionName => "glEnd"u8;
    private readonly delegate* unmanaged</* void */ void> glEnd;
    internal static ReadOnlySpan<byte> glIndexdFunctionName => "glIndexd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> glIndexd;
    internal static ReadOnlySpan<byte> glIndexdvFunctionName => "glIndexdv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glIndexdv;
    internal static ReadOnlySpan<byte> glIndexfFunctionName => "glIndexf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glIndexf;
    internal static ReadOnlySpan<byte> glIndexfvFunctionName => "glIndexfv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glIndexfv;
    internal static ReadOnlySpan<byte> glIndexiFunctionName => "glIndexi"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glIndexi;
    internal static ReadOnlySpan<byte> glIndexivFunctionName => "glIndexiv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glIndexiv;
    internal static ReadOnlySpan<byte> glIndexsFunctionName => "glIndexs"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* void */ void> glIndexs;
    internal static ReadOnlySpan<byte> glIndexsvFunctionName => "glIndexsv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glIndexsv;
    internal static ReadOnlySpan<byte> glNormal3bFunctionName => "glNormal3b"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> glNormal3b;
    internal static ReadOnlySpan<byte> glNormal3bvFunctionName => "glNormal3bv"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> glNormal3bv;
    internal static ReadOnlySpan<byte> glNormal3dFunctionName => "glNormal3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glNormal3d;
    internal static ReadOnlySpan<byte> glNormal3dvFunctionName => "glNormal3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glNormal3dv;
    internal static ReadOnlySpan<byte> glNormal3fFunctionName => "glNormal3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glNormal3f;
    internal static ReadOnlySpan<byte> glNormal3fvFunctionName => "glNormal3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glNormal3fv;
    internal static ReadOnlySpan<byte> glNormal3iFunctionName => "glNormal3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glNormal3i;
    internal static ReadOnlySpan<byte> glNormal3ivFunctionName => "glNormal3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glNormal3iv;
    internal static ReadOnlySpan<byte> glNormal3sFunctionName => "glNormal3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glNormal3s;
    internal static ReadOnlySpan<byte> glNormal3svFunctionName => "glNormal3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glNormal3sv;
    internal static ReadOnlySpan<byte> glRasterPos2dFunctionName => "glRasterPos2d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glRasterPos2d;
    internal static ReadOnlySpan<byte> glRasterPos2dvFunctionName => "glRasterPos2dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glRasterPos2dv;
    internal static ReadOnlySpan<byte> glRasterPos2fFunctionName => "glRasterPos2f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRasterPos2f;
    internal static ReadOnlySpan<byte> glRasterPos2fvFunctionName => "glRasterPos2fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glRasterPos2fv;
    internal static ReadOnlySpan<byte> glRasterPos2iFunctionName => "glRasterPos2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glRasterPos2i;
    internal static ReadOnlySpan<byte> glRasterPos2ivFunctionName => "glRasterPos2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glRasterPos2iv;
    internal static ReadOnlySpan<byte> glRasterPos2sFunctionName => "glRasterPos2s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> glRasterPos2s;
    internal static ReadOnlySpan<byte> glRasterPos2svFunctionName => "glRasterPos2sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glRasterPos2sv;
    internal static ReadOnlySpan<byte> glRasterPos3dFunctionName => "glRasterPos3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glRasterPos3d;
    internal static ReadOnlySpan<byte> glRasterPos3dvFunctionName => "glRasterPos3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glRasterPos3dv;
    internal static ReadOnlySpan<byte> glRasterPos3fFunctionName => "glRasterPos3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRasterPos3f;
    internal static ReadOnlySpan<byte> glRasterPos3fvFunctionName => "glRasterPos3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glRasterPos3fv;
    internal static ReadOnlySpan<byte> glRasterPos3iFunctionName => "glRasterPos3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glRasterPos3i;
    internal static ReadOnlySpan<byte> glRasterPos3ivFunctionName => "glRasterPos3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glRasterPos3iv;
    internal static ReadOnlySpan<byte> glRasterPos3sFunctionName => "glRasterPos3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glRasterPos3s;
    internal static ReadOnlySpan<byte> glRasterPos3svFunctionName => "glRasterPos3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glRasterPos3sv;
    internal static ReadOnlySpan<byte> glRasterPos4dFunctionName => "glRasterPos4d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glRasterPos4d;
    internal static ReadOnlySpan<byte> glRasterPos4dvFunctionName => "glRasterPos4dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glRasterPos4dv;
    internal static ReadOnlySpan<byte> glRasterPos4fFunctionName => "glRasterPos4f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRasterPos4f;
    internal static ReadOnlySpan<byte> glRasterPos4fvFunctionName => "glRasterPos4fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glRasterPos4fv;
    internal static ReadOnlySpan<byte> glRasterPos4iFunctionName => "glRasterPos4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glRasterPos4i;
    internal static ReadOnlySpan<byte> glRasterPos4ivFunctionName => "glRasterPos4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glRasterPos4iv;
    internal static ReadOnlySpan<byte> glRasterPos4sFunctionName => "glRasterPos4s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glRasterPos4s;
    internal static ReadOnlySpan<byte> glRasterPos4svFunctionName => "glRasterPos4sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glRasterPos4sv;
    internal static ReadOnlySpan<byte> glRectdFunctionName => "glRectd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glRectd;
    internal static ReadOnlySpan<byte> glRectdvFunctionName => "glRectdv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* GLdouble */ double*, /* void */ void> glRectdv;
    internal static ReadOnlySpan<byte> glRectfFunctionName => "glRectf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRectf;
    internal static ReadOnlySpan<byte> glRectfvFunctionName => "glRectfv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* GLfloat */ float*, /* void */ void> glRectfv;
    internal static ReadOnlySpan<byte> glRectiFunctionName => "glRecti"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glRecti;
    internal static ReadOnlySpan<byte> glRectivFunctionName => "glRectiv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* GLint */ int*, /* void */ void> glRectiv;
    internal static ReadOnlySpan<byte> glRectsFunctionName => "glRects"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glRects;
    internal static ReadOnlySpan<byte> glRectsvFunctionName => "glRectsv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* GLshort */ short*, /* void */ void> glRectsv;
    internal static ReadOnlySpan<byte> glTexCoord1dFunctionName => "glTexCoord1d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> glTexCoord1d;
    internal static ReadOnlySpan<byte> glTexCoord1dvFunctionName => "glTexCoord1dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glTexCoord1dv;
    internal static ReadOnlySpan<byte> glTexCoord1fFunctionName => "glTexCoord1f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glTexCoord1f;
    internal static ReadOnlySpan<byte> glTexCoord1fvFunctionName => "glTexCoord1fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glTexCoord1fv;
    internal static ReadOnlySpan<byte> glTexCoord1iFunctionName => "glTexCoord1i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glTexCoord1i;
    internal static ReadOnlySpan<byte> glTexCoord1ivFunctionName => "glTexCoord1iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glTexCoord1iv;
    internal static ReadOnlySpan<byte> glTexCoord1sFunctionName => "glTexCoord1s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* void */ void> glTexCoord1s;
    internal static ReadOnlySpan<byte> glTexCoord1svFunctionName => "glTexCoord1sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glTexCoord1sv;
    internal static ReadOnlySpan<byte> glTexCoord2dFunctionName => "glTexCoord2d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glTexCoord2d;
    internal static ReadOnlySpan<byte> glTexCoord2dvFunctionName => "glTexCoord2dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glTexCoord2dv;
    internal static ReadOnlySpan<byte> glTexCoord2fFunctionName => "glTexCoord2f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glTexCoord2f;
    internal static ReadOnlySpan<byte> glTexCoord2fvFunctionName => "glTexCoord2fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glTexCoord2fv;
    internal static ReadOnlySpan<byte> glTexCoord2iFunctionName => "glTexCoord2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glTexCoord2i;
    internal static ReadOnlySpan<byte> glTexCoord2ivFunctionName => "glTexCoord2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glTexCoord2iv;
    internal static ReadOnlySpan<byte> glTexCoord2sFunctionName => "glTexCoord2s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> glTexCoord2s;
    internal static ReadOnlySpan<byte> glTexCoord2svFunctionName => "glTexCoord2sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glTexCoord2sv;
    internal static ReadOnlySpan<byte> glTexCoord3dFunctionName => "glTexCoord3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glTexCoord3d;
    internal static ReadOnlySpan<byte> glTexCoord3dvFunctionName => "glTexCoord3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glTexCoord3dv;
    internal static ReadOnlySpan<byte> glTexCoord3fFunctionName => "glTexCoord3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glTexCoord3f;
    internal static ReadOnlySpan<byte> glTexCoord3fvFunctionName => "glTexCoord3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glTexCoord3fv;
    internal static ReadOnlySpan<byte> glTexCoord3iFunctionName => "glTexCoord3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glTexCoord3i;
    internal static ReadOnlySpan<byte> glTexCoord3ivFunctionName => "glTexCoord3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glTexCoord3iv;
    internal static ReadOnlySpan<byte> glTexCoord3sFunctionName => "glTexCoord3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glTexCoord3s;
    internal static ReadOnlySpan<byte> glTexCoord3svFunctionName => "glTexCoord3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glTexCoord3sv;
    internal static ReadOnlySpan<byte> glTexCoord4dFunctionName => "glTexCoord4d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glTexCoord4d;
    internal static ReadOnlySpan<byte> glTexCoord4dvFunctionName => "glTexCoord4dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glTexCoord4dv;
    internal static ReadOnlySpan<byte> glTexCoord4fFunctionName => "glTexCoord4f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glTexCoord4f;
    internal static ReadOnlySpan<byte> glTexCoord4fvFunctionName => "glTexCoord4fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glTexCoord4fv;
    internal static ReadOnlySpan<byte> glTexCoord4iFunctionName => "glTexCoord4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glTexCoord4i;
    internal static ReadOnlySpan<byte> glTexCoord4ivFunctionName => "glTexCoord4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glTexCoord4iv;
    internal static ReadOnlySpan<byte> glTexCoord4sFunctionName => "glTexCoord4s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glTexCoord4s;
    internal static ReadOnlySpan<byte> glTexCoord4svFunctionName => "glTexCoord4sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glTexCoord4sv;
    internal static ReadOnlySpan<byte> glVertex2dFunctionName => "glVertex2d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertex2d;
    internal static ReadOnlySpan<byte> glVertex2dvFunctionName => "glVertex2dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glVertex2dv;
    internal static ReadOnlySpan<byte> glVertex2fFunctionName => "glVertex2f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertex2f;
    internal static ReadOnlySpan<byte> glVertex2fvFunctionName => "glVertex2fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glVertex2fv;
    internal static ReadOnlySpan<byte> glVertex2iFunctionName => "glVertex2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glVertex2i;
    internal static ReadOnlySpan<byte> glVertex2ivFunctionName => "glVertex2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glVertex2iv;
    internal static ReadOnlySpan<byte> glVertex2sFunctionName => "glVertex2s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> glVertex2s;
    internal static ReadOnlySpan<byte> glVertex2svFunctionName => "glVertex2sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glVertex2sv;
    internal static ReadOnlySpan<byte> glVertex3dFunctionName => "glVertex3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertex3d;
    internal static ReadOnlySpan<byte> glVertex3dvFunctionName => "glVertex3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glVertex3dv;
    internal static ReadOnlySpan<byte> glVertex3fFunctionName => "glVertex3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertex3f;
    internal static ReadOnlySpan<byte> glVertex3fvFunctionName => "glVertex3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glVertex3fv;
    internal static ReadOnlySpan<byte> glVertex3iFunctionName => "glVertex3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glVertex3i;
    internal static ReadOnlySpan<byte> glVertex3ivFunctionName => "glVertex3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glVertex3iv;
    internal static ReadOnlySpan<byte> glVertex3sFunctionName => "glVertex3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glVertex3s;
    internal static ReadOnlySpan<byte> glVertex3svFunctionName => "glVertex3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glVertex3sv;
    internal static ReadOnlySpan<byte> glVertex4dFunctionName => "glVertex4d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertex4d;
    internal static ReadOnlySpan<byte> glVertex4dvFunctionName => "glVertex4dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glVertex4dv;
    internal static ReadOnlySpan<byte> glVertex4fFunctionName => "glVertex4f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertex4f;
    internal static ReadOnlySpan<byte> glVertex4fvFunctionName => "glVertex4fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glVertex4fv;
    internal static ReadOnlySpan<byte> glVertex4iFunctionName => "glVertex4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glVertex4i;
    internal static ReadOnlySpan<byte> glVertex4ivFunctionName => "glVertex4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glVertex4iv;
    internal static ReadOnlySpan<byte> glVertex4sFunctionName => "glVertex4s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glVertex4s;
    internal static ReadOnlySpan<byte> glVertex4svFunctionName => "glVertex4sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glVertex4sv;
    internal static ReadOnlySpan<byte> glClipPlaneFunctionName => "glClipPlane"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glClipPlane;
    internal static ReadOnlySpan<byte> glColorMaterialFunctionName => "glColorMaterial"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glColorMaterial;
    internal static ReadOnlySpan<byte> glFogfFunctionName => "glFogf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glFogf;
    internal static ReadOnlySpan<byte> glFogfvFunctionName => "glFogfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glFogfv;
    internal static ReadOnlySpan<byte> glFogiFunctionName => "glFogi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glFogi;
    internal static ReadOnlySpan<byte> glFogivFunctionName => "glFogiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glFogiv;
    internal static ReadOnlySpan<byte> glLightfFunctionName => "glLightf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glLightf;
    internal static ReadOnlySpan<byte> glLightfvFunctionName => "glLightfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glLightfv;
    internal static ReadOnlySpan<byte> glLightiFunctionName => "glLighti"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glLighti;
    internal static ReadOnlySpan<byte> glLightivFunctionName => "glLightiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glLightiv;
    internal static ReadOnlySpan<byte> glLightModelfFunctionName => "glLightModelf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glLightModelf;
    internal static ReadOnlySpan<byte> glLightModelfvFunctionName => "glLightModelfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glLightModelfv;
    internal static ReadOnlySpan<byte> glLightModeliFunctionName => "glLightModeli"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glLightModeli;
    internal static ReadOnlySpan<byte> glLightModelivFunctionName => "glLightModeliv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glLightModeliv;
    internal static ReadOnlySpan<byte> glLineStippleFunctionName => "glLineStipple"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLushort */ ushort, /* void */ void> glLineStipple;
    internal static ReadOnlySpan<byte> glMaterialfFunctionName => "glMaterialf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glMaterialf;
    internal static ReadOnlySpan<byte> glMaterialfvFunctionName => "glMaterialfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMaterialfv;
    internal static ReadOnlySpan<byte> glMaterialiFunctionName => "glMateriali"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glMateriali;
    internal static ReadOnlySpan<byte> glMaterialivFunctionName => "glMaterialiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glMaterialiv;
    internal static ReadOnlySpan<byte> glPolygonStippleFunctionName => "glPolygonStipple"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glPolygonStipple;
    internal static ReadOnlySpan<byte> glShadeModelFunctionName => "glShadeModel"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glShadeModel;
    internal static ReadOnlySpan<byte> glTexEnvfFunctionName => "glTexEnvf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexEnvf;
    internal static ReadOnlySpan<byte> glTexEnvfvFunctionName => "glTexEnvfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexEnvfv;
    internal static ReadOnlySpan<byte> glTexEnviFunctionName => "glTexEnvi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexEnvi;
    internal static ReadOnlySpan<byte> glTexEnvivFunctionName => "glTexEnviv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexEnviv;
    internal static ReadOnlySpan<byte> glTexGendFunctionName => "glTexGend"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double, /* void */ void> glTexGend;
    internal static ReadOnlySpan<byte> glTexGendvFunctionName => "glTexGendv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> glTexGendv;
    internal static ReadOnlySpan<byte> glTexGenfFunctionName => "glTexGenf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTexGenf;
    internal static ReadOnlySpan<byte> glTexGenfvFunctionName => "glTexGenfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTexGenfv;
    internal static ReadOnlySpan<byte> glTexGeniFunctionName => "glTexGeni"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glTexGeni;
    internal static ReadOnlySpan<byte> glTexGenivFunctionName => "glTexGeniv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexGeniv;
    internal static ReadOnlySpan<byte> glFeedbackBufferFunctionName => "glFeedbackBuffer"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glFeedbackBuffer;
    internal static ReadOnlySpan<byte> glSelectBufferFunctionName => "glSelectBuffer"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glSelectBuffer;
    internal static ReadOnlySpan<byte> glRenderModeFunctionName => "glRenderMode"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int> glRenderMode;
    internal static ReadOnlySpan<byte> glInitNamesFunctionName => "glInitNames"u8;
    private readonly delegate* unmanaged</* void */ void> glInitNames;
    internal static ReadOnlySpan<byte> glLoadNameFunctionName => "glLoadName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glLoadName;
    internal static ReadOnlySpan<byte> glPassThroughFunctionName => "glPassThrough"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glPassThrough;
    internal static ReadOnlySpan<byte> glPopNameFunctionName => "glPopName"u8;
    private readonly delegate* unmanaged</* void */ void> glPopName;
    internal static ReadOnlySpan<byte> glPushNameFunctionName => "glPushName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glPushName;
    internal static ReadOnlySpan<byte> glClearAccumFunctionName => "glClearAccum"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glClearAccum;
    internal static ReadOnlySpan<byte> glClearIndexFunctionName => "glClearIndex"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glClearIndex;
    internal static ReadOnlySpan<byte> glIndexMaskFunctionName => "glIndexMask"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glIndexMask;
    internal static ReadOnlySpan<byte> glAccumFunctionName => "glAccum"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glAccum;
    internal static ReadOnlySpan<byte> glPopAttribFunctionName => "glPopAttrib"u8;
    private readonly delegate* unmanaged</* void */ void> glPopAttrib;
    internal static ReadOnlySpan<byte> glPushAttribFunctionName => "glPushAttrib"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glPushAttrib;
    internal static ReadOnlySpan<byte> glMap1dFunctionName => "glMap1d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void> glMap1d;
    internal static ReadOnlySpan<byte> glMap1fFunctionName => "glMap1f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glMap1f;
    internal static ReadOnlySpan<byte> glMap2dFunctionName => "glMap2d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void> glMap2d;
    internal static ReadOnlySpan<byte> glMap2fFunctionName => "glMap2f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glMap2f;
    internal static ReadOnlySpan<byte> glMapGrid1dFunctionName => "glMapGrid1d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glMapGrid1d;
    internal static ReadOnlySpan<byte> glMapGrid1fFunctionName => "glMapGrid1f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMapGrid1f;
    internal static ReadOnlySpan<byte> glMapGrid2dFunctionName => "glMapGrid2d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glMapGrid2d;
    internal static ReadOnlySpan<byte> glMapGrid2fFunctionName => "glMapGrid2f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMapGrid2f;
    internal static ReadOnlySpan<byte> glEvalCoord1dFunctionName => "glEvalCoord1d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> glEvalCoord1d;
    internal static ReadOnlySpan<byte> glEvalCoord1dvFunctionName => "glEvalCoord1dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glEvalCoord1dv;
    internal static ReadOnlySpan<byte> glEvalCoord1fFunctionName => "glEvalCoord1f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glEvalCoord1f;
    internal static ReadOnlySpan<byte> glEvalCoord1fvFunctionName => "glEvalCoord1fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glEvalCoord1fv;
    internal static ReadOnlySpan<byte> glEvalCoord2dFunctionName => "glEvalCoord2d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glEvalCoord2d;
    internal static ReadOnlySpan<byte> glEvalCoord2dvFunctionName => "glEvalCoord2dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glEvalCoord2dv;
    internal static ReadOnlySpan<byte> glEvalCoord2fFunctionName => "glEvalCoord2f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glEvalCoord2f;
    internal static ReadOnlySpan<byte> glEvalCoord2fvFunctionName => "glEvalCoord2fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glEvalCoord2fv;
    internal static ReadOnlySpan<byte> glEvalMesh1FunctionName => "glEvalMesh1"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glEvalMesh1;
    internal static ReadOnlySpan<byte> glEvalPoint1FunctionName => "glEvalPoint1"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glEvalPoint1;
    internal static ReadOnlySpan<byte> glEvalMesh2FunctionName => "glEvalMesh2"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glEvalMesh2;
    internal static ReadOnlySpan<byte> glEvalPoint2FunctionName => "glEvalPoint2"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glEvalPoint2;
    internal static ReadOnlySpan<byte> glAlphaFuncFunctionName => "glAlphaFunc"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glAlphaFunc;
    internal static ReadOnlySpan<byte> glPixelZoomFunctionName => "glPixelZoom"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPixelZoom;
    internal static ReadOnlySpan<byte> glPixelTransferfFunctionName => "glPixelTransferf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glPixelTransferf;
    internal static ReadOnlySpan<byte> glPixelTransferiFunctionName => "glPixelTransferi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPixelTransferi;
    internal static ReadOnlySpan<byte> glPixelMapfvFunctionName => "glPixelMapfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glPixelMapfv;
    internal static ReadOnlySpan<byte> glPixelMapuivFunctionName => "glPixelMapuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glPixelMapuiv;
    internal static ReadOnlySpan<byte> glPixelMapusvFunctionName => "glPixelMapusv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void> glPixelMapusv;
    internal static ReadOnlySpan<byte> glCopyPixelsFunctionName => "glCopyPixels"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void> glCopyPixels;
    internal static ReadOnlySpan<byte> glDrawPixelsFunctionName => "glDrawPixels"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawPixels;
    internal static ReadOnlySpan<byte> glGetClipPlaneFunctionName => "glGetClipPlane"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetClipPlane;
    internal static ReadOnlySpan<byte> glGetLightfvFunctionName => "glGetLightfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetLightfv;
    internal static ReadOnlySpan<byte> glGetLightivFunctionName => "glGetLightiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetLightiv;
    internal static ReadOnlySpan<byte> glGetMapdvFunctionName => "glGetMapdv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetMapdv;
    internal static ReadOnlySpan<byte> glGetMapfvFunctionName => "glGetMapfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetMapfv;
    internal static ReadOnlySpan<byte> glGetMapivFunctionName => "glGetMapiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetMapiv;
    internal static ReadOnlySpan<byte> glGetMaterialfvFunctionName => "glGetMaterialfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetMaterialfv;
    internal static ReadOnlySpan<byte> glGetMaterialivFunctionName => "glGetMaterialiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetMaterialiv;
    internal static ReadOnlySpan<byte> glGetPixelMapfvFunctionName => "glGetPixelMapfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetPixelMapfv;
    internal static ReadOnlySpan<byte> glGetPixelMapuivFunctionName => "glGetPixelMapuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetPixelMapuiv;
    internal static ReadOnlySpan<byte> glGetPixelMapusvFunctionName => "glGetPixelMapusv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLushort */ ushort*, /* void */ void> glGetPixelMapusv;
    internal static ReadOnlySpan<byte> glGetPolygonStippleFunctionName => "glGetPolygonStipple"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glGetPolygonStipple;
    internal static ReadOnlySpan<byte> glGetTexEnvfvFunctionName => "glGetTexEnvfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexEnvfv;
    internal static ReadOnlySpan<byte> glGetTexEnvivFunctionName => "glGetTexEnviv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexEnviv;
    internal static ReadOnlySpan<byte> glGetTexGendvFunctionName => "glGetTexGendv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetTexGendv;
    internal static ReadOnlySpan<byte> glGetTexGenfvFunctionName => "glGetTexGenfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTexGenfv;
    internal static ReadOnlySpan<byte> glGetTexGenivFunctionName => "glGetTexGeniv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexGeniv;
    internal static ReadOnlySpan<byte> glIsListFunctionName => "glIsList"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsList;
    internal static ReadOnlySpan<byte> glFrustumFunctionName => "glFrustum"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glFrustum;
    internal static ReadOnlySpan<byte> glLoadIdentityFunctionName => "glLoadIdentity"u8;
    private readonly delegate* unmanaged</* void */ void> glLoadIdentity;
    internal static ReadOnlySpan<byte> glLoadMatrixfFunctionName => "glLoadMatrixf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glLoadMatrixf;
    internal static ReadOnlySpan<byte> glLoadMatrixdFunctionName => "glLoadMatrixd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glLoadMatrixd;
    internal static ReadOnlySpan<byte> glMatrixModeFunctionName => "glMatrixMode"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glMatrixMode;
    internal static ReadOnlySpan<byte> glMultMatrixfFunctionName => "glMultMatrixf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glMultMatrixf;
    internal static ReadOnlySpan<byte> glMultMatrixdFunctionName => "glMultMatrixd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glMultMatrixd;
    internal static ReadOnlySpan<byte> glOrthoFunctionName => "glOrtho"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glOrtho;
    internal static ReadOnlySpan<byte> glPopMatrixFunctionName => "glPopMatrix"u8;
    private readonly delegate* unmanaged</* void */ void> glPopMatrix;
    internal static ReadOnlySpan<byte> glPushMatrixFunctionName => "glPushMatrix"u8;
    private readonly delegate* unmanaged</* void */ void> glPushMatrix;
    internal static ReadOnlySpan<byte> glRotatedFunctionName => "glRotated"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glRotated;
    internal static ReadOnlySpan<byte> glRotatefFunctionName => "glRotatef"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glRotatef;
    internal static ReadOnlySpan<byte> glScaledFunctionName => "glScaled"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glScaled;
    internal static ReadOnlySpan<byte> glScalefFunctionName => "glScalef"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glScalef;
    internal static ReadOnlySpan<byte> glTranslatedFunctionName => "glTranslated"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glTranslated;
    internal static ReadOnlySpan<byte> glTranslatefFunctionName => "glTranslatef"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glTranslatef;
    internal static ReadOnlySpan<byte> glDrawArraysFunctionName => "glDrawArrays"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> glDrawArrays;
    internal static ReadOnlySpan<byte> glDrawElementsFunctionName => "glDrawElements"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawElements;
    internal static ReadOnlySpan<byte> glGetPointervFunctionName => "glGetPointerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void> glGetPointerv;
    internal static ReadOnlySpan<byte> glPolygonOffsetFunctionName => "glPolygonOffset"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPolygonOffset;
    internal static ReadOnlySpan<byte> glCopyTexImage1DFunctionName => "glCopyTexImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> glCopyTexImage1D;
    internal static ReadOnlySpan<byte> glCopyTexImage2DFunctionName => "glCopyTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> glCopyTexImage2D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage1DFunctionName => "glCopyTexSubImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage1D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage2DFunctionName => "glCopyTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage2D;
    internal static ReadOnlySpan<byte> glTexSubImage1DFunctionName => "glTexSubImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage1D;
    internal static ReadOnlySpan<byte> glTexSubImage2DFunctionName => "glTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage2D;
    internal static ReadOnlySpan<byte> glBindTextureFunctionName => "glBindTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindTexture;
    internal static ReadOnlySpan<byte> glDeleteTexturesFunctionName => "glDeleteTextures"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteTextures;
    internal static ReadOnlySpan<byte> glGenTexturesFunctionName => "glGenTextures"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenTextures;
    internal static ReadOnlySpan<byte> glIsTextureFunctionName => "glIsTexture"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsTexture;
    internal static ReadOnlySpan<byte> glArrayElementFunctionName => "glArrayElement"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* void */ void> glArrayElement;
    internal static ReadOnlySpan<byte> glColorPointerFunctionName => "glColorPointer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glColorPointer;
    internal static ReadOnlySpan<byte> glDisableClientStateFunctionName => "glDisableClientState"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glDisableClientState;
    internal static ReadOnlySpan<byte> glEdgeFlagPointerFunctionName => "glEdgeFlagPointer"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* void */ void*, /* void */ void> glEdgeFlagPointer;
    internal static ReadOnlySpan<byte> glEnableClientStateFunctionName => "glEnableClientState"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEnableClientState;
    internal static ReadOnlySpan<byte> glIndexPointerFunctionName => "glIndexPointer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glIndexPointer;
    internal static ReadOnlySpan<byte> glInterleavedArraysFunctionName => "glInterleavedArrays"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glInterleavedArrays;
    internal static ReadOnlySpan<byte> glNormalPointerFunctionName => "glNormalPointer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glNormalPointer;
    internal static ReadOnlySpan<byte> glTexCoordPointerFunctionName => "glTexCoordPointer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glTexCoordPointer;
    internal static ReadOnlySpan<byte> glVertexPointerFunctionName => "glVertexPointer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexPointer;
    internal static ReadOnlySpan<byte> glAreTexturesResidentFunctionName => "glAreTexturesResident"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int*, /* GLboolean */ int> glAreTexturesResident;
    internal static ReadOnlySpan<byte> glPrioritizeTexturesFunctionName => "glPrioritizeTextures"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLfloat */ float*, /* void */ void> glPrioritizeTextures;
    internal static ReadOnlySpan<byte> glIndexubFunctionName => "glIndexub"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte, /* void */ void> glIndexub;
    internal static ReadOnlySpan<byte> glIndexubvFunctionName => "glIndexubv"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glIndexubv;
    internal static ReadOnlySpan<byte> glPopClientAttribFunctionName => "glPopClientAttrib"u8;
    private readonly delegate* unmanaged</* void */ void> glPopClientAttrib;
    internal static ReadOnlySpan<byte> glPushClientAttribFunctionName => "glPushClientAttrib"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glPushClientAttrib;
    internal static ReadOnlySpan<byte> glDrawRangeElementsFunctionName => "glDrawRangeElements"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawRangeElements;
    internal static ReadOnlySpan<byte> glTexImage3DFunctionName => "glTexImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexImage3D;
    internal static ReadOnlySpan<byte> glTexSubImage3DFunctionName => "glTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTexSubImage3D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage3DFunctionName => "glCopyTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTexSubImage3D;
    internal static ReadOnlySpan<byte> glActiveTextureFunctionName => "glActiveTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glActiveTexture;
    internal static ReadOnlySpan<byte> glSampleCoverageFunctionName => "glSampleCoverage"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void> glSampleCoverage;
    internal static ReadOnlySpan<byte> glCompressedTexImage3DFunctionName => "glCompressedTexImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexImage2DFunctionName => "glCompressedTexImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage2D;
    internal static ReadOnlySpan<byte> glCompressedTexImage1DFunctionName => "glCompressedTexImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexImage1D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage3DFunctionName => "glCompressedTexSubImage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage2DFunctionName => "glCompressedTexSubImage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage2D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage1DFunctionName => "glCompressedTexSubImage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTexSubImage1D;
    internal static ReadOnlySpan<byte> glGetCompressedTexImageFunctionName => "glGetCompressedTexImage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void*, /* void */ void> glGetCompressedTexImage;
    internal static ReadOnlySpan<byte> glClientActiveTextureFunctionName => "glClientActiveTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glClientActiveTexture;
    internal static ReadOnlySpan<byte> glMultiTexCoord1dFunctionName => "glMultiTexCoord1d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* void */ void> glMultiTexCoord1d;
    internal static ReadOnlySpan<byte> glMultiTexCoord1dvFunctionName => "glMultiTexCoord1dv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glMultiTexCoord1dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1fFunctionName => "glMultiTexCoord1f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glMultiTexCoord1f;
    internal static ReadOnlySpan<byte> glMultiTexCoord1fvFunctionName => "glMultiTexCoord1fv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMultiTexCoord1fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1iFunctionName => "glMultiTexCoord1i"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glMultiTexCoord1i;
    internal static ReadOnlySpan<byte> glMultiTexCoord1ivFunctionName => "glMultiTexCoord1iv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glMultiTexCoord1iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1sFunctionName => "glMultiTexCoord1s"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* void */ void> glMultiTexCoord1s;
    internal static ReadOnlySpan<byte> glMultiTexCoord1svFunctionName => "glMultiTexCoord1sv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> glMultiTexCoord1sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2dFunctionName => "glMultiTexCoord2d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glMultiTexCoord2d;
    internal static ReadOnlySpan<byte> glMultiTexCoord2dvFunctionName => "glMultiTexCoord2dv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glMultiTexCoord2dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2fFunctionName => "glMultiTexCoord2f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMultiTexCoord2f;
    internal static ReadOnlySpan<byte> glMultiTexCoord2fvFunctionName => "glMultiTexCoord2fv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMultiTexCoord2fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2iFunctionName => "glMultiTexCoord2i"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glMultiTexCoord2i;
    internal static ReadOnlySpan<byte> glMultiTexCoord2ivFunctionName => "glMultiTexCoord2iv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glMultiTexCoord2iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2sFunctionName => "glMultiTexCoord2s"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* void */ void> glMultiTexCoord2s;
    internal static ReadOnlySpan<byte> glMultiTexCoord2svFunctionName => "glMultiTexCoord2sv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> glMultiTexCoord2sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3dFunctionName => "glMultiTexCoord3d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glMultiTexCoord3d;
    internal static ReadOnlySpan<byte> glMultiTexCoord3dvFunctionName => "glMultiTexCoord3dv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glMultiTexCoord3dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3fFunctionName => "glMultiTexCoord3f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMultiTexCoord3f;
    internal static ReadOnlySpan<byte> glMultiTexCoord3fvFunctionName => "glMultiTexCoord3fv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMultiTexCoord3fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3iFunctionName => "glMultiTexCoord3i"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glMultiTexCoord3i;
    internal static ReadOnlySpan<byte> glMultiTexCoord3ivFunctionName => "glMultiTexCoord3iv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glMultiTexCoord3iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3sFunctionName => "glMultiTexCoord3s"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glMultiTexCoord3s;
    internal static ReadOnlySpan<byte> glMultiTexCoord3svFunctionName => "glMultiTexCoord3sv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> glMultiTexCoord3sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4dFunctionName => "glMultiTexCoord4d"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glMultiTexCoord4d;
    internal static ReadOnlySpan<byte> glMultiTexCoord4dvFunctionName => "glMultiTexCoord4dv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> glMultiTexCoord4dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4fFunctionName => "glMultiTexCoord4f"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glMultiTexCoord4f;
    internal static ReadOnlySpan<byte> glMultiTexCoord4fvFunctionName => "glMultiTexCoord4fv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glMultiTexCoord4fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4iFunctionName => "glMultiTexCoord4i"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glMultiTexCoord4i;
    internal static ReadOnlySpan<byte> glMultiTexCoord4ivFunctionName => "glMultiTexCoord4iv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glMultiTexCoord4iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4sFunctionName => "glMultiTexCoord4s"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glMultiTexCoord4s;
    internal static ReadOnlySpan<byte> glMultiTexCoord4svFunctionName => "glMultiTexCoord4sv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> glMultiTexCoord4sv;
    internal static ReadOnlySpan<byte> glLoadTransposeMatrixfFunctionName => "glLoadTransposeMatrixf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glLoadTransposeMatrixf;
    internal static ReadOnlySpan<byte> glLoadTransposeMatrixdFunctionName => "glLoadTransposeMatrixd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glLoadTransposeMatrixd;
    internal static ReadOnlySpan<byte> glMultTransposeMatrixfFunctionName => "glMultTransposeMatrixf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glMultTransposeMatrixf;
    internal static ReadOnlySpan<byte> glMultTransposeMatrixdFunctionName => "glMultTransposeMatrixd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glMultTransposeMatrixd;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateFunctionName => "glBlendFuncSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFuncSeparate;
    internal static ReadOnlySpan<byte> glMultiDrawArraysFunctionName => "glMultiDrawArrays"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* GLsizei */ int*, /* GLsizei */ int, /* void */ void> glMultiDrawArrays;
    internal static ReadOnlySpan<byte> glMultiDrawElementsFunctionName => "glMultiDrawElements"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* void */ void> glMultiDrawElements;
    internal static ReadOnlySpan<byte> glPointParameterfFunctionName => "glPointParameterf"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> glPointParameterf;
    internal static ReadOnlySpan<byte> glPointParameterfvFunctionName => "glPointParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glPointParameterfv;
    internal static ReadOnlySpan<byte> glPointParameteriFunctionName => "glPointParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPointParameteri;
    internal static ReadOnlySpan<byte> glPointParameterivFunctionName => "glPointParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> glPointParameteriv;
    internal static ReadOnlySpan<byte> glFogCoordfFunctionName => "glFogCoordf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glFogCoordf;
    internal static ReadOnlySpan<byte> glFogCoordfvFunctionName => "glFogCoordfv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glFogCoordfv;
    internal static ReadOnlySpan<byte> glFogCoorddFunctionName => "glFogCoordd"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> glFogCoordd;
    internal static ReadOnlySpan<byte> glFogCoorddvFunctionName => "glFogCoorddv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glFogCoorddv;
    internal static ReadOnlySpan<byte> glFogCoordPointerFunctionName => "glFogCoordPointer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glFogCoordPointer;
    internal static ReadOnlySpan<byte> glSecondaryColor3bFunctionName => "glSecondaryColor3b"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> glSecondaryColor3b;
    internal static ReadOnlySpan<byte> glSecondaryColor3bvFunctionName => "glSecondaryColor3bv"u8;
    private readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> glSecondaryColor3bv;
    internal static ReadOnlySpan<byte> glSecondaryColor3dFunctionName => "glSecondaryColor3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glSecondaryColor3d;
    internal static ReadOnlySpan<byte> glSecondaryColor3dvFunctionName => "glSecondaryColor3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glSecondaryColor3dv;
    internal static ReadOnlySpan<byte> glSecondaryColor3fFunctionName => "glSecondaryColor3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glSecondaryColor3f;
    internal static ReadOnlySpan<byte> glSecondaryColor3fvFunctionName => "glSecondaryColor3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glSecondaryColor3fv;
    internal static ReadOnlySpan<byte> glSecondaryColor3iFunctionName => "glSecondaryColor3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glSecondaryColor3i;
    internal static ReadOnlySpan<byte> glSecondaryColor3ivFunctionName => "glSecondaryColor3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glSecondaryColor3iv;
    internal static ReadOnlySpan<byte> glSecondaryColor3sFunctionName => "glSecondaryColor3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glSecondaryColor3s;
    internal static ReadOnlySpan<byte> glSecondaryColor3svFunctionName => "glSecondaryColor3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glSecondaryColor3sv;
    internal static ReadOnlySpan<byte> glSecondaryColor3ubFunctionName => "glSecondaryColor3ub"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> glSecondaryColor3ub;
    internal static ReadOnlySpan<byte> glSecondaryColor3ubvFunctionName => "glSecondaryColor3ubv"u8;
    private readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> glSecondaryColor3ubv;
    internal static ReadOnlySpan<byte> glSecondaryColor3uiFunctionName => "glSecondaryColor3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glSecondaryColor3ui;
    internal static ReadOnlySpan<byte> glSecondaryColor3uivFunctionName => "glSecondaryColor3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> glSecondaryColor3uiv;
    internal static ReadOnlySpan<byte> glSecondaryColor3usFunctionName => "glSecondaryColor3us"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> glSecondaryColor3us;
    internal static ReadOnlySpan<byte> glSecondaryColor3usvFunctionName => "glSecondaryColor3usv"u8;
    private readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> glSecondaryColor3usv;
    internal static ReadOnlySpan<byte> glSecondaryColorPointerFunctionName => "glSecondaryColorPointer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glSecondaryColorPointer;
    internal static ReadOnlySpan<byte> glWindowPos2dFunctionName => "glWindowPos2d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> glWindowPos2d;
    internal static ReadOnlySpan<byte> glWindowPos2dvFunctionName => "glWindowPos2dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glWindowPos2dv;
    internal static ReadOnlySpan<byte> glWindowPos2fFunctionName => "glWindowPos2f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glWindowPos2f;
    internal static ReadOnlySpan<byte> glWindowPos2fvFunctionName => "glWindowPos2fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glWindowPos2fv;
    internal static ReadOnlySpan<byte> glWindowPos2iFunctionName => "glWindowPos2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glWindowPos2i;
    internal static ReadOnlySpan<byte> glWindowPos2ivFunctionName => "glWindowPos2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glWindowPos2iv;
    internal static ReadOnlySpan<byte> glWindowPos2sFunctionName => "glWindowPos2s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> glWindowPos2s;
    internal static ReadOnlySpan<byte> glWindowPos2svFunctionName => "glWindowPos2sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glWindowPos2sv;
    internal static ReadOnlySpan<byte> glWindowPos3dFunctionName => "glWindowPos3d"u8;
    private readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glWindowPos3d;
    internal static ReadOnlySpan<byte> glWindowPos3dvFunctionName => "glWindowPos3dv"u8;
    private readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> glWindowPos3dv;
    internal static ReadOnlySpan<byte> glWindowPos3fFunctionName => "glWindowPos3f"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glWindowPos3f;
    internal static ReadOnlySpan<byte> glWindowPos3fvFunctionName => "glWindowPos3fv"u8;
    private readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> glWindowPos3fv;
    internal static ReadOnlySpan<byte> glWindowPos3iFunctionName => "glWindowPos3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glWindowPos3i;
    internal static ReadOnlySpan<byte> glWindowPos3ivFunctionName => "glWindowPos3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int*, /* void */ void> glWindowPos3iv;
    internal static ReadOnlySpan<byte> glWindowPos3sFunctionName => "glWindowPos3s"u8;
    private readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glWindowPos3s;
    internal static ReadOnlySpan<byte> glWindowPos3svFunctionName => "glWindowPos3sv"u8;
    private readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> glWindowPos3sv;
    internal static ReadOnlySpan<byte> glBlendColorFunctionName => "glBlendColor"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glBlendColor;
    internal static ReadOnlySpan<byte> glBlendEquationFunctionName => "glBlendEquation"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glBlendEquation;
    internal static ReadOnlySpan<byte> glGenQueriesFunctionName => "glGenQueries"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenQueries;
    internal static ReadOnlySpan<byte> glDeleteQueriesFunctionName => "glDeleteQueries"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteQueries;
    internal static ReadOnlySpan<byte> glIsQueryFunctionName => "glIsQuery"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsQuery;
    internal static ReadOnlySpan<byte> glBeginQueryFunctionName => "glBeginQuery"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBeginQuery;
    internal static ReadOnlySpan<byte> glEndQueryFunctionName => "glEndQuery"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glEndQuery;
    internal static ReadOnlySpan<byte> glGetQueryivFunctionName => "glGetQueryiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetQueryiv;
    internal static ReadOnlySpan<byte> glGetQueryObjectivFunctionName => "glGetQueryObjectiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetQueryObjectiv;
    internal static ReadOnlySpan<byte> glGetQueryObjectuivFunctionName => "glGetQueryObjectuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetQueryObjectuiv;
    internal static ReadOnlySpan<byte> glBindBufferFunctionName => "glBindBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindBuffer;
    internal static ReadOnlySpan<byte> glDeleteBuffersFunctionName => "glDeleteBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteBuffers;
    internal static ReadOnlySpan<byte> glGenBuffersFunctionName => "glGenBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenBuffers;
    internal static ReadOnlySpan<byte> glIsBufferFunctionName => "glIsBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsBuffer;
    internal static ReadOnlySpan<byte> glBufferDataFunctionName => "glBufferData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> glBufferData;
    internal static ReadOnlySpan<byte> glBufferSubDataFunctionName => "glBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glBufferSubData;
    internal static ReadOnlySpan<byte> glGetBufferSubDataFunctionName => "glGetBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glGetBufferSubData;
    internal static ReadOnlySpan<byte> glMapBufferFunctionName => "glMapBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*> glMapBuffer;
    internal static ReadOnlySpan<byte> glUnmapBufferFunctionName => "glUnmapBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> glUnmapBuffer;
    internal static ReadOnlySpan<byte> glGetBufferParameterivFunctionName => "glGetBufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetBufferParameteriv;
    internal static ReadOnlySpan<byte> glGetBufferPointervFunctionName => "glGetBufferPointerv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void> glGetBufferPointerv;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateFunctionName => "glBlendEquationSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendEquationSeparate;
    internal static ReadOnlySpan<byte> glDrawBuffersFunctionName => "glDrawBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void> glDrawBuffers;
    internal static ReadOnlySpan<byte> glStencilOpSeparateFunctionName => "glStencilOpSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glStencilOpSeparate;
    internal static ReadOnlySpan<byte> glStencilFuncSeparateFunctionName => "glStencilFuncSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glStencilFuncSeparate;
    internal static ReadOnlySpan<byte> glStencilMaskSeparateFunctionName => "glStencilMaskSeparate"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glStencilMaskSeparate;
    internal static ReadOnlySpan<byte> glAttachShaderFunctionName => "glAttachShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glAttachShader;
    internal static ReadOnlySpan<byte> glBindAttribLocationFunctionName => "glBindAttribLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> glBindAttribLocation;
    internal static ReadOnlySpan<byte> glCompileShaderFunctionName => "glCompileShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glCompileShader;
    internal static ReadOnlySpan<byte> glCreateProgramFunctionName => "glCreateProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint> glCreateProgram;
    internal static ReadOnlySpan<byte> glCreateShaderFunctionName => "glCreateShader"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint> glCreateShader;
    internal static ReadOnlySpan<byte> glDeleteProgramFunctionName => "glDeleteProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDeleteProgram;
    internal static ReadOnlySpan<byte> glDeleteShaderFunctionName => "glDeleteShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDeleteShader;
    internal static ReadOnlySpan<byte> glDetachShaderFunctionName => "glDetachShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDetachShader;
    internal static ReadOnlySpan<byte> glDisableVertexAttribArrayFunctionName => "glDisableVertexAttribArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glDisableVertexAttribArray;
    internal static ReadOnlySpan<byte> glEnableVertexAttribArrayFunctionName => "glEnableVertexAttribArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glEnableVertexAttribArray;
    internal static ReadOnlySpan<byte> glGetActiveAttribFunctionName => "glGetActiveAttrib"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveAttrib;
    internal static ReadOnlySpan<byte> glGetActiveUniformFunctionName => "glGetActiveUniform"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveUniform;
    internal static ReadOnlySpan<byte> glGetAttachedShadersFunctionName => "glGetAttachedShaders"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void> glGetAttachedShaders;
    internal static ReadOnlySpan<byte> glGetAttribLocationFunctionName => "glGetAttribLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetAttribLocation;
    internal static ReadOnlySpan<byte> glGetProgramivFunctionName => "glGetProgramiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramiv;
    internal static ReadOnlySpan<byte> glGetProgramInfoLogFunctionName => "glGetProgramInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramInfoLog;
    internal static ReadOnlySpan<byte> glGetShaderivFunctionName => "glGetShaderiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetShaderiv;
    internal static ReadOnlySpan<byte> glGetShaderInfoLogFunctionName => "glGetShaderInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetShaderInfoLog;
    internal static ReadOnlySpan<byte> glGetShaderSourceFunctionName => "glGetShaderSource"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetShaderSource;
    internal static ReadOnlySpan<byte> glGetUniformLocationFunctionName => "glGetUniformLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetUniformLocation;
    internal static ReadOnlySpan<byte> glGetUniformfvFunctionName => "glGetUniformfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glGetUniformfv;
    internal static ReadOnlySpan<byte> glGetUniformivFunctionName => "glGetUniformiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void> glGetUniformiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribdvFunctionName => "glGetVertexAttribdv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetVertexAttribdv;
    internal static ReadOnlySpan<byte> glGetVertexAttribfvFunctionName => "glGetVertexAttribfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetVertexAttribfv;
    internal static ReadOnlySpan<byte> glGetVertexAttribivFunctionName => "glGetVertexAttribiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexAttribiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribPointervFunctionName => "glGetVertexAttribPointerv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void> glGetVertexAttribPointerv;
    internal static ReadOnlySpan<byte> glIsProgramFunctionName => "glIsProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsProgram;
    internal static ReadOnlySpan<byte> glIsShaderFunctionName => "glIsShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsShader;
    internal static ReadOnlySpan<byte> glLinkProgramFunctionName => "glLinkProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glLinkProgram;
    internal static ReadOnlySpan<byte> glShaderSourceFunctionName => "glShaderSource"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLint */ int*, /* void */ void> glShaderSource;
    internal static ReadOnlySpan<byte> glUseProgramFunctionName => "glUseProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glUseProgram;
    internal static ReadOnlySpan<byte> glUniform1fFunctionName => "glUniform1f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void> glUniform1f;
    internal static ReadOnlySpan<byte> glUniform2fFunctionName => "glUniform2f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform2f;
    internal static ReadOnlySpan<byte> glUniform3fFunctionName => "glUniform3f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform3f;
    internal static ReadOnlySpan<byte> glUniform4fFunctionName => "glUniform4f"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glUniform4f;
    internal static ReadOnlySpan<byte> glUniform1iFunctionName => "glUniform1i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> glUniform1i;
    internal static ReadOnlySpan<byte> glUniform2iFunctionName => "glUniform2i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform2i;
    internal static ReadOnlySpan<byte> glUniform3iFunctionName => "glUniform3i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform3i;
    internal static ReadOnlySpan<byte> glUniform4iFunctionName => "glUniform4i"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glUniform4i;
    internal static ReadOnlySpan<byte> glUniform1fvFunctionName => "glUniform1fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform1fv;
    internal static ReadOnlySpan<byte> glUniform2fvFunctionName => "glUniform2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform2fv;
    internal static ReadOnlySpan<byte> glUniform3fvFunctionName => "glUniform3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform3fv;
    internal static ReadOnlySpan<byte> glUniform4fvFunctionName => "glUniform4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glUniform4fv;
    internal static ReadOnlySpan<byte> glUniform1ivFunctionName => "glUniform1iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform1iv;
    internal static ReadOnlySpan<byte> glUniform2ivFunctionName => "glUniform2iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform2iv;
    internal static ReadOnlySpan<byte> glUniform3ivFunctionName => "glUniform3iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform3iv;
    internal static ReadOnlySpan<byte> glUniform4ivFunctionName => "glUniform4iv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glUniform4iv;
    internal static ReadOnlySpan<byte> glUniformMatrix2fvFunctionName => "glUniformMatrix2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3fvFunctionName => "glUniformMatrix3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4fvFunctionName => "glUniformMatrix4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4fv;
    internal static ReadOnlySpan<byte> glValidateProgramFunctionName => "glValidateProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glValidateProgram;
    internal static ReadOnlySpan<byte> glVertexAttrib1dFunctionName => "glVertexAttrib1d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void> glVertexAttrib1d;
    internal static ReadOnlySpan<byte> glVertexAttrib1dvFunctionName => "glVertexAttrib1dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttrib1dv;
    internal static ReadOnlySpan<byte> glVertexAttrib1fFunctionName => "glVertexAttrib1f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void> glVertexAttrib1f;
    internal static ReadOnlySpan<byte> glVertexAttrib1fvFunctionName => "glVertexAttrib1fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib1fv;
    internal static ReadOnlySpan<byte> glVertexAttrib1sFunctionName => "glVertexAttrib1s"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* void */ void> glVertexAttrib1s;
    internal static ReadOnlySpan<byte> glVertexAttrib1svFunctionName => "glVertexAttrib1sv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttrib1sv;
    internal static ReadOnlySpan<byte> glVertexAttrib2dFunctionName => "glVertexAttrib2d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttrib2d;
    internal static ReadOnlySpan<byte> glVertexAttrib2dvFunctionName => "glVertexAttrib2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttrib2dv;
    internal static ReadOnlySpan<byte> glVertexAttrib2fFunctionName => "glVertexAttrib2f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib2f;
    internal static ReadOnlySpan<byte> glVertexAttrib2fvFunctionName => "glVertexAttrib2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib2fv;
    internal static ReadOnlySpan<byte> glVertexAttrib2sFunctionName => "glVertexAttrib2s"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* void */ void> glVertexAttrib2s;
    internal static ReadOnlySpan<byte> glVertexAttrib2svFunctionName => "glVertexAttrib2sv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttrib2sv;
    internal static ReadOnlySpan<byte> glVertexAttrib3dFunctionName => "glVertexAttrib3d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttrib3d;
    internal static ReadOnlySpan<byte> glVertexAttrib3dvFunctionName => "glVertexAttrib3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttrib3dv;
    internal static ReadOnlySpan<byte> glVertexAttrib3fFunctionName => "glVertexAttrib3f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib3f;
    internal static ReadOnlySpan<byte> glVertexAttrib3fvFunctionName => "glVertexAttrib3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib3fv;
    internal static ReadOnlySpan<byte> glVertexAttrib3sFunctionName => "glVertexAttrib3s"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glVertexAttrib3s;
    internal static ReadOnlySpan<byte> glVertexAttrib3svFunctionName => "glVertexAttrib3sv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttrib3sv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NbvFunctionName => "glVertexAttrib4Nbv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> glVertexAttrib4Nbv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NivFunctionName => "glVertexAttrib4Niv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttrib4Niv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NsvFunctionName => "glVertexAttrib4Nsv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttrib4Nsv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NubFunctionName => "glVertexAttrib4Nub"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> glVertexAttrib4Nub;
    internal static ReadOnlySpan<byte> glVertexAttrib4NubvFunctionName => "glVertexAttrib4Nubv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> glVertexAttrib4Nubv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NuivFunctionName => "glVertexAttrib4Nuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttrib4Nuiv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NusvFunctionName => "glVertexAttrib4Nusv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> glVertexAttrib4Nusv;
    internal static ReadOnlySpan<byte> glVertexAttrib4bvFunctionName => "glVertexAttrib4bv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> glVertexAttrib4bv;
    internal static ReadOnlySpan<byte> glVertexAttrib4dFunctionName => "glVertexAttrib4d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttrib4d;
    internal static ReadOnlySpan<byte> glVertexAttrib4dvFunctionName => "glVertexAttrib4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttrib4dv;
    internal static ReadOnlySpan<byte> glVertexAttrib4fFunctionName => "glVertexAttrib4f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glVertexAttrib4f;
    internal static ReadOnlySpan<byte> glVertexAttrib4fvFunctionName => "glVertexAttrib4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glVertexAttrib4fv;
    internal static ReadOnlySpan<byte> glVertexAttrib4ivFunctionName => "glVertexAttrib4iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttrib4iv;
    internal static ReadOnlySpan<byte> glVertexAttrib4sFunctionName => "glVertexAttrib4s"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> glVertexAttrib4s;
    internal static ReadOnlySpan<byte> glVertexAttrib4svFunctionName => "glVertexAttrib4sv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttrib4sv;
    internal static ReadOnlySpan<byte> glVertexAttrib4ubvFunctionName => "glVertexAttrib4ubv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> glVertexAttrib4ubv;
    internal static ReadOnlySpan<byte> glVertexAttrib4uivFunctionName => "glVertexAttrib4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttrib4uiv;
    internal static ReadOnlySpan<byte> glVertexAttrib4usvFunctionName => "glVertexAttrib4usv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> glVertexAttrib4usv;
    internal static ReadOnlySpan<byte> glVertexAttribPointerFunctionName => "glVertexAttribPointer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexAttribPointer;
    internal static ReadOnlySpan<byte> glUniformMatrix2x3fvFunctionName => "glUniformMatrix2x3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x2fvFunctionName => "glUniformMatrix3x2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x4fvFunctionName => "glUniformMatrix2x4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x2fvFunctionName => "glUniformMatrix4x2fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x4fvFunctionName => "glUniformMatrix3x4fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x3fvFunctionName => "glUniformMatrix4x3fv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glUniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glColorMaskiFunctionName => "glColorMaski"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> glColorMaski;
    internal static ReadOnlySpan<byte> glGetBooleani_vFunctionName => "glGetBooleani_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void> glGetBooleani_v;
    internal static ReadOnlySpan<byte> glGetIntegeri_vFunctionName => "glGetIntegeri_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void> glGetIntegeri_v;
    internal static ReadOnlySpan<byte> glEnableiFunctionName => "glEnablei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glEnablei;
    internal static ReadOnlySpan<byte> glDisableiFunctionName => "glDisablei"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glDisablei;
    internal static ReadOnlySpan<byte> glIsEnablediFunctionName => "glIsEnabledi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int> glIsEnabledi;
    internal static ReadOnlySpan<byte> glBeginTransformFeedbackFunctionName => "glBeginTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glBeginTransformFeedback;
    internal static ReadOnlySpan<byte> glEndTransformFeedbackFunctionName => "glEndTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glEndTransformFeedback;
    internal static ReadOnlySpan<byte> glBindBufferRangeFunctionName => "glBindBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glBindBufferRange;
    internal static ReadOnlySpan<byte> glBindBufferBaseFunctionName => "glBindBufferBase"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBindBufferBase;
    internal static ReadOnlySpan<byte> glTransformFeedbackVaryingsFunctionName => "glTransformFeedbackVaryings"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLenum */ int, /* void */ void> glTransformFeedbackVaryings;
    internal static ReadOnlySpan<byte> glGetTransformFeedbackVaryingFunctionName => "glGetTransformFeedbackVarying"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> glGetTransformFeedbackVarying;
    internal static ReadOnlySpan<byte> glClampColorFunctionName => "glClampColor"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glClampColor;
    internal static ReadOnlySpan<byte> glBeginConditionalRenderFunctionName => "glBeginConditionalRender"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glBeginConditionalRender;
    internal static ReadOnlySpan<byte> glEndConditionalRenderFunctionName => "glEndConditionalRender"u8;
    private readonly delegate* unmanaged</* void */ void> glEndConditionalRender;
    internal static ReadOnlySpan<byte> glVertexAttribIPointerFunctionName => "glVertexAttribIPointer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexAttribIPointer;
    internal static ReadOnlySpan<byte> glGetVertexAttribIivFunctionName => "glGetVertexAttribIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexAttribIiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribIuivFunctionName => "glGetVertexAttribIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetVertexAttribIuiv;
    internal static ReadOnlySpan<byte> glVertexAttribI1iFunctionName => "glVertexAttribI1i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void> glVertexAttribI1i;
    internal static ReadOnlySpan<byte> glVertexAttribI2iFunctionName => "glVertexAttribI2i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glVertexAttribI2i;
    internal static ReadOnlySpan<byte> glVertexAttribI3iFunctionName => "glVertexAttribI3i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glVertexAttribI3i;
    internal static ReadOnlySpan<byte> glVertexAttribI4iFunctionName => "glVertexAttribI4i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glVertexAttribI4i;
    internal static ReadOnlySpan<byte> glVertexAttribI1uiFunctionName => "glVertexAttribI1ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribI1ui;
    internal static ReadOnlySpan<byte> glVertexAttribI2uiFunctionName => "glVertexAttribI2ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribI2ui;
    internal static ReadOnlySpan<byte> glVertexAttribI3uiFunctionName => "glVertexAttribI3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribI3ui;
    internal static ReadOnlySpan<byte> glVertexAttribI4uiFunctionName => "glVertexAttribI4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribI4ui;
    internal static ReadOnlySpan<byte> glVertexAttribI1ivFunctionName => "glVertexAttribI1iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttribI1iv;
    internal static ReadOnlySpan<byte> glVertexAttribI2ivFunctionName => "glVertexAttribI2iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttribI2iv;
    internal static ReadOnlySpan<byte> glVertexAttribI3ivFunctionName => "glVertexAttribI3iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttribI3iv;
    internal static ReadOnlySpan<byte> glVertexAttribI4ivFunctionName => "glVertexAttribI4iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glVertexAttribI4iv;
    internal static ReadOnlySpan<byte> glVertexAttribI1uivFunctionName => "glVertexAttribI1uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttribI1uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI2uivFunctionName => "glVertexAttribI2uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttribI2uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI3uivFunctionName => "glVertexAttribI3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttribI3uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI4uivFunctionName => "glVertexAttribI4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> glVertexAttribI4uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI4bvFunctionName => "glVertexAttribI4bv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> glVertexAttribI4bv;
    internal static ReadOnlySpan<byte> glVertexAttribI4svFunctionName => "glVertexAttribI4sv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> glVertexAttribI4sv;
    internal static ReadOnlySpan<byte> glVertexAttribI4ubvFunctionName => "glVertexAttribI4ubv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> glVertexAttribI4ubv;
    internal static ReadOnlySpan<byte> glVertexAttribI4usvFunctionName => "glVertexAttribI4usv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> glVertexAttribI4usv;
    internal static ReadOnlySpan<byte> glGetUniformuivFunctionName => "glGetUniformuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glGetUniformuiv;
    internal static ReadOnlySpan<byte> glBindFragDataLocationFunctionName => "glBindFragDataLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> glBindFragDataLocation;
    internal static ReadOnlySpan<byte> glGetFragDataLocationFunctionName => "glGetFragDataLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetFragDataLocation;
    internal static ReadOnlySpan<byte> glUniform1uiFunctionName => "glUniform1ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void> glUniform1ui;
    internal static ReadOnlySpan<byte> glUniform2uiFunctionName => "glUniform2ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform2ui;
    internal static ReadOnlySpan<byte> glUniform3uiFunctionName => "glUniform3ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform3ui;
    internal static ReadOnlySpan<byte> glUniform4uiFunctionName => "glUniform4ui"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniform4ui;
    internal static ReadOnlySpan<byte> glUniform1uivFunctionName => "glUniform1uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform1uiv;
    internal static ReadOnlySpan<byte> glUniform2uivFunctionName => "glUniform2uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform2uiv;
    internal static ReadOnlySpan<byte> glUniform3uivFunctionName => "glUniform3uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform3uiv;
    internal static ReadOnlySpan<byte> glUniform4uivFunctionName => "glUniform4uiv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniform4uiv;
    internal static ReadOnlySpan<byte> glTexParameterIivFunctionName => "glTexParameterIiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTexParameterIiv;
    internal static ReadOnlySpan<byte> glTexParameterIuivFunctionName => "glTexParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexParameterIuiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIivFunctionName => "glGetTexParameterIiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTexParameterIiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIuivFunctionName => "glGetTexParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetTexParameterIuiv;
    internal static ReadOnlySpan<byte> glClearBufferivFunctionName => "glClearBufferiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void> glClearBufferiv;
    internal static ReadOnlySpan<byte> glClearBufferuivFunctionName => "glClearBufferuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glClearBufferuiv;
    internal static ReadOnlySpan<byte> glClearBufferfvFunctionName => "glClearBufferfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glClearBufferfv;
    internal static ReadOnlySpan<byte> glClearBufferfiFunctionName => "glClearBufferfi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void> glClearBufferfi;
    internal static ReadOnlySpan<byte> glGetStringiFunctionName => "glGetStringi"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*> glGetStringi;
    internal static ReadOnlySpan<byte> glIsRenderbufferFunctionName => "glIsRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsRenderbuffer;
    internal static ReadOnlySpan<byte> glBindRenderbufferFunctionName => "glBindRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindRenderbuffer;
    internal static ReadOnlySpan<byte> glDeleteRenderbuffersFunctionName => "glDeleteRenderbuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteRenderbuffers;
    internal static ReadOnlySpan<byte> glGenRenderbuffersFunctionName => "glGenRenderbuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenRenderbuffers;
    internal static ReadOnlySpan<byte> glRenderbufferStorageFunctionName => "glRenderbufferStorage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glRenderbufferStorage;
    internal static ReadOnlySpan<byte> glGetRenderbufferParameterivFunctionName => "glGetRenderbufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetRenderbufferParameteriv;
    internal static ReadOnlySpan<byte> glIsFramebufferFunctionName => "glIsFramebuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsFramebuffer;
    internal static ReadOnlySpan<byte> glBindFramebufferFunctionName => "glBindFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindFramebuffer;
    internal static ReadOnlySpan<byte> glDeleteFramebuffersFunctionName => "glDeleteFramebuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteFramebuffers;
    internal static ReadOnlySpan<byte> glGenFramebuffersFunctionName => "glGenFramebuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenFramebuffers;
    internal static ReadOnlySpan<byte> glCheckFramebufferStatusFunctionName => "glCheckFramebufferStatus"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int> glCheckFramebufferStatus;
    internal static ReadOnlySpan<byte> glFramebufferTexture1DFunctionName => "glFramebufferTexture1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glFramebufferTexture1D;
    internal static ReadOnlySpan<byte> glFramebufferTexture2DFunctionName => "glFramebufferTexture2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glFramebufferTexture2D;
    internal static ReadOnlySpan<byte> glFramebufferTexture3DFunctionName => "glFramebufferTexture3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glFramebufferTexture3D;
    internal static ReadOnlySpan<byte> glFramebufferRenderbufferFunctionName => "glFramebufferRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glFramebufferRenderbuffer;
    internal static ReadOnlySpan<byte> glGetFramebufferAttachmentParameterivFunctionName => "glGetFramebufferAttachmentParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetFramebufferAttachmentParameteriv;
    internal static ReadOnlySpan<byte> glGenerateMipmapFunctionName => "glGenerateMipmap"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glGenerateMipmap;
    internal static ReadOnlySpan<byte> glBlitFramebufferFunctionName => "glBlitFramebuffer"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void> glBlitFramebuffer;
    internal static ReadOnlySpan<byte> glRenderbufferStorageMultisampleFunctionName => "glRenderbufferStorageMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glRenderbufferStorageMultisample;
    internal static ReadOnlySpan<byte> glFramebufferTextureLayerFunctionName => "glFramebufferTextureLayer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glFramebufferTextureLayer;
    internal static ReadOnlySpan<byte> glMapBufferRangeFunctionName => "glMapBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*> glMapBufferRange;
    internal static ReadOnlySpan<byte> glFlushMappedBufferRangeFunctionName => "glFlushMappedBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glFlushMappedBufferRange;
    internal static ReadOnlySpan<byte> glBindVertexArrayFunctionName => "glBindVertexArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glBindVertexArray;
    internal static ReadOnlySpan<byte> glDeleteVertexArraysFunctionName => "glDeleteVertexArrays"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteVertexArrays;
    internal static ReadOnlySpan<byte> glGenVertexArraysFunctionName => "glGenVertexArrays"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenVertexArrays;
    internal static ReadOnlySpan<byte> glIsVertexArrayFunctionName => "glIsVertexArray"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsVertexArray;
    internal static ReadOnlySpan<byte> glDrawArraysInstancedFunctionName => "glDrawArraysInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glDrawArraysInstanced;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedFunctionName => "glDrawElementsInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glDrawElementsInstanced;
    internal static ReadOnlySpan<byte> glTexBufferFunctionName => "glTexBuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexBuffer;
    internal static ReadOnlySpan<byte> glPrimitiveRestartIndexFunctionName => "glPrimitiveRestartIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glPrimitiveRestartIndex;
    internal static ReadOnlySpan<byte> glCopyBufferSubDataFunctionName => "glCopyBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glCopyBufferSubData;
    internal static ReadOnlySpan<byte> glGetUniformIndicesFunctionName => "glGetUniformIndices"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint*, /* void */ void> glGetUniformIndices;
    internal static ReadOnlySpan<byte> glGetActiveUniformsivFunctionName => "glGetActiveUniformsiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveUniformsiv;
    internal static ReadOnlySpan<byte> glGetActiveUniformNameFunctionName => "glGetActiveUniformName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveUniformName;
    internal static ReadOnlySpan<byte> glGetUniformBlockIndexFunctionName => "glGetUniformBlockIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint> glGetUniformBlockIndex;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockivFunctionName => "glGetActiveUniformBlockiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveUniformBlockiv;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockNameFunctionName => "glGetActiveUniformBlockName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveUniformBlockName;
    internal static ReadOnlySpan<byte> glUniformBlockBindingFunctionName => "glUniformBlockBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glUniformBlockBinding;
    internal static ReadOnlySpan<byte> glDrawElementsBaseVertexFunctionName => "glDrawElementsBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> glDrawElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawRangeElementsBaseVertexFunctionName => "glDrawRangeElementsBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> glDrawRangeElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseVertexFunctionName => "glDrawElementsInstancedBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void> glDrawElementsInstancedBaseVertex;
    internal static ReadOnlySpan<byte> glMultiDrawElementsBaseVertexFunctionName => "glMultiDrawElementsBaseVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glMultiDrawElementsBaseVertex;
    internal static ReadOnlySpan<byte> glProvokingVertexFunctionName => "glProvokingVertex"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void> glProvokingVertex;
    internal static ReadOnlySpan<byte> glFenceSyncFunctionName => "glFenceSync"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*> glFenceSync;
    internal static ReadOnlySpan<byte> glIsSyncFunctionName => "glIsSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int> glIsSync;
    internal static ReadOnlySpan<byte> glDeleteSyncFunctionName => "glDeleteSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* void */ void> glDeleteSync;
    internal static ReadOnlySpan<byte> glClientWaitSyncFunctionName => "glClientWaitSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int> glClientWaitSync;
    internal static ReadOnlySpan<byte> glWaitSyncFunctionName => "glWaitSync"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void> glWaitSync;
    internal static ReadOnlySpan<byte> glGetInteger64vFunctionName => "glGetInteger64v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetInteger64v;
    internal static ReadOnlySpan<byte> glGetSyncivFunctionName => "glGetSynciv"u8;
    private readonly delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> glGetSynciv;
    internal static ReadOnlySpan<byte> glGetInteger64i_vFunctionName => "glGetInteger64i_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void> glGetInteger64i_v;
    internal static ReadOnlySpan<byte> glGetBufferParameteri64vFunctionName => "glGetBufferParameteri64v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetBufferParameteri64v;
    internal static ReadOnlySpan<byte> glFramebufferTextureFunctionName => "glFramebufferTexture"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glFramebufferTexture;
    internal static ReadOnlySpan<byte> glTexImage2DMultisampleFunctionName => "glTexImage2DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexImage2DMultisample;
    internal static ReadOnlySpan<byte> glTexImage3DMultisampleFunctionName => "glTexImage3DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexImage3DMultisample;
    internal static ReadOnlySpan<byte> glGetMultisamplefvFunctionName => "glGetMultisamplefv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glGetMultisamplefv;
    internal static ReadOnlySpan<byte> glSampleMaskiFunctionName => "glSampleMaski"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void> glSampleMaski;
    internal static ReadOnlySpan<byte> glBindFragDataLocationIndexedFunctionName => "glBindFragDataLocationIndexed"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> glBindFragDataLocationIndexed;
    internal static ReadOnlySpan<byte> glGetFragDataIndexFunctionName => "glGetFragDataIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> glGetFragDataIndex;
    internal static ReadOnlySpan<byte> glGenSamplersFunctionName => "glGenSamplers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenSamplers;
    internal static ReadOnlySpan<byte> glDeleteSamplersFunctionName => "glDeleteSamplers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteSamplers;
    internal static ReadOnlySpan<byte> glIsSamplerFunctionName => "glIsSampler"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsSampler;
    internal static ReadOnlySpan<byte> glBindSamplerFunctionName => "glBindSampler"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBindSampler;
    internal static ReadOnlySpan<byte> glSamplerParameteriFunctionName => "glSamplerParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glSamplerParameteri;
    internal static ReadOnlySpan<byte> glSamplerParameterivFunctionName => "glSamplerParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glSamplerParameteriv;
    internal static ReadOnlySpan<byte> glSamplerParameterfFunctionName => "glSamplerParameterf"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glSamplerParameterf;
    internal static ReadOnlySpan<byte> glSamplerParameterfvFunctionName => "glSamplerParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glSamplerParameterfv;
    internal static ReadOnlySpan<byte> glSamplerParameterIivFunctionName => "glSamplerParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glSamplerParameterIiv;
    internal static ReadOnlySpan<byte> glSamplerParameterIuivFunctionName => "glSamplerParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glSamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterivFunctionName => "glGetSamplerParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetSamplerParameteriv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIivFunctionName => "glGetSamplerParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetSamplerParameterIiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterfvFunctionName => "glGetSamplerParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetSamplerParameterfv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIuivFunctionName => "glGetSamplerParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetSamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glQueryCounterFunctionName => "glQueryCounter"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glQueryCounter;
    internal static ReadOnlySpan<byte> glGetQueryObjecti64vFunctionName => "glGetQueryObjecti64v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetQueryObjecti64v;
    internal static ReadOnlySpan<byte> glGetQueryObjectui64vFunctionName => "glGetQueryObjectui64v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint64 */ ulong*, /* void */ void> glGetQueryObjectui64v;
    internal static ReadOnlySpan<byte> glVertexAttribDivisorFunctionName => "glVertexAttribDivisor"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribDivisor;
    internal static ReadOnlySpan<byte> glVertexAttribP1uiFunctionName => "glVertexAttribP1ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribP1ui;
    internal static ReadOnlySpan<byte> glVertexAttribP1uivFunctionName => "glVertexAttribP1uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> glVertexAttribP1uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP2uiFunctionName => "glVertexAttribP2ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribP2ui;
    internal static ReadOnlySpan<byte> glVertexAttribP2uivFunctionName => "glVertexAttribP2uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> glVertexAttribP2uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP3uiFunctionName => "glVertexAttribP3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribP3ui;
    internal static ReadOnlySpan<byte> glVertexAttribP3uivFunctionName => "glVertexAttribP3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> glVertexAttribP3uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP4uiFunctionName => "glVertexAttribP4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribP4ui;
    internal static ReadOnlySpan<byte> glVertexAttribP4uivFunctionName => "glVertexAttribP4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> glVertexAttribP4uiv;
    internal static ReadOnlySpan<byte> glVertexP2uiFunctionName => "glVertexP2ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexP2ui;
    internal static ReadOnlySpan<byte> glVertexP2uivFunctionName => "glVertexP2uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glVertexP2uiv;
    internal static ReadOnlySpan<byte> glVertexP3uiFunctionName => "glVertexP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexP3ui;
    internal static ReadOnlySpan<byte> glVertexP3uivFunctionName => "glVertexP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glVertexP3uiv;
    internal static ReadOnlySpan<byte> glVertexP4uiFunctionName => "glVertexP4ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexP4ui;
    internal static ReadOnlySpan<byte> glVertexP4uivFunctionName => "glVertexP4uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glVertexP4uiv;
    internal static ReadOnlySpan<byte> glTexCoordP1uiFunctionName => "glTexCoordP1ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexCoordP1ui;
    internal static ReadOnlySpan<byte> glTexCoordP1uivFunctionName => "glTexCoordP1uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexCoordP1uiv;
    internal static ReadOnlySpan<byte> glTexCoordP2uiFunctionName => "glTexCoordP2ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexCoordP2ui;
    internal static ReadOnlySpan<byte> glTexCoordP2uivFunctionName => "glTexCoordP2uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexCoordP2uiv;
    internal static ReadOnlySpan<byte> glTexCoordP3uiFunctionName => "glTexCoordP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexCoordP3ui;
    internal static ReadOnlySpan<byte> glTexCoordP3uivFunctionName => "glTexCoordP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexCoordP3uiv;
    internal static ReadOnlySpan<byte> glTexCoordP4uiFunctionName => "glTexCoordP4ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glTexCoordP4ui;
    internal static ReadOnlySpan<byte> glTexCoordP4uivFunctionName => "glTexCoordP4uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTexCoordP4uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP1uiFunctionName => "glMultiTexCoordP1ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glMultiTexCoordP1ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP1uivFunctionName => "glMultiTexCoordP1uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glMultiTexCoordP1uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP2uiFunctionName => "glMultiTexCoordP2ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glMultiTexCoordP2ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP2uivFunctionName => "glMultiTexCoordP2uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glMultiTexCoordP2uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP3uiFunctionName => "glMultiTexCoordP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glMultiTexCoordP3ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP3uivFunctionName => "glMultiTexCoordP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glMultiTexCoordP3uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP4uiFunctionName => "glMultiTexCoordP4ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glMultiTexCoordP4ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP4uivFunctionName => "glMultiTexCoordP4uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glMultiTexCoordP4uiv;
    internal static ReadOnlySpan<byte> glNormalP3uiFunctionName => "glNormalP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glNormalP3ui;
    internal static ReadOnlySpan<byte> glNormalP3uivFunctionName => "glNormalP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glNormalP3uiv;
    internal static ReadOnlySpan<byte> glColorP3uiFunctionName => "glColorP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glColorP3ui;
    internal static ReadOnlySpan<byte> glColorP3uivFunctionName => "glColorP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glColorP3uiv;
    internal static ReadOnlySpan<byte> glColorP4uiFunctionName => "glColorP4ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glColorP4ui;
    internal static ReadOnlySpan<byte> glColorP4uivFunctionName => "glColorP4uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glColorP4uiv;
    internal static ReadOnlySpan<byte> glSecondaryColorP3uiFunctionName => "glSecondaryColorP3ui"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glSecondaryColorP3ui;
    internal static ReadOnlySpan<byte> glSecondaryColorP3uivFunctionName => "glSecondaryColorP3uiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> glSecondaryColorP3uiv;
    internal static ReadOnlySpan<byte> glMinSampleShadingFunctionName => "glMinSampleShading"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glMinSampleShading;
    internal static ReadOnlySpan<byte> glBlendEquationiFunctionName => "glBlendEquationi"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glBlendEquationi;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateiFunctionName => "glBlendEquationSeparatei"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendEquationSeparatei;
    internal static ReadOnlySpan<byte> glBlendFunciFunctionName => "glBlendFunci"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFunci;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateiFunctionName => "glBlendFuncSeparatei"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBlendFuncSeparatei;
    internal static ReadOnlySpan<byte> glDrawArraysIndirectFunctionName => "glDrawArraysIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void> glDrawArraysIndirect;
    internal static ReadOnlySpan<byte> glDrawElementsIndirectFunctionName => "glDrawElementsIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glDrawElementsIndirect;
    internal static ReadOnlySpan<byte> glUniform1dFunctionName => "glUniform1d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* void */ void> glUniform1d;
    internal static ReadOnlySpan<byte> glUniform2dFunctionName => "glUniform2d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glUniform2d;
    internal static ReadOnlySpan<byte> glUniform3dFunctionName => "glUniform3d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glUniform3d;
    internal static ReadOnlySpan<byte> glUniform4dFunctionName => "glUniform4d"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glUniform4d;
    internal static ReadOnlySpan<byte> glUniform1dvFunctionName => "glUniform1dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glUniform1dv;
    internal static ReadOnlySpan<byte> glUniform2dvFunctionName => "glUniform2dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glUniform2dv;
    internal static ReadOnlySpan<byte> glUniform3dvFunctionName => "glUniform3dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glUniform3dv;
    internal static ReadOnlySpan<byte> glUniform4dvFunctionName => "glUniform4dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glUniform4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2dvFunctionName => "glUniformMatrix2dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3dvFunctionName => "glUniformMatrix3dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix3dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4dvFunctionName => "glUniformMatrix4dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x3dvFunctionName => "glUniformMatrix2x3dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix2x3dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x4dvFunctionName => "glUniformMatrix2x4dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix2x4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x2dvFunctionName => "glUniformMatrix3x2dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix3x2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x4dvFunctionName => "glUniformMatrix3x4dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix3x4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x2dvFunctionName => "glUniformMatrix4x2dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix4x2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x3dvFunctionName => "glUniformMatrix4x3dv"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glUniformMatrix4x3dv;
    internal static ReadOnlySpan<byte> glGetUniformdvFunctionName => "glGetUniformdv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double*, /* void */ void> glGetUniformdv;
    internal static ReadOnlySpan<byte> glGetSubroutineUniformLocationFunctionName => "glGetSubroutineUniformLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> glGetSubroutineUniformLocation;
    internal static ReadOnlySpan<byte> glGetSubroutineIndexFunctionName => "glGetSubroutineIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint> glGetSubroutineIndex;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineUniformivFunctionName => "glGetActiveSubroutineUniformiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveSubroutineUniformiv;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineUniformNameFunctionName => "glGetActiveSubroutineUniformName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveSubroutineUniformName;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineNameFunctionName => "glGetActiveSubroutineName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetActiveSubroutineName;
    internal static ReadOnlySpan<byte> glUniformSubroutinesuivFunctionName => "glUniformSubroutinesuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glUniformSubroutinesuiv;
    internal static ReadOnlySpan<byte> glGetUniformSubroutineuivFunctionName => "glGetUniformSubroutineuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glGetUniformSubroutineuiv;
    internal static ReadOnlySpan<byte> glGetProgramStageivFunctionName => "glGetProgramStageiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramStageiv;
    internal static ReadOnlySpan<byte> glPatchParameteriFunctionName => "glPatchParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> glPatchParameteri;
    internal static ReadOnlySpan<byte> glPatchParameterfvFunctionName => "glPatchParameterfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> glPatchParameterfv;
    internal static ReadOnlySpan<byte> glBindTransformFeedbackFunctionName => "glBindTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glBindTransformFeedback;
    internal static ReadOnlySpan<byte> glDeleteTransformFeedbacksFunctionName => "glDeleteTransformFeedbacks"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteTransformFeedbacks;
    internal static ReadOnlySpan<byte> glGenTransformFeedbacksFunctionName => "glGenTransformFeedbacks"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenTransformFeedbacks;
    internal static ReadOnlySpan<byte> glIsTransformFeedbackFunctionName => "glIsTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsTransformFeedback;
    internal static ReadOnlySpan<byte> glPauseTransformFeedbackFunctionName => "glPauseTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glPauseTransformFeedback;
    internal static ReadOnlySpan<byte> glResumeTransformFeedbackFunctionName => "glResumeTransformFeedback"u8;
    private readonly delegate* unmanaged</* void */ void> glResumeTransformFeedback;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackFunctionName => "glDrawTransformFeedback"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glDrawTransformFeedback;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackStreamFunctionName => "glDrawTransformFeedbackStream"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDrawTransformFeedbackStream;
    internal static ReadOnlySpan<byte> glBeginQueryIndexedFunctionName => "glBeginQueryIndexed"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBeginQueryIndexed;
    internal static ReadOnlySpan<byte> glEndQueryIndexedFunctionName => "glEndQueryIndexed"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> glEndQueryIndexed;
    internal static ReadOnlySpan<byte> glGetQueryIndexedivFunctionName => "glGetQueryIndexediv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetQueryIndexediv;
    internal static ReadOnlySpan<byte> glReleaseShaderCompilerFunctionName => "glReleaseShaderCompiler"u8;
    private readonly delegate* unmanaged</* void */ void> glReleaseShaderCompiler;
    internal static ReadOnlySpan<byte> glShaderBinaryFunctionName => "glShaderBinary"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glShaderBinary;
    internal static ReadOnlySpan<byte> glGetShaderPrecisionFormatFunctionName => "glGetShaderPrecisionFormat"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void> glGetShaderPrecisionFormat;
    internal static ReadOnlySpan<byte> glDepthRangefFunctionName => "glDepthRangef"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> glDepthRangef;
    internal static ReadOnlySpan<byte> glClearDepthfFunctionName => "glClearDepthf"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> glClearDepthf;
    internal static ReadOnlySpan<byte> glGetProgramBinaryFunctionName => "glGetProgramBinary"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void> glGetProgramBinary;
    internal static ReadOnlySpan<byte> glProgramBinaryFunctionName => "glProgramBinary"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> glProgramBinary;
    internal static ReadOnlySpan<byte> glProgramParameteriFunctionName => "glProgramParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glProgramParameteri;
    internal static ReadOnlySpan<byte> glUseProgramStagesFunctionName => "glUseProgramStages"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void> glUseProgramStages;
    internal static ReadOnlySpan<byte> glActiveShaderProgramFunctionName => "glActiveShaderProgram"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glActiveShaderProgram;
    internal static ReadOnlySpan<byte> glCreateShaderProgramvFunctionName => "glCreateShaderProgramv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint> glCreateShaderProgramv;
    internal static ReadOnlySpan<byte> glBindProgramPipelineFunctionName => "glBindProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glBindProgramPipeline;
    internal static ReadOnlySpan<byte> glDeleteProgramPipelinesFunctionName => "glDeleteProgramPipelines"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glDeleteProgramPipelines;
    internal static ReadOnlySpan<byte> glGenProgramPipelinesFunctionName => "glGenProgramPipelines"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGenProgramPipelines;
    internal static ReadOnlySpan<byte> glIsProgramPipelineFunctionName => "glIsProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glIsProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineivFunctionName => "glGetProgramPipelineiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramPipelineiv;
    internal static ReadOnlySpan<byte> glProgramUniform1iFunctionName => "glProgramUniform1i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform1i;
    internal static ReadOnlySpan<byte> glProgramUniform1ivFunctionName => "glProgramUniform1iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform1iv;
    internal static ReadOnlySpan<byte> glProgramUniform1fFunctionName => "glProgramUniform1f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void> glProgramUniform1f;
    internal static ReadOnlySpan<byte> glProgramUniform1fvFunctionName => "glProgramUniform1fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform1fv;
    internal static ReadOnlySpan<byte> glProgramUniform1dFunctionName => "glProgramUniform1d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* void */ void> glProgramUniform1d;
    internal static ReadOnlySpan<byte> glProgramUniform1dvFunctionName => "glProgramUniform1dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glProgramUniform1dv;
    internal static ReadOnlySpan<byte> glProgramUniform1uiFunctionName => "glProgramUniform1ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void> glProgramUniform1ui;
    internal static ReadOnlySpan<byte> glProgramUniform1uivFunctionName => "glProgramUniform1uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform1uiv;
    internal static ReadOnlySpan<byte> glProgramUniform2iFunctionName => "glProgramUniform2i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform2i;
    internal static ReadOnlySpan<byte> glProgramUniform2ivFunctionName => "glProgramUniform2iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform2iv;
    internal static ReadOnlySpan<byte> glProgramUniform2fFunctionName => "glProgramUniform2f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform2f;
    internal static ReadOnlySpan<byte> glProgramUniform2fvFunctionName => "glProgramUniform2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform2fv;
    internal static ReadOnlySpan<byte> glProgramUniform2dFunctionName => "glProgramUniform2d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glProgramUniform2d;
    internal static ReadOnlySpan<byte> glProgramUniform2dvFunctionName => "glProgramUniform2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glProgramUniform2dv;
    internal static ReadOnlySpan<byte> glProgramUniform2uiFunctionName => "glProgramUniform2ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform2ui;
    internal static ReadOnlySpan<byte> glProgramUniform2uivFunctionName => "glProgramUniform2uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform2uiv;
    internal static ReadOnlySpan<byte> glProgramUniform3iFunctionName => "glProgramUniform3i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform3i;
    internal static ReadOnlySpan<byte> glProgramUniform3ivFunctionName => "glProgramUniform3iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform3iv;
    internal static ReadOnlySpan<byte> glProgramUniform3fFunctionName => "glProgramUniform3f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform3f;
    internal static ReadOnlySpan<byte> glProgramUniform3fvFunctionName => "glProgramUniform3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform3fv;
    internal static ReadOnlySpan<byte> glProgramUniform3dFunctionName => "glProgramUniform3d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glProgramUniform3d;
    internal static ReadOnlySpan<byte> glProgramUniform3dvFunctionName => "glProgramUniform3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glProgramUniform3dv;
    internal static ReadOnlySpan<byte> glProgramUniform3uiFunctionName => "glProgramUniform3ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform3ui;
    internal static ReadOnlySpan<byte> glProgramUniform3uivFunctionName => "glProgramUniform3uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform3uiv;
    internal static ReadOnlySpan<byte> glProgramUniform4iFunctionName => "glProgramUniform4i"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> glProgramUniform4i;
    internal static ReadOnlySpan<byte> glProgramUniform4ivFunctionName => "glProgramUniform4iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glProgramUniform4iv;
    internal static ReadOnlySpan<byte> glProgramUniform4fFunctionName => "glProgramUniform4f"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glProgramUniform4f;
    internal static ReadOnlySpan<byte> glProgramUniform4fvFunctionName => "glProgramUniform4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glProgramUniform4fv;
    internal static ReadOnlySpan<byte> glProgramUniform4dFunctionName => "glProgramUniform4d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glProgramUniform4d;
    internal static ReadOnlySpan<byte> glProgramUniform4dvFunctionName => "glProgramUniform4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glProgramUniform4dv;
    internal static ReadOnlySpan<byte> glProgramUniform4uiFunctionName => "glProgramUniform4ui"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glProgramUniform4ui;
    internal static ReadOnlySpan<byte> glProgramUniform4uivFunctionName => "glProgramUniform4uiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glProgramUniform4uiv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2fvFunctionName => "glProgramUniformMatrix2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3fvFunctionName => "glProgramUniformMatrix3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4fvFunctionName => "glProgramUniformMatrix4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2dvFunctionName => "glProgramUniformMatrix2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3dvFunctionName => "glProgramUniformMatrix3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix3dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4dvFunctionName => "glProgramUniformMatrix4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x3fvFunctionName => "glProgramUniformMatrix2x3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x2fvFunctionName => "glProgramUniformMatrix3x2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x4fvFunctionName => "glProgramUniformMatrix2x4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x2fvFunctionName => "glProgramUniformMatrix4x2fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x4fvFunctionName => "glProgramUniformMatrix3x4fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x3fvFunctionName => "glProgramUniformMatrix4x3fv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> glProgramUniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x3dvFunctionName => "glProgramUniformMatrix2x3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix2x3dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x2dvFunctionName => "glProgramUniformMatrix3x2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix3x2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x4dvFunctionName => "glProgramUniformMatrix2x4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix2x4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x2dvFunctionName => "glProgramUniformMatrix4x2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix4x2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x4dvFunctionName => "glProgramUniformMatrix3x4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix3x4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x3dvFunctionName => "glProgramUniformMatrix4x3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> glProgramUniformMatrix4x3dv;
    internal static ReadOnlySpan<byte> glValidateProgramPipelineFunctionName => "glValidateProgramPipeline"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glValidateProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineInfoLogFunctionName => "glGetProgramPipelineInfoLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramPipelineInfoLog;
    internal static ReadOnlySpan<byte> glVertexAttribL1dFunctionName => "glVertexAttribL1d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void> glVertexAttribL1d;
    internal static ReadOnlySpan<byte> glVertexAttribL2dFunctionName => "glVertexAttribL2d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttribL2d;
    internal static ReadOnlySpan<byte> glVertexAttribL3dFunctionName => "glVertexAttribL3d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttribL3d;
    internal static ReadOnlySpan<byte> glVertexAttribL4dFunctionName => "glVertexAttribL4d"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glVertexAttribL4d;
    internal static ReadOnlySpan<byte> glVertexAttribL1dvFunctionName => "glVertexAttribL1dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttribL1dv;
    internal static ReadOnlySpan<byte> glVertexAttribL2dvFunctionName => "glVertexAttribL2dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttribL2dv;
    internal static ReadOnlySpan<byte> glVertexAttribL3dvFunctionName => "glVertexAttribL3dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttribL3dv;
    internal static ReadOnlySpan<byte> glVertexAttribL4dvFunctionName => "glVertexAttribL4dv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glVertexAttribL4dv;
    internal static ReadOnlySpan<byte> glVertexAttribLPointerFunctionName => "glVertexAttribLPointer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glVertexAttribLPointer;
    internal static ReadOnlySpan<byte> glGetVertexAttribLdvFunctionName => "glGetVertexAttribLdv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> glGetVertexAttribLdv;
    internal static ReadOnlySpan<byte> glViewportArrayvFunctionName => "glViewportArrayv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glViewportArrayv;
    internal static ReadOnlySpan<byte> glViewportIndexedfFunctionName => "glViewportIndexedf"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glViewportIndexedf;
    internal static ReadOnlySpan<byte> glViewportIndexedfvFunctionName => "glViewportIndexedfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glViewportIndexedfv;
    internal static ReadOnlySpan<byte> glScissorArrayvFunctionName => "glScissorArrayv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glScissorArrayv;
    internal static ReadOnlySpan<byte> glScissorIndexedFunctionName => "glScissorIndexed"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glScissorIndexed;
    internal static ReadOnlySpan<byte> glScissorIndexedvFunctionName => "glScissorIndexedv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> glScissorIndexedv;
    internal static ReadOnlySpan<byte> glDepthRangeArrayvFunctionName => "glDepthRangeArrayv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glDepthRangeArrayv;
    internal static ReadOnlySpan<byte> glDepthRangeIndexedFunctionName => "glDepthRangeIndexed"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> glDepthRangeIndexed;
    internal static ReadOnlySpan<byte> glGetFloati_vFunctionName => "glGetFloati_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void> glGetFloati_v;
    internal static ReadOnlySpan<byte> glGetDoublei_vFunctionName => "glGetDoublei_v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLdouble */ double*, /* void */ void> glGetDoublei_v;
    internal static ReadOnlySpan<byte> glDrawArraysInstancedBaseInstanceFunctionName => "glDrawArraysInstancedBaseInstance"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLuint */ uint, /* void */ void> glDrawArraysInstancedBaseInstance;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseInstanceFunctionName => "glDrawElementsInstancedBaseInstance"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLuint */ uint, /* void */ void> glDrawElementsInstancedBaseInstance;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseVertexBaseInstanceFunctionName => "glDrawElementsInstancedBaseVertexBaseInstance"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> glDrawElementsInstancedBaseVertexBaseInstance;
    internal static ReadOnlySpan<byte> glGetInternalformativFunctionName => "glGetInternalformativ"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glGetInternalformativ;
    internal static ReadOnlySpan<byte> glGetActiveAtomicCounterBufferivFunctionName => "glGetActiveAtomicCounterBufferiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetActiveAtomicCounterBufferiv;
    internal static ReadOnlySpan<byte> glBindImageTextureFunctionName => "glBindImageTexture"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> glBindImageTexture;
    internal static ReadOnlySpan<byte> glMemoryBarrierFunctionName => "glMemoryBarrier"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glMemoryBarrier;
    internal static ReadOnlySpan<byte> glTexStorage1DFunctionName => "glTexStorage1D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void> glTexStorage1D;
    internal static ReadOnlySpan<byte> glTexStorage2DFunctionName => "glTexStorage2D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTexStorage2D;
    internal static ReadOnlySpan<byte> glTexStorage3DFunctionName => "glTexStorage3D"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTexStorage3D;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackInstancedFunctionName => "glDrawTransformFeedbackInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* void */ void> glDrawTransformFeedbackInstanced;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackStreamInstancedFunctionName => "glDrawTransformFeedbackStreamInstanced"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* void */ void> glDrawTransformFeedbackStreamInstanced;
    internal static ReadOnlySpan<byte> glClearBufferDataFunctionName => "glClearBufferData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearBufferData;
    internal static ReadOnlySpan<byte> glClearBufferSubDataFunctionName => "glClearBufferSubData"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearBufferSubData;
    internal static ReadOnlySpan<byte> glDispatchComputeFunctionName => "glDispatchCompute"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDispatchCompute;
    internal static ReadOnlySpan<byte> glDispatchComputeIndirectFunctionName => "glDispatchComputeIndirect"u8;
    private readonly delegate* unmanaged</* GLintptr */ nint, /* void */ void> glDispatchComputeIndirect;
    internal static ReadOnlySpan<byte> glCopyImageSubDataFunctionName => "glCopyImageSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyImageSubData;
    internal static ReadOnlySpan<byte> glFramebufferParameteriFunctionName => "glFramebufferParameteri"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> glFramebufferParameteri;
    internal static ReadOnlySpan<byte> glGetFramebufferParameterivFunctionName => "glGetFramebufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetFramebufferParameteriv;
    internal static ReadOnlySpan<byte> glGetInternalformati64vFunctionName => "glGetInternalformati64v"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint64 */ long*, /* void */ void> glGetInternalformati64v;
    internal static ReadOnlySpan<byte> glInvalidateTexSubImageFunctionName => "glInvalidateTexSubImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glInvalidateTexSubImage;
    internal static ReadOnlySpan<byte> glInvalidateTexImageFunctionName => "glInvalidateTexImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void> glInvalidateTexImage;
    internal static ReadOnlySpan<byte> glInvalidateBufferSubDataFunctionName => "glInvalidateBufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glInvalidateBufferSubData;
    internal static ReadOnlySpan<byte> glInvalidateBufferDataFunctionName => "glInvalidateBufferData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glInvalidateBufferData;
    internal static ReadOnlySpan<byte> glInvalidateFramebufferFunctionName => "glInvalidateFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> glInvalidateFramebuffer;
    internal static ReadOnlySpan<byte> glInvalidateSubFramebufferFunctionName => "glInvalidateSubFramebuffer"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glInvalidateSubFramebuffer;
    internal static ReadOnlySpan<byte> glMultiDrawArraysIndirectFunctionName => "glMultiDrawArraysIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glMultiDrawArraysIndirect;
    internal static ReadOnlySpan<byte> glMultiDrawElementsIndirectFunctionName => "glMultiDrawElementsIndirect"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glMultiDrawElementsIndirect;
    internal static ReadOnlySpan<byte> glGetProgramInterfaceivFunctionName => "glGetProgramInterfaceiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetProgramInterfaceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceIndexFunctionName => "glGetProgramResourceIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint> glGetProgramResourceIndex;
    internal static ReadOnlySpan<byte> glGetProgramResourceNameFunctionName => "glGetProgramResourceName"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetProgramResourceName;
    internal static ReadOnlySpan<byte> glGetProgramResourceivFunctionName => "glGetProgramResourceiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> glGetProgramResourceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceLocationFunctionName => "glGetProgramResourceLocation"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> glGetProgramResourceLocation;
    internal static ReadOnlySpan<byte> glGetProgramResourceLocationIndexFunctionName => "glGetProgramResourceLocationIndex"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> glGetProgramResourceLocationIndex;
    internal static ReadOnlySpan<byte> glShaderStorageBlockBindingFunctionName => "glShaderStorageBlockBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glShaderStorageBlockBinding;
    internal static ReadOnlySpan<byte> glTexBufferRangeFunctionName => "glTexBufferRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glTexBufferRange;
    internal static ReadOnlySpan<byte> glTexStorage2DMultisampleFunctionName => "glTexStorage2DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexStorage2DMultisample;
    internal static ReadOnlySpan<byte> glTexStorage3DMultisampleFunctionName => "glTexStorage3DMultisample"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTexStorage3DMultisample;
    internal static ReadOnlySpan<byte> glTextureViewFunctionName => "glTextureView"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glTextureView;
    internal static ReadOnlySpan<byte> glBindVertexBufferFunctionName => "glBindVertexBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void> glBindVertexBuffer;
    internal static ReadOnlySpan<byte> glVertexAttribFormatFunctionName => "glVertexAttribFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexAttribFormat;
    internal static ReadOnlySpan<byte> glVertexAttribIFormatFunctionName => "glVertexAttribIFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexAttribIFormat;
    internal static ReadOnlySpan<byte> glVertexAttribLFormatFunctionName => "glVertexAttribLFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexAttribLFormat;
    internal static ReadOnlySpan<byte> glVertexAttribBindingFunctionName => "glVertexAttribBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexAttribBinding;
    internal static ReadOnlySpan<byte> glVertexBindingDivisorFunctionName => "glVertexBindingDivisor"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexBindingDivisor;
    internal static ReadOnlySpan<byte> glDebugMessageControlFunctionName => "glDebugMessageControl"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void> glDebugMessageControl;
    internal static ReadOnlySpan<byte> glDebugMessageInsertFunctionName => "glDebugMessageInsert"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glDebugMessageInsert;
    internal static ReadOnlySpan<byte> glDebugMessageCallbackFunctionName => "glDebugMessageCallback"u8;
    private readonly delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void> glDebugMessageCallback;
    internal static ReadOnlySpan<byte> glGetDebugMessageLogFunctionName => "glGetDebugMessageLog"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint> glGetDebugMessageLog;
    internal static ReadOnlySpan<byte> glPushDebugGroupFunctionName => "glPushDebugGroup"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glPushDebugGroup;
    internal static ReadOnlySpan<byte> glPopDebugGroupFunctionName => "glPopDebugGroup"u8;
    private readonly delegate* unmanaged</* void */ void> glPopDebugGroup;
    internal static ReadOnlySpan<byte> glObjectLabelFunctionName => "glObjectLabel"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glObjectLabel;
    internal static ReadOnlySpan<byte> glGetObjectLabelFunctionName => "glGetObjectLabel"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetObjectLabel;
    internal static ReadOnlySpan<byte> glObjectPtrLabelFunctionName => "glObjectPtrLabel"u8;
    private readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> glObjectPtrLabel;
    internal static ReadOnlySpan<byte> glGetObjectPtrLabelFunctionName => "glGetObjectPtrLabel"u8;
    private readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> glGetObjectPtrLabel;
    internal static ReadOnlySpan<byte> glBufferStorageFunctionName => "glBufferStorage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void> glBufferStorage;
    internal static ReadOnlySpan<byte> glClearTexImageFunctionName => "glClearTexImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearTexImage;
    internal static ReadOnlySpan<byte> glClearTexSubImageFunctionName => "glClearTexSubImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearTexSubImage;
    internal static ReadOnlySpan<byte> glBindBuffersBaseFunctionName => "glBindBuffersBase"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glBindBuffersBase;
    internal static ReadOnlySpan<byte> glBindBuffersRangeFunctionName => "glBindBuffersRange"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizeiptr */ nint*, /* void */ void> glBindBuffersRange;
    internal static ReadOnlySpan<byte> glBindTexturesFunctionName => "glBindTextures"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glBindTextures;
    internal static ReadOnlySpan<byte> glBindSamplersFunctionName => "glBindSamplers"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glBindSamplers;
    internal static ReadOnlySpan<byte> glBindImageTexturesFunctionName => "glBindImageTextures"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glBindImageTextures;
    internal static ReadOnlySpan<byte> glBindVertexBuffersFunctionName => "glBindVertexBuffers"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void> glBindVertexBuffers;
    internal static ReadOnlySpan<byte> glClipControlFunctionName => "glClipControl"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> glClipControl;
    internal static ReadOnlySpan<byte> glCreateTransformFeedbacksFunctionName => "glCreateTransformFeedbacks"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateTransformFeedbacks;
    internal static ReadOnlySpan<byte> glTransformFeedbackBufferBaseFunctionName => "glTransformFeedbackBufferBase"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glTransformFeedbackBufferBase;
    internal static ReadOnlySpan<byte> glTransformFeedbackBufferRangeFunctionName => "glTransformFeedbackBufferRange"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glTransformFeedbackBufferRange;
    internal static ReadOnlySpan<byte> glGetTransformFeedbackivFunctionName => "glGetTransformFeedbackiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTransformFeedbackiv;
    internal static ReadOnlySpan<byte> glGetTransformFeedbacki_vFunctionName => "glGetTransformFeedbacki_v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void> glGetTransformFeedbacki_v;
    internal static ReadOnlySpan<byte> glGetTransformFeedbacki64_vFunctionName => "glGetTransformFeedbacki64_v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void> glGetTransformFeedbacki64_v;
    internal static ReadOnlySpan<byte> glCreateBuffersFunctionName => "glCreateBuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateBuffers;
    internal static ReadOnlySpan<byte> glNamedBufferStorageFunctionName => "glNamedBufferStorage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void> glNamedBufferStorage;
    internal static ReadOnlySpan<byte> glNamedBufferDataFunctionName => "glNamedBufferData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> glNamedBufferData;
    internal static ReadOnlySpan<byte> glNamedBufferSubDataFunctionName => "glNamedBufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glNamedBufferSubData;
    internal static ReadOnlySpan<byte> glCopyNamedBufferSubDataFunctionName => "glCopyNamedBufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glCopyNamedBufferSubData;
    internal static ReadOnlySpan<byte> glClearNamedBufferDataFunctionName => "glClearNamedBufferData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearNamedBufferData;
    internal static ReadOnlySpan<byte> glClearNamedBufferSubDataFunctionName => "glClearNamedBufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glClearNamedBufferSubData;
    internal static ReadOnlySpan<byte> glMapNamedBufferFunctionName => "glMapNamedBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*> glMapNamedBuffer;
    internal static ReadOnlySpan<byte> glMapNamedBufferRangeFunctionName => "glMapNamedBufferRange"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*> glMapNamedBufferRange;
    internal static ReadOnlySpan<byte> glUnmapNamedBufferFunctionName => "glUnmapNamedBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> glUnmapNamedBuffer;
    internal static ReadOnlySpan<byte> glFlushMappedNamedBufferRangeFunctionName => "glFlushMappedNamedBufferRange"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glFlushMappedNamedBufferRange;
    internal static ReadOnlySpan<byte> glGetNamedBufferParameterivFunctionName => "glGetNamedBufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetNamedBufferParameteriv;
    internal static ReadOnlySpan<byte> glGetNamedBufferParameteri64vFunctionName => "glGetNamedBufferParameteri64v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetNamedBufferParameteri64v;
    internal static ReadOnlySpan<byte> glGetNamedBufferPointervFunctionName => "glGetNamedBufferPointerv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void> glGetNamedBufferPointerv;
    internal static ReadOnlySpan<byte> glGetNamedBufferSubDataFunctionName => "glGetNamedBufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> glGetNamedBufferSubData;
    internal static ReadOnlySpan<byte> glCreateFramebuffersFunctionName => "glCreateFramebuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateFramebuffers;
    internal static ReadOnlySpan<byte> glNamedFramebufferRenderbufferFunctionName => "glNamedFramebufferRenderbuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glNamedFramebufferRenderbuffer;
    internal static ReadOnlySpan<byte> glNamedFramebufferParameteriFunctionName => "glNamedFramebufferParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glNamedFramebufferParameteri;
    internal static ReadOnlySpan<byte> glNamedFramebufferTextureFunctionName => "glNamedFramebufferTexture"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> glNamedFramebufferTexture;
    internal static ReadOnlySpan<byte> glNamedFramebufferTextureLayerFunctionName => "glNamedFramebufferTextureLayer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> glNamedFramebufferTextureLayer;
    internal static ReadOnlySpan<byte> glNamedFramebufferDrawBufferFunctionName => "glNamedFramebufferDrawBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glNamedFramebufferDrawBuffer;
    internal static ReadOnlySpan<byte> glNamedFramebufferDrawBuffersFunctionName => "glNamedFramebufferDrawBuffers"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> glNamedFramebufferDrawBuffers;
    internal static ReadOnlySpan<byte> glNamedFramebufferReadBufferFunctionName => "glNamedFramebufferReadBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> glNamedFramebufferReadBuffer;
    internal static ReadOnlySpan<byte> glInvalidateNamedFramebufferDataFunctionName => "glInvalidateNamedFramebufferData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> glInvalidateNamedFramebufferData;
    internal static ReadOnlySpan<byte> glInvalidateNamedFramebufferSubDataFunctionName => "glInvalidateNamedFramebufferSubData"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glInvalidateNamedFramebufferSubData;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferivFunctionName => "glClearNamedFramebufferiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void> glClearNamedFramebufferiv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferuivFunctionName => "glClearNamedFramebufferuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> glClearNamedFramebufferuiv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferfvFunctionName => "glClearNamedFramebufferfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> glClearNamedFramebufferfv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferfiFunctionName => "glClearNamedFramebufferfi"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void> glClearNamedFramebufferfi;
    internal static ReadOnlySpan<byte> glBlitNamedFramebufferFunctionName => "glBlitNamedFramebuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void> glBlitNamedFramebuffer;
    internal static ReadOnlySpan<byte> glCheckNamedFramebufferStatusFunctionName => "glCheckNamedFramebufferStatus"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int> glCheckNamedFramebufferStatus;
    internal static ReadOnlySpan<byte> glGetNamedFramebufferParameterivFunctionName => "glGetNamedFramebufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetNamedFramebufferParameteriv;
    internal static ReadOnlySpan<byte> glGetNamedFramebufferAttachmentParameterivFunctionName => "glGetNamedFramebufferAttachmentParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetNamedFramebufferAttachmentParameteriv;
    internal static ReadOnlySpan<byte> glCreateRenderbuffersFunctionName => "glCreateRenderbuffers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateRenderbuffers;
    internal static ReadOnlySpan<byte> glNamedRenderbufferStorageFunctionName => "glNamedRenderbufferStorage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glNamedRenderbufferStorage;
    internal static ReadOnlySpan<byte> glNamedRenderbufferStorageMultisampleFunctionName => "glNamedRenderbufferStorageMultisample"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glNamedRenderbufferStorageMultisample;
    internal static ReadOnlySpan<byte> glGetNamedRenderbufferParameterivFunctionName => "glGetNamedRenderbufferParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetNamedRenderbufferParameteriv;
    internal static ReadOnlySpan<byte> glCreateTexturesFunctionName => "glCreateTextures"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateTextures;
    internal static ReadOnlySpan<byte> glTextureBufferFunctionName => "glTextureBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glTextureBuffer;
    internal static ReadOnlySpan<byte> glTextureBufferRangeFunctionName => "glTextureBufferRange"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> glTextureBufferRange;
    internal static ReadOnlySpan<byte> glTextureStorage1DFunctionName => "glTextureStorage1D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void> glTextureStorage1D;
    internal static ReadOnlySpan<byte> glTextureStorage2DFunctionName => "glTextureStorage2D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTextureStorage2D;
    internal static ReadOnlySpan<byte> glTextureStorage3DFunctionName => "glTextureStorage3D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glTextureStorage3D;
    internal static ReadOnlySpan<byte> glTextureStorage2DMultisampleFunctionName => "glTextureStorage2DMultisample"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTextureStorage2DMultisample;
    internal static ReadOnlySpan<byte> glTextureStorage3DMultisampleFunctionName => "glTextureStorage3DMultisample"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> glTextureStorage3DMultisample;
    internal static ReadOnlySpan<byte> glTextureSubImage1DFunctionName => "glTextureSubImage1D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTextureSubImage1D;
    internal static ReadOnlySpan<byte> glTextureSubImage2DFunctionName => "glTextureSubImage2D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTextureSubImage2D;
    internal static ReadOnlySpan<byte> glTextureSubImage3DFunctionName => "glTextureSubImage3D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> glTextureSubImage3D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage1DFunctionName => "glCompressedTextureSubImage1D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTextureSubImage1D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage2DFunctionName => "glCompressedTextureSubImage2D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTextureSubImage2D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage3DFunctionName => "glCompressedTextureSubImage3D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glCompressedTextureSubImage3D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage1DFunctionName => "glCopyTextureSubImage1D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> glCopyTextureSubImage1D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage2DFunctionName => "glCopyTextureSubImage2D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTextureSubImage2D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage3DFunctionName => "glCopyTextureSubImage3D"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glCopyTextureSubImage3D;
    internal static ReadOnlySpan<byte> glTextureParameterfFunctionName => "glTextureParameterf"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void> glTextureParameterf;
    internal static ReadOnlySpan<byte> glTextureParameterfvFunctionName => "glTextureParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glTextureParameterfv;
    internal static ReadOnlySpan<byte> glTextureParameteriFunctionName => "glTextureParameteri"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> glTextureParameteri;
    internal static ReadOnlySpan<byte> glTextureParameterIivFunctionName => "glTextureParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTextureParameterIiv;
    internal static ReadOnlySpan<byte> glTextureParameterIuivFunctionName => "glTextureParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glTextureParameterIuiv;
    internal static ReadOnlySpan<byte> glTextureParameterivFunctionName => "glTextureParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glTextureParameteriv;
    internal static ReadOnlySpan<byte> glGenerateTextureMipmapFunctionName => "glGenerateTextureMipmap"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> glGenerateTextureMipmap;
    internal static ReadOnlySpan<byte> glBindTextureUnitFunctionName => "glBindTextureUnit"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glBindTextureUnit;
    internal static ReadOnlySpan<byte> glGetTextureImageFunctionName => "glGetTextureImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetTextureImage;
    internal static ReadOnlySpan<byte> glGetCompressedTextureImageFunctionName => "glGetCompressedTextureImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetCompressedTextureImage;
    internal static ReadOnlySpan<byte> glGetTextureLevelParameterfvFunctionName => "glGetTextureLevelParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTextureLevelParameterfv;
    internal static ReadOnlySpan<byte> glGetTextureLevelParameterivFunctionName => "glGetTextureLevelParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTextureLevelParameteriv;
    internal static ReadOnlySpan<byte> glGetTextureParameterfvFunctionName => "glGetTextureParameterfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> glGetTextureParameterfv;
    internal static ReadOnlySpan<byte> glGetTextureParameterIivFunctionName => "glGetTextureParameterIiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTextureParameterIiv;
    internal static ReadOnlySpan<byte> glGetTextureParameterIuivFunctionName => "glGetTextureParameterIuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> glGetTextureParameterIuiv;
    internal static ReadOnlySpan<byte> glGetTextureParameterivFunctionName => "glGetTextureParameteriv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetTextureParameteriv;
    internal static ReadOnlySpan<byte> glCreateVertexArraysFunctionName => "glCreateVertexArrays"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateVertexArrays;
    internal static ReadOnlySpan<byte> glDisableVertexArrayAttribFunctionName => "glDisableVertexArrayAttrib"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glDisableVertexArrayAttrib;
    internal static ReadOnlySpan<byte> glEnableVertexArrayAttribFunctionName => "glEnableVertexArrayAttrib"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glEnableVertexArrayAttrib;
    internal static ReadOnlySpan<byte> glVertexArrayElementBufferFunctionName => "glVertexArrayElementBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexArrayElementBuffer;
    internal static ReadOnlySpan<byte> glVertexArrayVertexBufferFunctionName => "glVertexArrayVertexBuffer"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void> glVertexArrayVertexBuffer;
    internal static ReadOnlySpan<byte> glVertexArrayVertexBuffersFunctionName => "glVertexArrayVertexBuffers"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void> glVertexArrayVertexBuffers;
    internal static ReadOnlySpan<byte> glVertexArrayAttribBindingFunctionName => "glVertexArrayAttribBinding"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexArrayAttribBinding;
    internal static ReadOnlySpan<byte> glVertexArrayAttribFormatFunctionName => "glVertexArrayAttribFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> glVertexArrayAttribFormat;
    internal static ReadOnlySpan<byte> glVertexArrayAttribIFormatFunctionName => "glVertexArrayAttribIFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexArrayAttribIFormat;
    internal static ReadOnlySpan<byte> glVertexArrayAttribLFormatFunctionName => "glVertexArrayAttribLFormat"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> glVertexArrayAttribLFormat;
    internal static ReadOnlySpan<byte> glVertexArrayBindingDivisorFunctionName => "glVertexArrayBindingDivisor"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> glVertexArrayBindingDivisor;
    internal static ReadOnlySpan<byte> glGetVertexArrayivFunctionName => "glGetVertexArrayiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexArrayiv;
    internal static ReadOnlySpan<byte> glGetVertexArrayIndexedivFunctionName => "glGetVertexArrayIndexediv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> glGetVertexArrayIndexediv;
    internal static ReadOnlySpan<byte> glGetVertexArrayIndexed64ivFunctionName => "glGetVertexArrayIndexed64iv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> glGetVertexArrayIndexed64iv;
    internal static ReadOnlySpan<byte> glCreateSamplersFunctionName => "glCreateSamplers"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateSamplers;
    internal static ReadOnlySpan<byte> glCreateProgramPipelinesFunctionName => "glCreateProgramPipelines"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateProgramPipelines;
    internal static ReadOnlySpan<byte> glCreateQueriesFunctionName => "glCreateQueries"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glCreateQueries;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjecti64vFunctionName => "glGetQueryBufferObjecti64v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> glGetQueryBufferObjecti64v;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectivFunctionName => "glGetQueryBufferObjectiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> glGetQueryBufferObjectiv;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectui64vFunctionName => "glGetQueryBufferObjectui64v"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> glGetQueryBufferObjectui64v;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectuivFunctionName => "glGetQueryBufferObjectuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> glGetQueryBufferObjectuiv;
    internal static ReadOnlySpan<byte> glMemoryBarrierByRegionFunctionName => "glMemoryBarrierByRegion"u8;
    private readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> glMemoryBarrierByRegion;
    internal static ReadOnlySpan<byte> glGetTextureSubImageFunctionName => "glGetTextureSubImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetTextureSubImage;
    internal static ReadOnlySpan<byte> glGetCompressedTextureSubImageFunctionName => "glGetCompressedTextureSubImage"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetCompressedTextureSubImage;
    internal static ReadOnlySpan<byte> glGetGraphicsResetStatusFunctionName => "glGetGraphicsResetStatus"u8;
    private readonly delegate* unmanaged</* GLenum */ int> glGetGraphicsResetStatus;
    internal static ReadOnlySpan<byte> glGetnCompressedTexImageFunctionName => "glGetnCompressedTexImage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnCompressedTexImage;
    internal static ReadOnlySpan<byte> glGetnTexImageFunctionName => "glGetnTexImage"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnTexImage;
    internal static ReadOnlySpan<byte> glGetnUniformdvFunctionName => "glGetnUniformdv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glGetnUniformdv;
    internal static ReadOnlySpan<byte> glGetnUniformfvFunctionName => "glGetnUniformfv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glGetnUniformfv;
    internal static ReadOnlySpan<byte> glGetnUniformivFunctionName => "glGetnUniformiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glGetnUniformiv;
    internal static ReadOnlySpan<byte> glGetnUniformuivFunctionName => "glGetnUniformuiv"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGetnUniformuiv;
    internal static ReadOnlySpan<byte> glReadnPixelsFunctionName => "glReadnPixels"u8;
    private readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glReadnPixels;
    internal static ReadOnlySpan<byte> glGetnMapdvFunctionName => "glGetnMapdv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> glGetnMapdv;
    internal static ReadOnlySpan<byte> glGetnMapfvFunctionName => "glGetnMapfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glGetnMapfv;
    internal static ReadOnlySpan<byte> glGetnMapivFunctionName => "glGetnMapiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> glGetnMapiv;
    internal static ReadOnlySpan<byte> glGetnPixelMapfvFunctionName => "glGetnPixelMapfv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> glGetnPixelMapfv;
    internal static ReadOnlySpan<byte> glGetnPixelMapuivFunctionName => "glGetnPixelMapuiv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> glGetnPixelMapuiv;
    internal static ReadOnlySpan<byte> glGetnPixelMapusvFunctionName => "glGetnPixelMapusv"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void> glGetnPixelMapusv;
    internal static ReadOnlySpan<byte> glGetnPolygonStippleFunctionName => "glGetnPolygonStipple"u8;
    private readonly delegate* unmanaged</* GLsizei */ int, /* GLubyte */ byte*, /* void */ void> glGetnPolygonStipple;
    internal static ReadOnlySpan<byte> glGetnColorTableFunctionName => "glGetnColorTable"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnColorTable;
    internal static ReadOnlySpan<byte> glGetnConvolutionFilterFunctionName => "glGetnConvolutionFilter"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnConvolutionFilter;
    internal static ReadOnlySpan<byte> glGetnSeparableFilterFunctionName => "glGetnSeparableFilter"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* GLsizei */ int, /* void */ void*, /* void */ void*, /* void */ void> glGetnSeparableFilter;
    internal static ReadOnlySpan<byte> glGetnHistogramFunctionName => "glGetnHistogram"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnHistogram;
    internal static ReadOnlySpan<byte> glGetnMinmaxFunctionName => "glGetnMinmax"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> glGetnMinmax;
    internal static ReadOnlySpan<byte> glTextureBarrierFunctionName => "glTextureBarrier"u8;
    private readonly delegate* unmanaged</* void */ void> glTextureBarrier;
    internal static ReadOnlySpan<byte> glSpecializeShaderFunctionName => "glSpecializeShader"u8;
    private readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint, /* GLuint */ uint*, /* GLuint */ uint*, /* void */ void> glSpecializeShader;
    internal static ReadOnlySpan<byte> glMultiDrawArraysIndirectCountFunctionName => "glMultiDrawArraysIndirectCount"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glMultiDrawArraysIndirectCount;
    internal static ReadOnlySpan<byte> glMultiDrawElementsIndirectCountFunctionName => "glMultiDrawElementsIndirectCount"u8;
    private readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> glMultiDrawElementsIndirectCount;
    internal static ReadOnlySpan<byte> glPolygonOffsetClampFunctionName => "glPolygonOffsetClamp"u8;
    private readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> glPolygonOffsetClamp;
}
