using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGl;

public unsafe partial class Gl
{
    public readonly ushort Major;
    public readonly ushort Minor;
    public readonly bool Version10;
    public readonly bool Version11;
    public readonly bool Version12;
    public readonly bool Version13;
    public readonly bool Version14;
    public readonly bool Version15;
    public readonly bool Version20;
    public readonly bool Version21;
    public readonly bool Version30;
    public readonly bool Version31;
    public readonly bool Version32;
    public readonly bool Version33;
    public readonly bool Version40;
    public readonly bool Version41;
    public readonly bool Version42;
    public readonly bool Version43;
    public readonly bool Version44;
    public readonly bool Version45;
    
    // Extensions
    
    public Gl(delegate* <byte*, void*> loadFunc)
    {
        fixed(byte* name = glGetStringFunctionName)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        var version = glGetString(GL_VERSION);
        if(version == null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor)) return;
        
        Version10 = Major > 1 || (Major == 1 && Minor >= 0);
        Version11 = Major > 1 || (Major == 1 && Minor >= 1);
        Version12 = Major > 1 || (Major == 1 && Minor >= 2);
        Version13 = Major > 1 || (Major == 1 && Minor >= 3);
        Version14 = Major > 1 || (Major == 1 && Minor >= 4);
        Version15 = Major > 1 || (Major == 1 && Minor >= 5);
        Version20 = Major > 2 || (Major == 2 && Minor >= 0);
        Version21 = Major > 2 || (Major == 2 && Minor >= 1);
        Version30 = Major > 3 || (Major == 3 && Minor >= 0);
        Version31 = Major > 3 || (Major == 3 && Minor >= 1);
        Version32 = Major > 3 || (Major == 3 && Minor >= 2);
        Version33 = Major > 3 || (Major == 3 && Minor >= 3);
        Version40 = Major > 4 || (Major == 4 && Minor >= 0);
        Version41 = Major > 4 || (Major == 4 && Minor >= 1);
        Version42 = Major > 4 || (Major == 4 && Minor >= 2);
        Version43 = Major > 4 || (Major == 4 && Minor >= 3);
        Version44 = Major > 4 || (Major == 4 && Minor >= 4);
        Version45 = Major > 4 || (Major == 4 && Minor >= 5);
        
        if(Version10)
        {
            fixed(byte* name = glCullFaceFunctionName)
                glCullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrontFaceFunctionName)
                glFrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glHintFunctionName)
                glHint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthFunctionName)
                glLineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizeFunctionName)
                glPointSize = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonModeFunctionName)
                glPolygonMode = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorFunctionName)
                glScissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfFunctionName)
                glTexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfvFunctionName)
                glTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameteriFunctionName)
                glTexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterivFunctionName)
                glTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage1DFunctionName)
                glTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DFunctionName)
                glTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawBufferFunctionName)
                glDrawBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearFunctionName)
                glClear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorFunctionName)
                glClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearStencilFunctionName)
                glClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthFunctionName)
                glClearDepth = (delegate* unmanaged</* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskFunctionName)
                glStencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskFunctionName)
                glColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthMaskFunctionName)
                glDepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableFunctionName)
                glDisable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableFunctionName)
                glEnable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFinishFunctionName)
                glFinish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFlushFunctionName)
                glFlush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncFunctionName)
                glBlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLogicOpFunctionName)
                glLogicOp = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncFunctionName)
                glStencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpFunctionName)
                glStencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthFuncFunctionName)
                glDepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStorefFunctionName)
                glPixelStoref = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStoreiFunctionName)
                glPixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadBufferFunctionName)
                glReadBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadPixelsFunctionName)
                glReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleanvFunctionName)
                glGetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDoublevFunctionName)
                glGetDoublev = (delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetErrorFunctionName)
                glGetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetFloatvFunctionName)
                glGetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegervFunctionName)
                glGetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringFunctionName)
                glGetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glGetTexImageFunctionName)
                glGetTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterfvFunctionName)
                glGetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterivFunctionName)
                glGetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterfvFunctionName)
                glGetTexLevelParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterivFunctionName)
                glGetTexLevelParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsEnabledFunctionName)
                glIsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDepthRangeFunctionName)
                glDepthRange = (delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportFunctionName)
                glViewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version11)
        {
            fixed(byte* name = glDrawArraysFunctionName)
                glDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsFunctionName)
                glDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetFunctionName)
                glPolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage1DFunctionName)
                glCopyTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage2DFunctionName)
                glCopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage1DFunctionName)
                glCopyTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage2DFunctionName)
                glCopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage1DFunctionName)
                glTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage2DFunctionName)
                glTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureFunctionName)
                glBindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTexturesFunctionName)
                glDeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTexturesFunctionName)
                glGenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsTextureFunctionName)
                glIsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
        }
        
        if(Version12)
        {
            fixed(byte* name = glDrawRangeElementsFunctionName)
                glDrawRangeElements = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage3DFunctionName)
                glTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage3DFunctionName)
                glTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage3DFunctionName)
                glCopyTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version13)
        {
            fixed(byte* name = glActiveTextureFunctionName)
                glActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoverageFunctionName)
                glSampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage3DFunctionName)
                glCompressedTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage2DFunctionName)
                glCompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage1DFunctionName)
                glCompressedTexImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage3DFunctionName)
                glCompressedTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage2DFunctionName)
                glCompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage1DFunctionName)
                glCompressedTexSubImage1D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTexImageFunctionName)
                glGetCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void*, /* void */ void>)loadFunc(name);
        }
        
        if(Version14)
        {
            fixed(byte* name = glBlendFuncSeparateFunctionName)
                glBlendFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawArraysFunctionName)
                glMultiDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* GLsizei */ int*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsFunctionName)
                glMultiDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfFunctionName)
                glPointParameterf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfvFunctionName)
                glPointParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameteriFunctionName)
                glPointParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterivFunctionName)
                glPointParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendColorFunctionName)
                glBlendColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationFunctionName)
                glBlendEquation = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version15)
        {
            fixed(byte* name = glGenQueriesFunctionName)
                glGenQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteQueriesFunctionName)
                glDeleteQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsQueryFunctionName)
                glIsQuery = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBeginQueryFunctionName)
                glBeginQuery = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndQueryFunctionName)
                glEndQuery = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryivFunctionName)
                glGetQueryiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectivFunctionName)
                glGetQueryObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectuivFunctionName)
                glGetQueryObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferFunctionName)
                glBindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteBuffersFunctionName)
                glDeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenBuffersFunctionName)
                glGenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsBufferFunctionName)
                glIsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBufferDataFunctionName)
                glBufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferSubDataFunctionName)
                glBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferSubDataFunctionName)
                glGetBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapBufferFunctionName)
                glMapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glUnmapBufferFunctionName)
                glUnmapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetBufferParameterivFunctionName)
                glGetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferPointervFunctionName)
                glGetBufferPointerv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
        }
        
        if(Version20)
        {
            fixed(byte* name = glBlendEquationSeparateFunctionName)
                glBlendEquationSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawBuffersFunctionName)
                glDrawBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpSeparateFunctionName)
                glStencilOpSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncSeparateFunctionName)
                glStencilFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskSeparateFunctionName)
                glStencilMaskSeparate = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAttachShaderFunctionName)
                glAttachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindAttribLocationFunctionName)
                glBindAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompileShaderFunctionName)
                glCompileShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateProgramFunctionName)
                glCreateProgram = (delegate* unmanaged</* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glCreateShaderFunctionName)
                glCreateShader = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glDeleteProgramFunctionName)
                glDeleteProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteShaderFunctionName)
                glDeleteShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDetachShaderFunctionName)
                glDetachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableVertexAttribArrayFunctionName)
                glDisableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableVertexAttribArrayFunctionName)
                glEnableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveAttribFunctionName)
                glGetActiveAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformFunctionName)
                glGetActiveUniform = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttachedShadersFunctionName)
                glGetAttachedShaders = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttribLocationFunctionName)
                glGetAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramivFunctionName)
                glGetProgramiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInfoLogFunctionName)
                glGetProgramInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderivFunctionName)
                glGetShaderiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderInfoLogFunctionName)
                glGetShaderInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderSourceFunctionName)
                glGetShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformLocationFunctionName)
                glGetUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetUniformfvFunctionName)
                glGetUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformivFunctionName)
                glGetUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribdvFunctionName)
                glGetVertexAttribdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribfvFunctionName)
                glGetVertexAttribfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribivFunctionName)
                glGetVertexAttribiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribPointervFunctionName)
                glGetVertexAttribPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsProgramFunctionName)
                glIsProgram = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsShaderFunctionName)
                glIsShader = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glLinkProgramFunctionName)
                glLinkProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderSourceFunctionName)
                glShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUseProgramFunctionName)
                glUseProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fFunctionName)
                glUniform1f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fFunctionName)
                glUniform2f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fFunctionName)
                glUniform3f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fFunctionName)
                glUniform4f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1iFunctionName)
                glUniform1i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2iFunctionName)
                glUniform2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3iFunctionName)
                glUniform3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4iFunctionName)
                glUniform4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fvFunctionName)
                glUniform1fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fvFunctionName)
                glUniform2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fvFunctionName)
                glUniform3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fvFunctionName)
                glUniform4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1ivFunctionName)
                glUniform1iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2ivFunctionName)
                glUniform2iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3ivFunctionName)
                glUniform3iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4ivFunctionName)
                glUniform4iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2fvFunctionName)
                glUniformMatrix2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3fvFunctionName)
                glUniformMatrix3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4fvFunctionName)
                glUniformMatrix4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramFunctionName)
                glValidateProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1dFunctionName)
                glVertexAttrib1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1dvFunctionName)
                glVertexAttrib1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fFunctionName)
                glVertexAttrib1f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fvFunctionName)
                glVertexAttrib1fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1sFunctionName)
                glVertexAttrib1s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1svFunctionName)
                glVertexAttrib1sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2dFunctionName)
                glVertexAttrib2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2dvFunctionName)
                glVertexAttrib2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fFunctionName)
                glVertexAttrib2f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fvFunctionName)
                glVertexAttrib2fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2sFunctionName)
                glVertexAttrib2s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2svFunctionName)
                glVertexAttrib2sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3dFunctionName)
                glVertexAttrib3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3dvFunctionName)
                glVertexAttrib3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fFunctionName)
                glVertexAttrib3f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fvFunctionName)
                glVertexAttrib3fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3sFunctionName)
                glVertexAttrib3s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3svFunctionName)
                glVertexAttrib3sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NbvFunctionName)
                glVertexAttrib4Nbv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NivFunctionName)
                glVertexAttrib4Niv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NsvFunctionName)
                glVertexAttrib4Nsv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NubFunctionName)
                glVertexAttrib4Nub = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NubvFunctionName)
                glVertexAttrib4Nubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NuivFunctionName)
                glVertexAttrib4Nuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4NusvFunctionName)
                glVertexAttrib4Nusv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4bvFunctionName)
                glVertexAttrib4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4dFunctionName)
                glVertexAttrib4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4dvFunctionName)
                glVertexAttrib4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fFunctionName)
                glVertexAttrib4f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fvFunctionName)
                glVertexAttrib4fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4ivFunctionName)
                glVertexAttrib4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4sFunctionName)
                glVertexAttrib4s = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4svFunctionName)
                glVertexAttrib4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4ubvFunctionName)
                glVertexAttrib4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4uivFunctionName)
                glVertexAttrib4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4usvFunctionName)
                glVertexAttrib4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribPointerFunctionName)
                glVertexAttribPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
        }
        
        if(Version21)
        {
            fixed(byte* name = glUniformMatrix2x3fvFunctionName)
                glUniformMatrix2x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x2fvFunctionName)
                glUniformMatrix3x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x4fvFunctionName)
                glUniformMatrix2x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x2fvFunctionName)
                glUniformMatrix4x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x4fvFunctionName)
                glUniformMatrix3x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x3fvFunctionName)
                glUniformMatrix4x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
        }
        
        if(Version30)
        {
            fixed(byte* name = glColorMaskiFunctionName)
                glColorMaski = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleani_vFunctionName)
                glGetBooleani_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegeri_vFunctionName)
                glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableiFunctionName)
                glEnablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableiFunctionName)
                glDisablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsEnablediFunctionName)
                glIsEnabledi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBeginTransformFeedbackFunctionName)
                glBeginTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndTransformFeedbackFunctionName)
                glEndTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferRangeFunctionName)
                glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferBaseFunctionName)
                glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackVaryingsFunctionName)
                glTransformFeedbackVaryings = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbackVaryingFunctionName)
                glGetTransformFeedbackVarying = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClampColorFunctionName)
                glClampColor = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginConditionalRenderFunctionName)
                glBeginConditionalRender = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndConditionalRenderFunctionName)
                glEndConditionalRender = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIPointerFunctionName)
                glVertexAttribIPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIivFunctionName)
                glGetVertexAttribIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIuivFunctionName)
                glGetVertexAttribIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1iFunctionName)
                glVertexAttribI1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2iFunctionName)
                glVertexAttribI2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3iFunctionName)
                glVertexAttribI3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4iFunctionName)
                glVertexAttribI4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1uiFunctionName)
                glVertexAttribI1ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2uiFunctionName)
                glVertexAttribI2ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3uiFunctionName)
                glVertexAttribI3ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uiFunctionName)
                glVertexAttribI4ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1ivFunctionName)
                glVertexAttribI1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2ivFunctionName)
                glVertexAttribI2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3ivFunctionName)
                glVertexAttribI3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4ivFunctionName)
                glVertexAttribI4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI1uivFunctionName)
                glVertexAttribI1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI2uivFunctionName)
                glVertexAttribI2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI3uivFunctionName)
                glVertexAttribI3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uivFunctionName)
                glVertexAttribI4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4bvFunctionName)
                glVertexAttribI4bv = (delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4svFunctionName)
                glVertexAttribI4sv = (delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4ubvFunctionName)
                glVertexAttribI4ubv = (delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4usvFunctionName)
                glVertexAttribI4usv = (delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformuivFunctionName)
                glGetUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindFragDataLocationFunctionName)
                glBindFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFragDataLocationFunctionName)
                glGetFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glUniform1uiFunctionName)
                glUniform1ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uiFunctionName)
                glUniform2ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uiFunctionName)
                glUniform3ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uiFunctionName)
                glUniform4ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1uivFunctionName)
                glUniform1uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uivFunctionName)
                glUniform2uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uivFunctionName)
                glUniform3uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uivFunctionName)
                glUniform4uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIivFunctionName)
                glTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIuivFunctionName)
                glTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIivFunctionName)
                glGetTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIuivFunctionName)
                glGetTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferivFunctionName)
                glClearBufferiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferuivFunctionName)
                glClearBufferuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfvFunctionName)
                glClearBufferfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfiFunctionName)
                glClearBufferfi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringiFunctionName)
                glGetStringi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glIsRenderbufferFunctionName)
                glIsRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindRenderbufferFunctionName)
                glBindRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteRenderbuffersFunctionName)
                glDeleteRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenRenderbuffersFunctionName)
                glGenRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageFunctionName)
                glRenderbufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetRenderbufferParameterivFunctionName)
                glGetRenderbufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsFramebufferFunctionName)
                glIsFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindFramebufferFunctionName)
                glBindFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteFramebuffersFunctionName)
                glDeleteFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenFramebuffersFunctionName)
                glGenFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCheckFramebufferStatusFunctionName)
                glCheckFramebufferStatus = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture1DFunctionName)
                glFramebufferTexture1D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture2DFunctionName)
                glFramebufferTexture2D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture3DFunctionName)
                glFramebufferTexture3D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferRenderbufferFunctionName)
                glFramebufferRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferAttachmentParameterivFunctionName)
                glGetFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenerateMipmapFunctionName)
                glGenerateMipmap = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlitFramebufferFunctionName)
                glBlitFramebuffer = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageMultisampleFunctionName)
                glRenderbufferStorageMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureLayerFunctionName)
                glFramebufferTextureLayer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapBufferRangeFunctionName)
                glMapBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glFlushMappedBufferRangeFunctionName)
                glFlushMappedBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexArrayFunctionName)
                glBindVertexArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteVertexArraysFunctionName)
                glDeleteVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenVertexArraysFunctionName)
                glGenVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsVertexArrayFunctionName)
                glIsVertexArray = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
        }
        
        if(Version31)
        {
            fixed(byte* name = glDrawArraysInstancedFunctionName)
                glDrawArraysInstanced = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedFunctionName)
                glDrawElementsInstanced = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferFunctionName)
                glTexBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPrimitiveRestartIndexFunctionName)
                glPrimitiveRestartIndex = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyBufferSubDataFunctionName)
                glCopyBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformIndicesFunctionName)
                glGetUniformIndices = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformsivFunctionName)
                glGetActiveUniformsiv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformNameFunctionName)
                glGetActiveUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformBlockIndexFunctionName)
                glGetUniformBlockIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockivFunctionName)
                glGetActiveUniformBlockiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockNameFunctionName)
                glGetActiveUniformBlockName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformBlockBindingFunctionName)
                glUniformBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferRangeFunctionName)
                glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferBaseFunctionName)
                glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegeri_vFunctionName)
                glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version32)
        {
            fixed(byte* name = glDrawElementsBaseVertexFunctionName)
                glDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawRangeElementsBaseVertexFunctionName)
                glDrawRangeElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseVertexFunctionName)
                glDrawElementsInstancedBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsBaseVertexFunctionName)
                glMultiDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProvokingVertexFunctionName)
                glProvokingVertex = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFenceSyncFunctionName)
                glFenceSync = (delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*>)loadFunc(name);
            fixed(byte* name = glIsSyncFunctionName)
                glIsSync = (delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDeleteSyncFunctionName)
                glDeleteSync = (delegate* unmanaged</* GLsync */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientWaitSyncFunctionName)
                glClientWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glWaitSyncFunctionName)
                glWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64vFunctionName)
                glGetInteger64v = (delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSyncivFunctionName)
                glGetSynciv = (delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64i_vFunctionName)
                glGetInteger64i_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameteri64vFunctionName)
                glGetBufferParameteri64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureFunctionName)
                glFramebufferTexture = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DMultisampleFunctionName)
                glTexImage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage3DMultisampleFunctionName)
                glTexImage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMultisamplefvFunctionName)
                glGetMultisamplefv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleMaskiFunctionName)
                glSampleMaski = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version33)
        {
            fixed(byte* name = glBindFragDataLocationIndexedFunctionName)
                glBindFragDataLocationIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFragDataIndexFunctionName)
                glGetFragDataIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGenSamplersFunctionName)
                glGenSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteSamplersFunctionName)
                glDeleteSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsSamplerFunctionName)
                glIsSampler = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindSamplerFunctionName)
                glBindSampler = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameteriFunctionName)
                glSamplerParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterivFunctionName)
                glSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfFunctionName)
                glSamplerParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfvFunctionName)
                glSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIivFunctionName)
                glSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIuivFunctionName)
                glSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterivFunctionName)
                glGetSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIivFunctionName)
                glGetSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterfvFunctionName)
                glGetSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIuivFunctionName)
                glGetSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glQueryCounterFunctionName)
                glQueryCounter = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjecti64vFunctionName)
                glGetQueryObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectui64vFunctionName)
                glGetQueryObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint64 */ ulong*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribDivisorFunctionName)
                glVertexAttribDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP1uiFunctionName)
                glVertexAttribP1ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP1uivFunctionName)
                glVertexAttribP1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP2uiFunctionName)
                glVertexAttribP2ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP2uivFunctionName)
                glVertexAttribP2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP3uiFunctionName)
                glVertexAttribP3ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP3uivFunctionName)
                glVertexAttribP3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP4uiFunctionName)
                glVertexAttribP4ui = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribP4uivFunctionName)
                glVertexAttribP4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
        }
        
        if(Version40)
        {
            fixed(byte* name = glMinSampleShadingFunctionName)
                glMinSampleShading = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationiFunctionName)
                glBlendEquationi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationSeparateiFunctionName)
                glBlendEquationSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFunciFunctionName)
                glBlendFunci = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncSeparateiFunctionName)
                glBlendFuncSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysIndirectFunctionName)
                glDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsIndirectFunctionName)
                glDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1dFunctionName)
                glUniform1d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2dFunctionName)
                glUniform2d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3dFunctionName)
                glUniform3d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4dFunctionName)
                glUniform4d = (delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1dvFunctionName)
                glUniform1dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2dvFunctionName)
                glUniform2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3dvFunctionName)
                glUniform3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4dvFunctionName)
                glUniform4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2dvFunctionName)
                glUniformMatrix2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3dvFunctionName)
                glUniformMatrix3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4dvFunctionName)
                glUniformMatrix4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x3dvFunctionName)
                glUniformMatrix2x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x4dvFunctionName)
                glUniformMatrix2x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x2dvFunctionName)
                glUniformMatrix3x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x4dvFunctionName)
                glUniformMatrix3x4dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x2dvFunctionName)
                glUniformMatrix4x2dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x3dvFunctionName)
                glUniformMatrix4x3dv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformdvFunctionName)
                glGetUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSubroutineUniformLocationFunctionName)
                glGetSubroutineUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetSubroutineIndexFunctionName)
                glGetSubroutineIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineUniformivFunctionName)
                glGetActiveSubroutineUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineUniformNameFunctionName)
                glGetActiveSubroutineUniformName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveSubroutineNameFunctionName)
                glGetActiveSubroutineName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformSubroutinesuivFunctionName)
                glUniformSubroutinesuiv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformSubroutineuivFunctionName)
                glGetUniformSubroutineuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramStageivFunctionName)
                glGetProgramStageiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPatchParameteriFunctionName)
                glPatchParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPatchParameterfvFunctionName)
                glPatchParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTransformFeedbackFunctionName)
                glBindTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTransformFeedbacksFunctionName)
                glDeleteTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTransformFeedbacksFunctionName)
                glGenTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsTransformFeedbackFunctionName)
                glIsTransformFeedback = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glPauseTransformFeedbackFunctionName)
                glPauseTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glResumeTransformFeedbackFunctionName)
                glResumeTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackFunctionName)
                glDrawTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackStreamFunctionName)
                glDrawTransformFeedbackStream = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginQueryIndexedFunctionName)
                glBeginQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndQueryIndexedFunctionName)
                glEndQueryIndexed = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryIndexedivFunctionName)
                glGetQueryIndexediv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version41)
        {
            fixed(byte* name = glReleaseShaderCompilerFunctionName)
                glReleaseShaderCompiler = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderBinaryFunctionName)
                glShaderBinary = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderPrecisionFormatFunctionName)
                glGetShaderPrecisionFormat = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangefFunctionName)
                glDepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthfFunctionName)
                glClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramBinaryFunctionName)
                glGetProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramBinaryFunctionName)
                glProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramParameteriFunctionName)
                glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUseProgramStagesFunctionName)
                glUseProgramStages = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glActiveShaderProgramFunctionName)
                glActiveShaderProgram = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateShaderProgramvFunctionName)
                glCreateShaderProgramv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glBindProgramPipelineFunctionName)
                glBindProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteProgramPipelinesFunctionName)
                glDeleteProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenProgramPipelinesFunctionName)
                glGenProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsProgramPipelineFunctionName)
                glIsProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineivFunctionName)
                glGetProgramPipelineiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramParameteriFunctionName)
                glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1iFunctionName)
                glProgramUniform1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1ivFunctionName)
                glProgramUniform1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fFunctionName)
                glProgramUniform1f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fvFunctionName)
                glProgramUniform1fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1dFunctionName)
                glProgramUniform1d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1dvFunctionName)
                glProgramUniform1dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uiFunctionName)
                glProgramUniform1ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uivFunctionName)
                glProgramUniform1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2iFunctionName)
                glProgramUniform2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2ivFunctionName)
                glProgramUniform2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fFunctionName)
                glProgramUniform2f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fvFunctionName)
                glProgramUniform2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2dFunctionName)
                glProgramUniform2d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2dvFunctionName)
                glProgramUniform2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uiFunctionName)
                glProgramUniform2ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uivFunctionName)
                glProgramUniform2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3iFunctionName)
                glProgramUniform3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3ivFunctionName)
                glProgramUniform3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fFunctionName)
                glProgramUniform3f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fvFunctionName)
                glProgramUniform3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3dFunctionName)
                glProgramUniform3d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3dvFunctionName)
                glProgramUniform3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uiFunctionName)
                glProgramUniform3ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uivFunctionName)
                glProgramUniform3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4iFunctionName)
                glProgramUniform4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4ivFunctionName)
                glProgramUniform4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fFunctionName)
                glProgramUniform4f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fvFunctionName)
                glProgramUniform4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4dFunctionName)
                glProgramUniform4d = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4dvFunctionName)
                glProgramUniform4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uiFunctionName)
                glProgramUniform4ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uivFunctionName)
                glProgramUniform4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2fvFunctionName)
                glProgramUniformMatrix2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3fvFunctionName)
                glProgramUniformMatrix3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4fvFunctionName)
                glProgramUniformMatrix4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2dvFunctionName)
                glProgramUniformMatrix2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3dvFunctionName)
                glProgramUniformMatrix3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4dvFunctionName)
                glProgramUniformMatrix4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x3fvFunctionName)
                glProgramUniformMatrix2x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x2fvFunctionName)
                glProgramUniformMatrix3x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x4fvFunctionName)
                glProgramUniformMatrix2x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x2fvFunctionName)
                glProgramUniformMatrix4x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x4fvFunctionName)
                glProgramUniformMatrix3x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x3fvFunctionName)
                glProgramUniformMatrix4x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x3dvFunctionName)
                glProgramUniformMatrix2x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x2dvFunctionName)
                glProgramUniformMatrix3x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x4dvFunctionName)
                glProgramUniformMatrix2x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x2dvFunctionName)
                glProgramUniformMatrix4x2dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x4dvFunctionName)
                glProgramUniformMatrix3x4dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x3dvFunctionName)
                glProgramUniformMatrix4x3dv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramPipelineFunctionName)
                glValidateProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineInfoLogFunctionName)
                glGetProgramPipelineInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL1dFunctionName)
                glVertexAttribL1d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL2dFunctionName)
                glVertexAttribL2d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL3dFunctionName)
                glVertexAttribL3d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL4dFunctionName)
                glVertexAttribL4d = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL1dvFunctionName)
                glVertexAttribL1dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL2dvFunctionName)
                glVertexAttribL2dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL3dvFunctionName)
                glVertexAttribL3dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribL4dvFunctionName)
                glVertexAttribL4dv = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribLPointerFunctionName)
                glVertexAttribLPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribLdvFunctionName)
                glGetVertexAttribLdv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportArrayvFunctionName)
                glViewportArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportIndexedfFunctionName)
                glViewportIndexedf = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportIndexedfvFunctionName)
                glViewportIndexedfv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorArrayvFunctionName)
                glScissorArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorIndexedFunctionName)
                glScissorIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorIndexedvFunctionName)
                glScissorIndexedv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangeArrayvFunctionName)
                glDepthRangeArrayv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangeIndexedFunctionName)
                glDepthRangeIndexed = (delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFloati_vFunctionName)
                glGetFloati_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDoublei_vFunctionName)
                glGetDoublei_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
        }
        
        if(Version42)
        {
            fixed(byte* name = glDrawArraysInstancedBaseInstanceFunctionName)
                glDrawArraysInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseInstanceFunctionName)
                glDrawElementsInstancedBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseVertexBaseInstanceFunctionName)
                glDrawElementsInstancedBaseVertexBaseInstance = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInternalformativFunctionName)
                glGetInternalformativ = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveAtomicCounterBufferivFunctionName)
                glGetActiveAtomicCounterBufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindImageTextureFunctionName)
                glBindImageTexture = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierFunctionName)
                glMemoryBarrier = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage1DFunctionName)
                glTexStorage1D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DFunctionName)
                glTexStorage2D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DFunctionName)
                glTexStorage3D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackInstancedFunctionName)
                glDrawTransformFeedbackInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawTransformFeedbackStreamInstancedFunctionName)
                glDrawTransformFeedbackStreamInstanced = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(Version43)
        {
            fixed(byte* name = glClearBufferDataFunctionName)
                glClearBufferData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferSubDataFunctionName)
                glClearBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDispatchComputeFunctionName)
                glDispatchCompute = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDispatchComputeIndirectFunctionName)
                glDispatchComputeIndirect = (delegate* unmanaged</* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyImageSubDataFunctionName)
                glCopyImageSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferParameteriFunctionName)
                glFramebufferParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferParameterivFunctionName)
                glGetFramebufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInternalformati64vFunctionName)
                glGetInternalformati64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateTexSubImageFunctionName)
                glInvalidateTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateTexImageFunctionName)
                glInvalidateTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateBufferSubDataFunctionName)
                glInvalidateBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateBufferDataFunctionName)
                glInvalidateBufferData = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateFramebufferFunctionName)
                glInvalidateFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateSubFramebufferFunctionName)
                glInvalidateSubFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawArraysIndirectFunctionName)
                glMultiDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiDrawElementsIndirectFunctionName)
                glMultiDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInterfaceivFunctionName)
                glGetProgramInterfaceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceIndexFunctionName)
                glGetProgramResourceIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceNameFunctionName)
                glGetProgramResourceName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceivFunctionName)
                glGetProgramResourceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceLocationFunctionName)
                glGetProgramResourceLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceLocationIndexFunctionName)
                glGetProgramResourceLocationIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glShaderStorageBlockBindingFunctionName)
                glShaderStorageBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferRangeFunctionName)
                glTexBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DMultisampleFunctionName)
                glTexStorage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DMultisampleFunctionName)
                glTexStorage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureViewFunctionName)
                glTextureView = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexBufferFunctionName)
                glBindVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribFormatFunctionName)
                glVertexAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIFormatFunctionName)
                glVertexAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribLFormatFunctionName)
                glVertexAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribBindingFunctionName)
                glVertexAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexBindingDivisorFunctionName)
                glVertexBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageControlFunctionName)
                glDebugMessageControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageInsertFunctionName)
                glDebugMessageInsert = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageCallbackFunctionName)
                glDebugMessageCallback = (delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDebugMessageLogFunctionName)
                glGetDebugMessageLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glPushDebugGroupFunctionName)
                glPushDebugGroup = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopDebugGroupFunctionName)
                glPopDebugGroup = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectLabelFunctionName)
                glObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectLabelFunctionName)
                glGetObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectPtrLabelFunctionName)
                glObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectPtrLabelFunctionName)
                glGetObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
        }
        
        if(Version44)
        {
            fixed(byte* name = glBufferStorageFunctionName)
                glBufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearTexImageFunctionName)
                glClearTexImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearTexSubImageFunctionName)
                glClearTexSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBuffersBaseFunctionName)
                glBindBuffersBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBuffersRangeFunctionName)
                glBindBuffersRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizeiptr */ nint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTexturesFunctionName)
                glBindTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindSamplersFunctionName)
                glBindSamplers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindImageTexturesFunctionName)
                glBindImageTextures = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexBuffersFunctionName)
                glBindVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(Version45)
        {
            fixed(byte* name = glClipControlFunctionName)
                glClipControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateTransformFeedbacksFunctionName)
                glCreateTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackBufferBaseFunctionName)
                glTransformFeedbackBufferBase = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackBufferRangeFunctionName)
                glTransformFeedbackBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbackivFunctionName)
                glGetTransformFeedbackiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbacki_vFunctionName)
                glGetTransformFeedbacki_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbacki64_vFunctionName)
                glGetTransformFeedbacki64_v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateBuffersFunctionName)
                glCreateBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferStorageFunctionName)
                glNamedBufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferDataFunctionName)
                glNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedBufferSubDataFunctionName)
                glNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyNamedBufferSubDataFunctionName)
                glCopyNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedBufferDataFunctionName)
                glClearNamedBufferData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedBufferSubDataFunctionName)
                glClearNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapNamedBufferFunctionName)
                glMapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glMapNamedBufferRangeFunctionName)
                glMapNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glUnmapNamedBufferFunctionName)
                glUnmapNamedBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glFlushMappedNamedBufferRangeFunctionName)
                glFlushMappedNamedBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferParameterivFunctionName)
                glGetNamedBufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferParameteri64vFunctionName)
                glGetNamedBufferParameteri64v = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferPointervFunctionName)
                glGetNamedBufferPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedBufferSubDataFunctionName)
                glGetNamedBufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateFramebuffersFunctionName)
                glCreateFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferRenderbufferFunctionName)
                glNamedFramebufferRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferParameteriFunctionName)
                glNamedFramebufferParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferTextureFunctionName)
                glNamedFramebufferTexture = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferTextureLayerFunctionName)
                glNamedFramebufferTextureLayer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferDrawBufferFunctionName)
                glNamedFramebufferDrawBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferDrawBuffersFunctionName)
                glNamedFramebufferDrawBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedFramebufferReadBufferFunctionName)
                glNamedFramebufferReadBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateNamedFramebufferDataFunctionName)
                glInvalidateNamedFramebufferData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateNamedFramebufferSubDataFunctionName)
                glInvalidateNamedFramebufferSubData = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferivFunctionName)
                glClearNamedFramebufferiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferuivFunctionName)
                glClearNamedFramebufferuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferfvFunctionName)
                glClearNamedFramebufferfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearNamedFramebufferfiFunctionName)
                glClearNamedFramebufferfi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlitNamedFramebufferFunctionName)
                glBlitNamedFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCheckNamedFramebufferStatusFunctionName)
                glCheckNamedFramebufferStatus = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetNamedFramebufferParameterivFunctionName)
                glGetNamedFramebufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedFramebufferAttachmentParameterivFunctionName)
                glGetNamedFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateRenderbuffersFunctionName)
                glCreateRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedRenderbufferStorageFunctionName)
                glNamedRenderbufferStorage = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNamedRenderbufferStorageMultisampleFunctionName)
                glNamedRenderbufferStorageMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetNamedRenderbufferParameterivFunctionName)
                glGetNamedRenderbufferParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateTexturesFunctionName)
                glCreateTextures = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBufferFunctionName)
                glTextureBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBufferRangeFunctionName)
                glTextureBufferRange = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage1DFunctionName)
                glTextureStorage1D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage2DFunctionName)
                glTextureStorage2D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage3DFunctionName)
                glTextureStorage3D = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage2DMultisampleFunctionName)
                glTextureStorage2DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureStorage3DMultisampleFunctionName)
                glTextureStorage3DMultisample = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage1DFunctionName)
                glTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage2DFunctionName)
                glTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureSubImage3DFunctionName)
                glTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage1DFunctionName)
                glCompressedTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage2DFunctionName)
                glCompressedTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTextureSubImage3DFunctionName)
                glCompressedTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage1DFunctionName)
                glCopyTextureSubImage1D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage2DFunctionName)
                glCopyTextureSubImage2D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTextureSubImage3DFunctionName)
                glCopyTextureSubImage3D = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterfFunctionName)
                glTextureParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterfvFunctionName)
                glTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameteriFunctionName)
                glTextureParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterIivFunctionName)
                glTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterIuivFunctionName)
                glTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureParameterivFunctionName)
                glTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenerateTextureMipmapFunctionName)
                glGenerateTextureMipmap = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureUnitFunctionName)
                glBindTextureUnit = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureImageFunctionName)
                glGetTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTextureImageFunctionName)
                glGetCompressedTextureImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureLevelParameterfvFunctionName)
                glGetTextureLevelParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureLevelParameterivFunctionName)
                glGetTextureLevelParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterfvFunctionName)
                glGetTextureParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterIivFunctionName)
                glGetTextureParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterIuivFunctionName)
                glGetTextureParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureParameterivFunctionName)
                glGetTextureParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateVertexArraysFunctionName)
                glCreateVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableVertexArrayAttribFunctionName)
                glDisableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableVertexArrayAttribFunctionName)
                glEnableVertexArrayAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayElementBufferFunctionName)
                glVertexArrayElementBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayVertexBufferFunctionName)
                glVertexArrayVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayVertexBuffersFunctionName)
                glVertexArrayVertexBuffers = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribBindingFunctionName)
                glVertexArrayAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribFormatFunctionName)
                glVertexArrayAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribIFormatFunctionName)
                glVertexArrayAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayAttribLFormatFunctionName)
                glVertexArrayAttribLFormat = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexArrayBindingDivisorFunctionName)
                glVertexArrayBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayivFunctionName)
                glGetVertexArrayiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayIndexedivFunctionName)
                glGetVertexArrayIndexediv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexArrayIndexed64ivFunctionName)
                glGetVertexArrayIndexed64iv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateSamplersFunctionName)
                glCreateSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateProgramPipelinesFunctionName)
                glCreateProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateQueriesFunctionName)
                glCreateQueries = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjecti64vFunctionName)
                glGetQueryBufferObjecti64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectivFunctionName)
                glGetQueryBufferObjectiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectui64vFunctionName)
                glGetQueryBufferObjectui64v = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryBufferObjectuivFunctionName)
                glGetQueryBufferObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierByRegionFunctionName)
                glMemoryBarrierByRegion = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTextureSubImageFunctionName)
                glGetTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetCompressedTextureSubImageFunctionName)
                glGetCompressedTextureSubImage = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetGraphicsResetStatusFunctionName)
                glGetGraphicsResetStatus = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetnCompressedTexImageFunctionName)
                glGetnCompressedTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnTexImageFunctionName)
                glGetnTexImage = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformdvFunctionName)
                glGetnUniformdv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformfvFunctionName)
                glGetnUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformivFunctionName)
                glGetnUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformuivFunctionName)
                glGetnUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadnPixelsFunctionName)
                glReadnPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTextureBarrierFunctionName)
                glTextureBarrier = (delegate* unmanaged</* void */ void>)loadFunc(name);
        }
        
    }
}
