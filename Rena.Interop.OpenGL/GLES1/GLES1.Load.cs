using System.Buffers;
using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGL;

public unsafe partial class GLES1
{
    public delegate void* LoadFunction(byte* name);
    internal static ReadOnlySpan<byte> glGetStringiFunctionName => "glGetStringi"u8;
    internal const int GL_NUM_EXTENSIONS = 0x821D;
    public readonly ushort Major;
    public readonly ushort Minor;
    
    public readonly bool Version10;
    public GLES1(LoadFunction loadFunc)
    {
        delegate* unmanaged<int, byte*> glGetString;
        fixed(byte* name = glGetStringFunctionName)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        var version = glGetString(GL_VERSION);
        if(version is null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor, out IsEmbedded)) return;
        
        Version10 = Major > 1 || (Major == 1 && Minor >= 0);
        
        if(IsEmbedded & Version10)
        {
            fixed(byte* name = glAlphaFuncFunctionName)
                this.glAlphaFunc = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorFunctionName)
                this.glClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthfFunctionName)
                this.glClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClipPlanefFunctionName)
                this.glClipPlanef = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4fFunctionName)
                this.glColor4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangefFunctionName)
                this.glDepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfFunctionName)
                this.glFogf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfvFunctionName)
                this.glFogfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrustumfFunctionName)
                this.glFrustumf = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetClipPlanefFunctionName)
                this.glGetClipPlanef = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFloatvFunctionName)
                this.glGetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightfvFunctionName)
                this.glGetLightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialfvFunctionName)
                this.glGetMaterialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvfvFunctionName)
                this.glGetTexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterfvFunctionName)
                this.glGetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfFunctionName)
                this.glLightModelf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfvFunctionName)
                this.glLightModelfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfFunctionName)
                this.glLightf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfvFunctionName)
                this.glLightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthFunctionName)
                this.glLineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixfFunctionName)
                this.glLoadMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfFunctionName)
                this.glMaterialf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfvFunctionName)
                this.glMaterialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixfFunctionName)
                this.glMultMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4fFunctionName)
                this.glMultiTexCoord4f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3fFunctionName)
                this.glNormal3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glOrthofFunctionName)
                this.glOrthof = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfFunctionName)
                this.glPointParameterf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfvFunctionName)
                this.glPointParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizeFunctionName)
                this.glPointSize = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetFunctionName)
                this.glPolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatefFunctionName)
                this.glRotatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScalefFunctionName)
                this.glScalef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfFunctionName)
                this.glTexEnvf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfvFunctionName)
                this.glTexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfFunctionName)
                this.glTexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfvFunctionName)
                this.glTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatefFunctionName)
                this.glTranslatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glActiveTextureFunctionName)
                this.glActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAlphaFuncxFunctionName)
                this.glAlphaFuncx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferFunctionName)
                this.glBindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureFunctionName)
                this.glBindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncFunctionName)
                this.glBlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferDataFunctionName)
                this.glBufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferSubDataFunctionName)
                this.glBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearFunctionName)
                this.glClear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorxFunctionName)
                this.glClearColorx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthxFunctionName)
                this.glClearDepthx = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearStencilFunctionName)
                this.glClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientActiveTextureFunctionName)
                this.glClientActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClipPlanexFunctionName)
                this.glClipPlanex = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4ubFunctionName)
                this.glColor4ub = (delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4xFunctionName)
                this.glColor4x = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskFunctionName)
                this.glColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorPointerFunctionName)
                this.glColorPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage2DFunctionName)
                this.glCompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage2DFunctionName)
                this.glCompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage2DFunctionName)
                this.glCopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage2DFunctionName)
                this.glCopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCullFaceFunctionName)
                this.glCullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteBuffersFunctionName)
                this.glDeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTexturesFunctionName)
                this.glDeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthFuncFunctionName)
                this.glDepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthMaskFunctionName)
                this.glDepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangexFunctionName)
                this.glDepthRangex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableFunctionName)
                this.glDisable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableClientStateFunctionName)
                this.glDisableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysFunctionName)
                this.glDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsFunctionName)
                this.glDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableFunctionName)
                this.glEnable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableClientStateFunctionName)
                this.glEnableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFinishFunctionName)
                this.glFinish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFlushFunctionName)
                this.glFlush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFogxFunctionName)
                this.glFogx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogxvFunctionName)
                this.glFogxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrontFaceFunctionName)
                this.glFrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrustumxFunctionName)
                this.glFrustumx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleanvFunctionName)
                this.glGetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameterivFunctionName)
                this.glGetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetClipPlanexFunctionName)
                this.glGetClipPlanex = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenBuffersFunctionName)
                this.glGenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTexturesFunctionName)
                this.glGenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetErrorFunctionName)
                this.glGetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetFixedvFunctionName)
                this.glGetFixedv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegervFunctionName)
                this.glGetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightxvFunctionName)
                this.glGetLightxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialxvFunctionName)
                this.glGetMaterialxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPointervFunctionName)
                this.glGetPointerv = (delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringFunctionName)
                this.glGetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glGetTexEnvivFunctionName)
                this.glGetTexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvxvFunctionName)
                this.glGetTexEnvxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterivFunctionName)
                this.glGetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterxvFunctionName)
                this.glGetTexParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glHintFunctionName)
                this.glHint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsBufferFunctionName)
                this.glIsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsEnabledFunctionName)
                this.glIsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsTextureFunctionName)
                this.glIsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glLightModelxFunctionName)
                this.glLightModelx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelxvFunctionName)
                this.glLightModelxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightxFunctionName)
                this.glLightx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightxvFunctionName)
                this.glLightxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthxFunctionName)
                this.glLineWidthx = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadIdentityFunctionName)
                this.glLoadIdentity = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixxFunctionName)
                this.glLoadMatrixx = (delegate* unmanaged</* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLogicOpFunctionName)
                this.glLogicOp = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialxFunctionName)
                this.glMaterialx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialxvFunctionName)
                this.glMaterialxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMatrixModeFunctionName)
                this.glMatrixMode = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixxFunctionName)
                this.glMultMatrixx = (delegate* unmanaged</* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4xFunctionName)
                this.glMultiTexCoord4x = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3xFunctionName)
                this.glNormal3x = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormalPointerFunctionName)
                this.glNormalPointer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glOrthoxFunctionName)
                this.glOrthox = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStoreiFunctionName)
                this.glPixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterxFunctionName)
                this.glPointParameterx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterxvFunctionName)
                this.glPointParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizexFunctionName)
                this.glPointSizex = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetxFunctionName)
                this.glPolygonOffsetx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopMatrixFunctionName)
                this.glPopMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushMatrixFunctionName)
                this.glPushMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glReadPixelsFunctionName)
                this.glReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatexFunctionName)
                this.glRotatex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoverageFunctionName)
                this.glSampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoveragexFunctionName)
                this.glSampleCoveragex = (delegate* unmanaged</* GLclampx */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScalexFunctionName)
                this.glScalex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorFunctionName)
                this.glScissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShadeModelFunctionName)
                this.glShadeModel = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncFunctionName)
                this.glStencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskFunctionName)
                this.glStencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpFunctionName)
                this.glStencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordPointerFunctionName)
                this.glTexCoordPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnviFunctionName)
                this.glTexEnvi = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvxFunctionName)
                this.glTexEnvx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvivFunctionName)
                this.glTexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvxvFunctionName)
                this.glTexEnvxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DFunctionName)
                this.glTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameteriFunctionName)
                this.glTexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterxFunctionName)
                this.glTexParameterx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterivFunctionName)
                this.glTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterxvFunctionName)
                this.glTexParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage2DFunctionName)
                this.glTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatexFunctionName)
                this.glTranslatex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexPointerFunctionName)
                this.glVertexPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportFunctionName)
                this.glViewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
    }
}
