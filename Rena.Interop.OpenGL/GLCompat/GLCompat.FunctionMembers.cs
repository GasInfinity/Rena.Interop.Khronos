namespace Rena.Interop.OpenGL;

public unsafe partial class GLCompat
{
    internal static ReadOnlySpan<byte> glCullFaceFunctionName => "glCullFace"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> CullFace;
    internal static ReadOnlySpan<byte> glFrontFaceFunctionName => "glFrontFace"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> FrontFace;
    internal static ReadOnlySpan<byte> glHintFunctionName => "glHint"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> Hint;
    internal static ReadOnlySpan<byte> glLineWidthFunctionName => "glLineWidth"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> LineWidth;
    internal static ReadOnlySpan<byte> glPointSizeFunctionName => "glPointSize"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> PointSize;
    internal static ReadOnlySpan<byte> glPolygonModeFunctionName => "glPolygonMode"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> PolygonMode;
    internal static ReadOnlySpan<byte> glScissorFunctionName => "glScissor"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> Scissor;
    internal static ReadOnlySpan<byte> glTexParameterfFunctionName => "glTexParameterf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TexParameterf;
    internal static ReadOnlySpan<byte> glTexParameterfvFunctionName => "glTexParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TexParameterfv;
    internal static ReadOnlySpan<byte> glTexParameteriFunctionName => "glTexParameteri"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> TexParameteri;
    internal static ReadOnlySpan<byte> glTexParameterivFunctionName => "glTexParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexParameteriv;
    internal static ReadOnlySpan<byte> glTexImage1DFunctionName => "glTexImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexImage1D;
    internal static ReadOnlySpan<byte> glTexImage2DFunctionName => "glTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexImage2D;
    internal static ReadOnlySpan<byte> glDrawBufferFunctionName => "glDrawBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> DrawBuffer;
    internal static ReadOnlySpan<byte> glClearFunctionName => "glClear"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> Clear;
    internal static ReadOnlySpan<byte> glClearColorFunctionName => "glClearColor"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ClearColor;
    internal static ReadOnlySpan<byte> glClearStencilFunctionName => "glClearStencil"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> ClearStencil;
    internal static ReadOnlySpan<byte> glClearDepthFunctionName => "glClearDepth"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> ClearDepth;
    internal static ReadOnlySpan<byte> glStencilMaskFunctionName => "glStencilMask"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> StencilMask;
    internal static ReadOnlySpan<byte> glColorMaskFunctionName => "glColorMask"u8;
    public readonly delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> ColorMask;
    internal static ReadOnlySpan<byte> glDepthMaskFunctionName => "glDepthMask"u8;
    public readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> DepthMask;
    internal static ReadOnlySpan<byte> glDisableFunctionName => "glDisable"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> Disable;
    internal static ReadOnlySpan<byte> glEnableFunctionName => "glEnable"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> Enable;
    internal static ReadOnlySpan<byte> glFinishFunctionName => "glFinish"u8;
    public readonly delegate* unmanaged</* void */ void> Finish;
    internal static ReadOnlySpan<byte> glFlushFunctionName => "glFlush"u8;
    public readonly delegate* unmanaged</* void */ void> Flush;
    internal static ReadOnlySpan<byte> glBlendFuncFunctionName => "glBlendFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> BlendFunc;
    internal static ReadOnlySpan<byte> glLogicOpFunctionName => "glLogicOp"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> LogicOp;
    internal static ReadOnlySpan<byte> glStencilFuncFunctionName => "glStencilFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> StencilFunc;
    internal static ReadOnlySpan<byte> glStencilOpFunctionName => "glStencilOp"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> StencilOp;
    internal static ReadOnlySpan<byte> glDepthFuncFunctionName => "glDepthFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> DepthFunc;
    internal static ReadOnlySpan<byte> glPixelStorefFunctionName => "glPixelStoref"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> PixelStoref;
    internal static ReadOnlySpan<byte> glPixelStoreiFunctionName => "glPixelStorei"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> PixelStorei;
    internal static ReadOnlySpan<byte> glReadBufferFunctionName => "glReadBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ReadBuffer;
    internal static ReadOnlySpan<byte> glReadPixelsFunctionName => "glReadPixels"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ReadPixels;
    internal static ReadOnlySpan<byte> glGetBooleanvFunctionName => "glGetBooleanv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void> GetBooleanv;
    internal static ReadOnlySpan<byte> glGetDoublevFunctionName => "glGetDoublev"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetDoublev;
    internal static ReadOnlySpan<byte> glGetErrorFunctionName => "glGetError"u8;
    public readonly delegate* unmanaged</* GLenum */ int> GetError;
    internal static ReadOnlySpan<byte> glGetFloatvFunctionName => "glGetFloatv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetFloatv;
    internal static ReadOnlySpan<byte> glGetIntegervFunctionName => "glGetIntegerv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> GetIntegerv;
    internal static ReadOnlySpan<byte> glGetStringFunctionName => "glGetString"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*> GetString;
    internal static ReadOnlySpan<byte> glGetTexImageFunctionName => "glGetTexImage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> GetTexImage;
    internal static ReadOnlySpan<byte> glGetTexParameterfvFunctionName => "glGetTexParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexParameterfv;
    internal static ReadOnlySpan<byte> glGetTexParameterivFunctionName => "glGetTexParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexParameteriv;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterfvFunctionName => "glGetTexLevelParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexLevelParameterfv;
    internal static ReadOnlySpan<byte> glGetTexLevelParameterivFunctionName => "glGetTexLevelParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexLevelParameteriv;
    internal static ReadOnlySpan<byte> glIsEnabledFunctionName => "glIsEnabled"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> IsEnabled;
    internal static ReadOnlySpan<byte> glDepthRangeFunctionName => "glDepthRange"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> DepthRange;
    internal static ReadOnlySpan<byte> glViewportFunctionName => "glViewport"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> Viewport;
    internal static ReadOnlySpan<byte> glNewListFunctionName => "glNewList"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> NewList;
    internal static ReadOnlySpan<byte> glEndListFunctionName => "glEndList"u8;
    public readonly delegate* unmanaged</* void */ void> EndList;
    internal static ReadOnlySpan<byte> glCallListFunctionName => "glCallList"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> CallList;
    internal static ReadOnlySpan<byte> glCallListsFunctionName => "glCallLists"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> CallLists;
    internal static ReadOnlySpan<byte> glDeleteListsFunctionName => "glDeleteLists"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* void */ void> DeleteLists;
    internal static ReadOnlySpan<byte> glGenListsFunctionName => "glGenLists"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint> GenLists;
    internal static ReadOnlySpan<byte> glListBaseFunctionName => "glListBase"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> ListBase;
    internal static ReadOnlySpan<byte> glBeginFunctionName => "glBegin"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> Begin;
    internal static ReadOnlySpan<byte> glBitmapFunctionName => "glBitmap"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLubyte */ byte*, /* void */ void> Bitmap;
    internal static ReadOnlySpan<byte> glColor3bFunctionName => "glColor3b"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> Color3b;
    internal static ReadOnlySpan<byte> glColor3bvFunctionName => "glColor3bv"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> Color3bv;
    internal static ReadOnlySpan<byte> glColor3dFunctionName => "glColor3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Color3d;
    internal static ReadOnlySpan<byte> glColor3dvFunctionName => "glColor3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Color3dv;
    internal static ReadOnlySpan<byte> glColor3fFunctionName => "glColor3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Color3f;
    internal static ReadOnlySpan<byte> glColor3fvFunctionName => "glColor3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Color3fv;
    internal static ReadOnlySpan<byte> glColor3iFunctionName => "glColor3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Color3i;
    internal static ReadOnlySpan<byte> glColor3ivFunctionName => "glColor3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Color3iv;
    internal static ReadOnlySpan<byte> glColor3sFunctionName => "glColor3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Color3s;
    internal static ReadOnlySpan<byte> glColor3svFunctionName => "glColor3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Color3sv;
    internal static ReadOnlySpan<byte> glColor3ubFunctionName => "glColor3ub"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> Color3ub;
    internal static ReadOnlySpan<byte> glColor3ubvFunctionName => "glColor3ubv"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> Color3ubv;
    internal static ReadOnlySpan<byte> glColor3uiFunctionName => "glColor3ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> Color3ui;
    internal static ReadOnlySpan<byte> glColor3uivFunctionName => "glColor3uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> Color3uiv;
    internal static ReadOnlySpan<byte> glColor3usFunctionName => "glColor3us"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> Color3us;
    internal static ReadOnlySpan<byte> glColor3usvFunctionName => "glColor3usv"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> Color3usv;
    internal static ReadOnlySpan<byte> glColor4bFunctionName => "glColor4b"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> Color4b;
    internal static ReadOnlySpan<byte> glColor4bvFunctionName => "glColor4bv"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> Color4bv;
    internal static ReadOnlySpan<byte> glColor4dFunctionName => "glColor4d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Color4d;
    internal static ReadOnlySpan<byte> glColor4dvFunctionName => "glColor4dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Color4dv;
    internal static ReadOnlySpan<byte> glColor4fFunctionName => "glColor4f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Color4f;
    internal static ReadOnlySpan<byte> glColor4fvFunctionName => "glColor4fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Color4fv;
    internal static ReadOnlySpan<byte> glColor4iFunctionName => "glColor4i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Color4i;
    internal static ReadOnlySpan<byte> glColor4ivFunctionName => "glColor4iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Color4iv;
    internal static ReadOnlySpan<byte> glColor4sFunctionName => "glColor4s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Color4s;
    internal static ReadOnlySpan<byte> glColor4svFunctionName => "glColor4sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Color4sv;
    internal static ReadOnlySpan<byte> glColor4ubFunctionName => "glColor4ub"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> Color4ub;
    internal static ReadOnlySpan<byte> glColor4ubvFunctionName => "glColor4ubv"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> Color4ubv;
    internal static ReadOnlySpan<byte> glColor4uiFunctionName => "glColor4ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> Color4ui;
    internal static ReadOnlySpan<byte> glColor4uivFunctionName => "glColor4uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> Color4uiv;
    internal static ReadOnlySpan<byte> glColor4usFunctionName => "glColor4us"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> Color4us;
    internal static ReadOnlySpan<byte> glColor4usvFunctionName => "glColor4usv"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> Color4usv;
    internal static ReadOnlySpan<byte> glEdgeFlagFunctionName => "glEdgeFlag"u8;
    public readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> EdgeFlag;
    internal static ReadOnlySpan<byte> glEdgeFlagvFunctionName => "glEdgeFlagv"u8;
    public readonly delegate* unmanaged</* GLboolean */ int*, /* void */ void> EdgeFlagv;
    internal static ReadOnlySpan<byte> glEndFunctionName => "glEnd"u8;
    public readonly delegate* unmanaged</* void */ void> End;
    internal static ReadOnlySpan<byte> glIndexdFunctionName => "glIndexd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> Indexd;
    internal static ReadOnlySpan<byte> glIndexdvFunctionName => "glIndexdv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Indexdv;
    internal static ReadOnlySpan<byte> glIndexfFunctionName => "glIndexf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> Indexf;
    internal static ReadOnlySpan<byte> glIndexfvFunctionName => "glIndexfv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Indexfv;
    internal static ReadOnlySpan<byte> glIndexiFunctionName => "glIndexi"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> Indexi;
    internal static ReadOnlySpan<byte> glIndexivFunctionName => "glIndexiv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Indexiv;
    internal static ReadOnlySpan<byte> glIndexsFunctionName => "glIndexs"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* void */ void> Indexs;
    internal static ReadOnlySpan<byte> glIndexsvFunctionName => "glIndexsv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Indexsv;
    internal static ReadOnlySpan<byte> glNormal3bFunctionName => "glNormal3b"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> Normal3b;
    internal static ReadOnlySpan<byte> glNormal3bvFunctionName => "glNormal3bv"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> Normal3bv;
    internal static ReadOnlySpan<byte> glNormal3dFunctionName => "glNormal3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Normal3d;
    internal static ReadOnlySpan<byte> glNormal3dvFunctionName => "glNormal3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Normal3dv;
    internal static ReadOnlySpan<byte> glNormal3fFunctionName => "glNormal3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Normal3f;
    internal static ReadOnlySpan<byte> glNormal3fvFunctionName => "glNormal3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Normal3fv;
    internal static ReadOnlySpan<byte> glNormal3iFunctionName => "glNormal3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Normal3i;
    internal static ReadOnlySpan<byte> glNormal3ivFunctionName => "glNormal3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Normal3iv;
    internal static ReadOnlySpan<byte> glNormal3sFunctionName => "glNormal3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Normal3s;
    internal static ReadOnlySpan<byte> glNormal3svFunctionName => "glNormal3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Normal3sv;
    internal static ReadOnlySpan<byte> glRasterPos2dFunctionName => "glRasterPos2d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> RasterPos2d;
    internal static ReadOnlySpan<byte> glRasterPos2dvFunctionName => "glRasterPos2dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> RasterPos2dv;
    internal static ReadOnlySpan<byte> glRasterPos2fFunctionName => "glRasterPos2f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> RasterPos2f;
    internal static ReadOnlySpan<byte> glRasterPos2fvFunctionName => "glRasterPos2fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> RasterPos2fv;
    internal static ReadOnlySpan<byte> glRasterPos2iFunctionName => "glRasterPos2i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> RasterPos2i;
    internal static ReadOnlySpan<byte> glRasterPos2ivFunctionName => "glRasterPos2iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> RasterPos2iv;
    internal static ReadOnlySpan<byte> glRasterPos2sFunctionName => "glRasterPos2s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> RasterPos2s;
    internal static ReadOnlySpan<byte> glRasterPos2svFunctionName => "glRasterPos2sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> RasterPos2sv;
    internal static ReadOnlySpan<byte> glRasterPos3dFunctionName => "glRasterPos3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> RasterPos3d;
    internal static ReadOnlySpan<byte> glRasterPos3dvFunctionName => "glRasterPos3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> RasterPos3dv;
    internal static ReadOnlySpan<byte> glRasterPos3fFunctionName => "glRasterPos3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> RasterPos3f;
    internal static ReadOnlySpan<byte> glRasterPos3fvFunctionName => "glRasterPos3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> RasterPos3fv;
    internal static ReadOnlySpan<byte> glRasterPos3iFunctionName => "glRasterPos3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> RasterPos3i;
    internal static ReadOnlySpan<byte> glRasterPos3ivFunctionName => "glRasterPos3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> RasterPos3iv;
    internal static ReadOnlySpan<byte> glRasterPos3sFunctionName => "glRasterPos3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> RasterPos3s;
    internal static ReadOnlySpan<byte> glRasterPos3svFunctionName => "glRasterPos3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> RasterPos3sv;
    internal static ReadOnlySpan<byte> glRasterPos4dFunctionName => "glRasterPos4d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> RasterPos4d;
    internal static ReadOnlySpan<byte> glRasterPos4dvFunctionName => "glRasterPos4dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> RasterPos4dv;
    internal static ReadOnlySpan<byte> glRasterPos4fFunctionName => "glRasterPos4f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> RasterPos4f;
    internal static ReadOnlySpan<byte> glRasterPos4fvFunctionName => "glRasterPos4fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> RasterPos4fv;
    internal static ReadOnlySpan<byte> glRasterPos4iFunctionName => "glRasterPos4i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> RasterPos4i;
    internal static ReadOnlySpan<byte> glRasterPos4ivFunctionName => "glRasterPos4iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> RasterPos4iv;
    internal static ReadOnlySpan<byte> glRasterPos4sFunctionName => "glRasterPos4s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> RasterPos4s;
    internal static ReadOnlySpan<byte> glRasterPos4svFunctionName => "glRasterPos4sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> RasterPos4sv;
    internal static ReadOnlySpan<byte> glRectdFunctionName => "glRectd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Rectd;
    internal static ReadOnlySpan<byte> glRectdvFunctionName => "glRectdv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* GLdouble */ double*, /* void */ void> Rectdv;
    internal static ReadOnlySpan<byte> glRectfFunctionName => "glRectf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Rectf;
    internal static ReadOnlySpan<byte> glRectfvFunctionName => "glRectfv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* GLfloat */ float*, /* void */ void> Rectfv;
    internal static ReadOnlySpan<byte> glRectiFunctionName => "glRecti"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Recti;
    internal static ReadOnlySpan<byte> glRectivFunctionName => "glRectiv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* GLint */ int*, /* void */ void> Rectiv;
    internal static ReadOnlySpan<byte> glRectsFunctionName => "glRects"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Rects;
    internal static ReadOnlySpan<byte> glRectsvFunctionName => "glRectsv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* GLshort */ short*, /* void */ void> Rectsv;
    internal static ReadOnlySpan<byte> glTexCoord1dFunctionName => "glTexCoord1d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> TexCoord1d;
    internal static ReadOnlySpan<byte> glTexCoord1dvFunctionName => "glTexCoord1dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> TexCoord1dv;
    internal static ReadOnlySpan<byte> glTexCoord1fFunctionName => "glTexCoord1f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> TexCoord1f;
    internal static ReadOnlySpan<byte> glTexCoord1fvFunctionName => "glTexCoord1fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> TexCoord1fv;
    internal static ReadOnlySpan<byte> glTexCoord1iFunctionName => "glTexCoord1i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> TexCoord1i;
    internal static ReadOnlySpan<byte> glTexCoord1ivFunctionName => "glTexCoord1iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> TexCoord1iv;
    internal static ReadOnlySpan<byte> glTexCoord1sFunctionName => "glTexCoord1s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* void */ void> TexCoord1s;
    internal static ReadOnlySpan<byte> glTexCoord1svFunctionName => "glTexCoord1sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> TexCoord1sv;
    internal static ReadOnlySpan<byte> glTexCoord2dFunctionName => "glTexCoord2d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> TexCoord2d;
    internal static ReadOnlySpan<byte> glTexCoord2dvFunctionName => "glTexCoord2dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> TexCoord2dv;
    internal static ReadOnlySpan<byte> glTexCoord2fFunctionName => "glTexCoord2f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> TexCoord2f;
    internal static ReadOnlySpan<byte> glTexCoord2fvFunctionName => "glTexCoord2fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> TexCoord2fv;
    internal static ReadOnlySpan<byte> glTexCoord2iFunctionName => "glTexCoord2i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> TexCoord2i;
    internal static ReadOnlySpan<byte> glTexCoord2ivFunctionName => "glTexCoord2iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> TexCoord2iv;
    internal static ReadOnlySpan<byte> glTexCoord2sFunctionName => "glTexCoord2s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> TexCoord2s;
    internal static ReadOnlySpan<byte> glTexCoord2svFunctionName => "glTexCoord2sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> TexCoord2sv;
    internal static ReadOnlySpan<byte> glTexCoord3dFunctionName => "glTexCoord3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> TexCoord3d;
    internal static ReadOnlySpan<byte> glTexCoord3dvFunctionName => "glTexCoord3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> TexCoord3dv;
    internal static ReadOnlySpan<byte> glTexCoord3fFunctionName => "glTexCoord3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> TexCoord3f;
    internal static ReadOnlySpan<byte> glTexCoord3fvFunctionName => "glTexCoord3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> TexCoord3fv;
    internal static ReadOnlySpan<byte> glTexCoord3iFunctionName => "glTexCoord3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> TexCoord3i;
    internal static ReadOnlySpan<byte> glTexCoord3ivFunctionName => "glTexCoord3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> TexCoord3iv;
    internal static ReadOnlySpan<byte> glTexCoord3sFunctionName => "glTexCoord3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> TexCoord3s;
    internal static ReadOnlySpan<byte> glTexCoord3svFunctionName => "glTexCoord3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> TexCoord3sv;
    internal static ReadOnlySpan<byte> glTexCoord4dFunctionName => "glTexCoord4d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> TexCoord4d;
    internal static ReadOnlySpan<byte> glTexCoord4dvFunctionName => "glTexCoord4dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> TexCoord4dv;
    internal static ReadOnlySpan<byte> glTexCoord4fFunctionName => "glTexCoord4f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> TexCoord4f;
    internal static ReadOnlySpan<byte> glTexCoord4fvFunctionName => "glTexCoord4fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> TexCoord4fv;
    internal static ReadOnlySpan<byte> glTexCoord4iFunctionName => "glTexCoord4i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> TexCoord4i;
    internal static ReadOnlySpan<byte> glTexCoord4ivFunctionName => "glTexCoord4iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> TexCoord4iv;
    internal static ReadOnlySpan<byte> glTexCoord4sFunctionName => "glTexCoord4s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> TexCoord4s;
    internal static ReadOnlySpan<byte> glTexCoord4svFunctionName => "glTexCoord4sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> TexCoord4sv;
    internal static ReadOnlySpan<byte> glVertex2dFunctionName => "glVertex2d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> Vertex2d;
    internal static ReadOnlySpan<byte> glVertex2dvFunctionName => "glVertex2dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Vertex2dv;
    internal static ReadOnlySpan<byte> glVertex2fFunctionName => "glVertex2f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> Vertex2f;
    internal static ReadOnlySpan<byte> glVertex2fvFunctionName => "glVertex2fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Vertex2fv;
    internal static ReadOnlySpan<byte> glVertex2iFunctionName => "glVertex2i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> Vertex2i;
    internal static ReadOnlySpan<byte> glVertex2ivFunctionName => "glVertex2iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Vertex2iv;
    internal static ReadOnlySpan<byte> glVertex2sFunctionName => "glVertex2s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> Vertex2s;
    internal static ReadOnlySpan<byte> glVertex2svFunctionName => "glVertex2sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Vertex2sv;
    internal static ReadOnlySpan<byte> glVertex3dFunctionName => "glVertex3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Vertex3d;
    internal static ReadOnlySpan<byte> glVertex3dvFunctionName => "glVertex3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Vertex3dv;
    internal static ReadOnlySpan<byte> glVertex3fFunctionName => "glVertex3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Vertex3f;
    internal static ReadOnlySpan<byte> glVertex3fvFunctionName => "glVertex3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Vertex3fv;
    internal static ReadOnlySpan<byte> glVertex3iFunctionName => "glVertex3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Vertex3i;
    internal static ReadOnlySpan<byte> glVertex3ivFunctionName => "glVertex3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Vertex3iv;
    internal static ReadOnlySpan<byte> glVertex3sFunctionName => "glVertex3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Vertex3s;
    internal static ReadOnlySpan<byte> glVertex3svFunctionName => "glVertex3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Vertex3sv;
    internal static ReadOnlySpan<byte> glVertex4dFunctionName => "glVertex4d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Vertex4d;
    internal static ReadOnlySpan<byte> glVertex4dvFunctionName => "glVertex4dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> Vertex4dv;
    internal static ReadOnlySpan<byte> glVertex4fFunctionName => "glVertex4f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Vertex4f;
    internal static ReadOnlySpan<byte> glVertex4fvFunctionName => "glVertex4fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> Vertex4fv;
    internal static ReadOnlySpan<byte> glVertex4iFunctionName => "glVertex4i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Vertex4i;
    internal static ReadOnlySpan<byte> glVertex4ivFunctionName => "glVertex4iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> Vertex4iv;
    internal static ReadOnlySpan<byte> glVertex4sFunctionName => "glVertex4s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> Vertex4s;
    internal static ReadOnlySpan<byte> glVertex4svFunctionName => "glVertex4sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> Vertex4sv;
    internal static ReadOnlySpan<byte> glClipPlaneFunctionName => "glClipPlane"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> ClipPlane;
    internal static ReadOnlySpan<byte> glColorMaterialFunctionName => "glColorMaterial"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> ColorMaterial;
    internal static ReadOnlySpan<byte> glFogfFunctionName => "glFogf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> Fogf;
    internal static ReadOnlySpan<byte> glFogfvFunctionName => "glFogfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> Fogfv;
    internal static ReadOnlySpan<byte> glFogiFunctionName => "glFogi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> Fogi;
    internal static ReadOnlySpan<byte> glFogivFunctionName => "glFogiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> Fogiv;
    internal static ReadOnlySpan<byte> glLightfFunctionName => "glLightf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> Lightf;
    internal static ReadOnlySpan<byte> glLightfvFunctionName => "glLightfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> Lightfv;
    internal static ReadOnlySpan<byte> glLightiFunctionName => "glLighti"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> Lighti;
    internal static ReadOnlySpan<byte> glLightivFunctionName => "glLightiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> Lightiv;
    internal static ReadOnlySpan<byte> glLightModelfFunctionName => "glLightModelf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> LightModelf;
    internal static ReadOnlySpan<byte> glLightModelfvFunctionName => "glLightModelfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> LightModelfv;
    internal static ReadOnlySpan<byte> glLightModeliFunctionName => "glLightModeli"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> LightModeli;
    internal static ReadOnlySpan<byte> glLightModelivFunctionName => "glLightModeliv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> LightModeliv;
    internal static ReadOnlySpan<byte> glLineStippleFunctionName => "glLineStipple"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLushort */ ushort, /* void */ void> LineStipple;
    internal static ReadOnlySpan<byte> glMaterialfFunctionName => "glMaterialf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> Materialf;
    internal static ReadOnlySpan<byte> glMaterialfvFunctionName => "glMaterialfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> Materialfv;
    internal static ReadOnlySpan<byte> glMaterialiFunctionName => "glMateriali"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> Materiali;
    internal static ReadOnlySpan<byte> glMaterialivFunctionName => "glMaterialiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> Materialiv;
    internal static ReadOnlySpan<byte> glPolygonStippleFunctionName => "glPolygonStipple"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> PolygonStipple;
    internal static ReadOnlySpan<byte> glShadeModelFunctionName => "glShadeModel"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ShadeModel;
    internal static ReadOnlySpan<byte> glTexEnvfFunctionName => "glTexEnvf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TexEnvf;
    internal static ReadOnlySpan<byte> glTexEnvfvFunctionName => "glTexEnvfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TexEnvfv;
    internal static ReadOnlySpan<byte> glTexEnviFunctionName => "glTexEnvi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> TexEnvi;
    internal static ReadOnlySpan<byte> glTexEnvivFunctionName => "glTexEnviv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexEnviv;
    internal static ReadOnlySpan<byte> glTexGendFunctionName => "glTexGend"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double, /* void */ void> TexGend;
    internal static ReadOnlySpan<byte> glTexGendvFunctionName => "glTexGendv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> TexGendv;
    internal static ReadOnlySpan<byte> glTexGenfFunctionName => "glTexGenf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TexGenf;
    internal static ReadOnlySpan<byte> glTexGenfvFunctionName => "glTexGenfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TexGenfv;
    internal static ReadOnlySpan<byte> glTexGeniFunctionName => "glTexGeni"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> TexGeni;
    internal static ReadOnlySpan<byte> glTexGenivFunctionName => "glTexGeniv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexGeniv;
    internal static ReadOnlySpan<byte> glFeedbackBufferFunctionName => "glFeedbackBuffer"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> FeedbackBuffer;
    internal static ReadOnlySpan<byte> glSelectBufferFunctionName => "glSelectBuffer"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> SelectBuffer;
    internal static ReadOnlySpan<byte> glRenderModeFunctionName => "glRenderMode"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int> RenderMode;
    internal static ReadOnlySpan<byte> glInitNamesFunctionName => "glInitNames"u8;
    public readonly delegate* unmanaged</* void */ void> InitNames;
    internal static ReadOnlySpan<byte> glLoadNameFunctionName => "glLoadName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> LoadName;
    internal static ReadOnlySpan<byte> glPassThroughFunctionName => "glPassThrough"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> PassThrough;
    internal static ReadOnlySpan<byte> glPopNameFunctionName => "glPopName"u8;
    public readonly delegate* unmanaged</* void */ void> PopName;
    internal static ReadOnlySpan<byte> glPushNameFunctionName => "glPushName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> PushName;
    internal static ReadOnlySpan<byte> glClearAccumFunctionName => "glClearAccum"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ClearAccum;
    internal static ReadOnlySpan<byte> glClearIndexFunctionName => "glClearIndex"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> ClearIndex;
    internal static ReadOnlySpan<byte> glIndexMaskFunctionName => "glIndexMask"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> IndexMask;
    internal static ReadOnlySpan<byte> glAccumFunctionName => "glAccum"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> Accum;
    internal static ReadOnlySpan<byte> glPopAttribFunctionName => "glPopAttrib"u8;
    public readonly delegate* unmanaged</* void */ void> PopAttrib;
    internal static ReadOnlySpan<byte> glPushAttribFunctionName => "glPushAttrib"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> PushAttrib;
    internal static ReadOnlySpan<byte> glMap1dFunctionName => "glMap1d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void> Map1d;
    internal static ReadOnlySpan<byte> glMap1fFunctionName => "glMap1f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> Map1f;
    internal static ReadOnlySpan<byte> glMap2dFunctionName => "glMap2d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLint */ int, /* GLdouble */ double*, /* void */ void> Map2d;
    internal static ReadOnlySpan<byte> glMap2fFunctionName => "glMap2f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> Map2f;
    internal static ReadOnlySpan<byte> glMapGrid1dFunctionName => "glMapGrid1d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> MapGrid1d;
    internal static ReadOnlySpan<byte> glMapGrid1fFunctionName => "glMapGrid1f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MapGrid1f;
    internal static ReadOnlySpan<byte> glMapGrid2dFunctionName => "glMapGrid2d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> MapGrid2d;
    internal static ReadOnlySpan<byte> glMapGrid2fFunctionName => "glMapGrid2f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MapGrid2f;
    internal static ReadOnlySpan<byte> glEvalCoord1dFunctionName => "glEvalCoord1d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> EvalCoord1d;
    internal static ReadOnlySpan<byte> glEvalCoord1dvFunctionName => "glEvalCoord1dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> EvalCoord1dv;
    internal static ReadOnlySpan<byte> glEvalCoord1fFunctionName => "glEvalCoord1f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> EvalCoord1f;
    internal static ReadOnlySpan<byte> glEvalCoord1fvFunctionName => "glEvalCoord1fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> EvalCoord1fv;
    internal static ReadOnlySpan<byte> glEvalCoord2dFunctionName => "glEvalCoord2d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> EvalCoord2d;
    internal static ReadOnlySpan<byte> glEvalCoord2dvFunctionName => "glEvalCoord2dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> EvalCoord2dv;
    internal static ReadOnlySpan<byte> glEvalCoord2fFunctionName => "glEvalCoord2f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> EvalCoord2f;
    internal static ReadOnlySpan<byte> glEvalCoord2fvFunctionName => "glEvalCoord2fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> EvalCoord2fv;
    internal static ReadOnlySpan<byte> glEvalMesh1FunctionName => "glEvalMesh1"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void> EvalMesh1;
    internal static ReadOnlySpan<byte> glEvalPoint1FunctionName => "glEvalPoint1"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> EvalPoint1;
    internal static ReadOnlySpan<byte> glEvalMesh2FunctionName => "glEvalMesh2"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> EvalMesh2;
    internal static ReadOnlySpan<byte> glEvalPoint2FunctionName => "glEvalPoint2"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> EvalPoint2;
    internal static ReadOnlySpan<byte> glAlphaFuncFunctionName => "glAlphaFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> AlphaFunc;
    internal static ReadOnlySpan<byte> glPixelZoomFunctionName => "glPixelZoom"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> PixelZoom;
    internal static ReadOnlySpan<byte> glPixelTransferfFunctionName => "glPixelTransferf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> PixelTransferf;
    internal static ReadOnlySpan<byte> glPixelTransferiFunctionName => "glPixelTransferi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> PixelTransferi;
    internal static ReadOnlySpan<byte> glPixelMapfvFunctionName => "glPixelMapfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> PixelMapfv;
    internal static ReadOnlySpan<byte> glPixelMapuivFunctionName => "glPixelMapuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> PixelMapuiv;
    internal static ReadOnlySpan<byte> glPixelMapusvFunctionName => "glPixelMapusv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void> PixelMapusv;
    internal static ReadOnlySpan<byte> glCopyPixelsFunctionName => "glCopyPixels"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void> CopyPixels;
    internal static ReadOnlySpan<byte> glDrawPixelsFunctionName => "glDrawPixels"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> DrawPixels;
    internal static ReadOnlySpan<byte> glGetClipPlaneFunctionName => "glGetClipPlane"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetClipPlane;
    internal static ReadOnlySpan<byte> glGetLightfvFunctionName => "glGetLightfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetLightfv;
    internal static ReadOnlySpan<byte> glGetLightivFunctionName => "glGetLightiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetLightiv;
    internal static ReadOnlySpan<byte> glGetMapdvFunctionName => "glGetMapdv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetMapdv;
    internal static ReadOnlySpan<byte> glGetMapfvFunctionName => "glGetMapfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetMapfv;
    internal static ReadOnlySpan<byte> glGetMapivFunctionName => "glGetMapiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetMapiv;
    internal static ReadOnlySpan<byte> glGetMaterialfvFunctionName => "glGetMaterialfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetMaterialfv;
    internal static ReadOnlySpan<byte> glGetMaterialivFunctionName => "glGetMaterialiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetMaterialiv;
    internal static ReadOnlySpan<byte> glGetPixelMapfvFunctionName => "glGetPixelMapfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetPixelMapfv;
    internal static ReadOnlySpan<byte> glGetPixelMapuivFunctionName => "glGetPixelMapuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetPixelMapuiv;
    internal static ReadOnlySpan<byte> glGetPixelMapusvFunctionName => "glGetPixelMapusv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLushort */ ushort*, /* void */ void> GetPixelMapusv;
    internal static ReadOnlySpan<byte> glGetPolygonStippleFunctionName => "glGetPolygonStipple"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> GetPolygonStipple;
    internal static ReadOnlySpan<byte> glGetTexEnvfvFunctionName => "glGetTexEnvfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexEnvfv;
    internal static ReadOnlySpan<byte> glGetTexEnvivFunctionName => "glGetTexEnviv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexEnviv;
    internal static ReadOnlySpan<byte> glGetTexGendvFunctionName => "glGetTexGendv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetTexGendv;
    internal static ReadOnlySpan<byte> glGetTexGenfvFunctionName => "glGetTexGenfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexGenfv;
    internal static ReadOnlySpan<byte> glGetTexGenivFunctionName => "glGetTexGeniv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexGeniv;
    internal static ReadOnlySpan<byte> glIsListFunctionName => "glIsList"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsList;
    internal static ReadOnlySpan<byte> glFrustumFunctionName => "glFrustum"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Frustum;
    internal static ReadOnlySpan<byte> glLoadIdentityFunctionName => "glLoadIdentity"u8;
    public readonly delegate* unmanaged</* void */ void> LoadIdentity;
    internal static ReadOnlySpan<byte> glLoadMatrixfFunctionName => "glLoadMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> LoadMatrixf;
    internal static ReadOnlySpan<byte> glLoadMatrixdFunctionName => "glLoadMatrixd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> LoadMatrixd;
    internal static ReadOnlySpan<byte> glMatrixModeFunctionName => "glMatrixMode"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> MatrixMode;
    internal static ReadOnlySpan<byte> glMultMatrixfFunctionName => "glMultMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> MultMatrixf;
    internal static ReadOnlySpan<byte> glMultMatrixdFunctionName => "glMultMatrixd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> MultMatrixd;
    internal static ReadOnlySpan<byte> glOrthoFunctionName => "glOrtho"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Ortho;
    internal static ReadOnlySpan<byte> glPopMatrixFunctionName => "glPopMatrix"u8;
    public readonly delegate* unmanaged</* void */ void> PopMatrix;
    internal static ReadOnlySpan<byte> glPushMatrixFunctionName => "glPushMatrix"u8;
    public readonly delegate* unmanaged</* void */ void> PushMatrix;
    internal static ReadOnlySpan<byte> glRotatedFunctionName => "glRotated"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Rotated;
    internal static ReadOnlySpan<byte> glRotatefFunctionName => "glRotatef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Rotatef;
    internal static ReadOnlySpan<byte> glScaledFunctionName => "glScaled"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Scaled;
    internal static ReadOnlySpan<byte> glScalefFunctionName => "glScalef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Scalef;
    internal static ReadOnlySpan<byte> glTranslatedFunctionName => "glTranslated"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Translated;
    internal static ReadOnlySpan<byte> glTranslatefFunctionName => "glTranslatef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Translatef;
    internal static ReadOnlySpan<byte> glDrawArraysFunctionName => "glDrawArrays"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> DrawArrays;
    internal static ReadOnlySpan<byte> glDrawElementsFunctionName => "glDrawElements"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> DrawElements;
    internal static ReadOnlySpan<byte> glGetPointervFunctionName => "glGetPointerv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void> GetPointerv;
    internal static ReadOnlySpan<byte> glPolygonOffsetFunctionName => "glPolygonOffset"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> PolygonOffset;
    internal static ReadOnlySpan<byte> glCopyTexImage1DFunctionName => "glCopyTexImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> CopyTexImage1D;
    internal static ReadOnlySpan<byte> glCopyTexImage2DFunctionName => "glCopyTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> CopyTexImage2D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage1DFunctionName => "glCopyTexSubImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> CopyTexSubImage1D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage2DFunctionName => "glCopyTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyTexSubImage2D;
    internal static ReadOnlySpan<byte> glTexSubImage1DFunctionName => "glTexSubImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexSubImage1D;
    internal static ReadOnlySpan<byte> glTexSubImage2DFunctionName => "glTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexSubImage2D;
    internal static ReadOnlySpan<byte> glBindTextureFunctionName => "glBindTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindTexture;
    internal static ReadOnlySpan<byte> glDeleteTexturesFunctionName => "glDeleteTextures"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteTextures;
    internal static ReadOnlySpan<byte> glGenTexturesFunctionName => "glGenTextures"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenTextures;
    internal static ReadOnlySpan<byte> glIsTextureFunctionName => "glIsTexture"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsTexture;
    internal static ReadOnlySpan<byte> glArrayElementFunctionName => "glArrayElement"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> ArrayElement;
    internal static ReadOnlySpan<byte> glColorPointerFunctionName => "glColorPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> ColorPointer;
    internal static ReadOnlySpan<byte> glDisableClientStateFunctionName => "glDisableClientState"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> DisableClientState;
    internal static ReadOnlySpan<byte> glEdgeFlagPointerFunctionName => "glEdgeFlagPointer"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* void */ void*, /* void */ void> EdgeFlagPointer;
    internal static ReadOnlySpan<byte> glEnableClientStateFunctionName => "glEnableClientState"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> EnableClientState;
    internal static ReadOnlySpan<byte> glIndexPointerFunctionName => "glIndexPointer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> IndexPointer;
    internal static ReadOnlySpan<byte> glInterleavedArraysFunctionName => "glInterleavedArrays"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> InterleavedArrays;
    internal static ReadOnlySpan<byte> glNormalPointerFunctionName => "glNormalPointer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> NormalPointer;
    internal static ReadOnlySpan<byte> glTexCoordPointerFunctionName => "glTexCoordPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> TexCoordPointer;
    internal static ReadOnlySpan<byte> glVertexPointerFunctionName => "glVertexPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> VertexPointer;
    internal static ReadOnlySpan<byte> glAreTexturesResidentFunctionName => "glAreTexturesResident"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int*, /* GLboolean */ int> AreTexturesResident;
    internal static ReadOnlySpan<byte> glPrioritizeTexturesFunctionName => "glPrioritizeTextures"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLfloat */ float*, /* void */ void> PrioritizeTextures;
    internal static ReadOnlySpan<byte> glIndexubFunctionName => "glIndexub"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte, /* void */ void> Indexub;
    internal static ReadOnlySpan<byte> glIndexubvFunctionName => "glIndexubv"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> Indexubv;
    internal static ReadOnlySpan<byte> glPopClientAttribFunctionName => "glPopClientAttrib"u8;
    public readonly delegate* unmanaged</* void */ void> PopClientAttrib;
    internal static ReadOnlySpan<byte> glPushClientAttribFunctionName => "glPushClientAttrib"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> PushClientAttrib;
    internal static ReadOnlySpan<byte> glDrawRangeElementsFunctionName => "glDrawRangeElements"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> DrawRangeElements;
    internal static ReadOnlySpan<byte> glTexImage3DFunctionName => "glTexImage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexImage3D;
    internal static ReadOnlySpan<byte> glTexSubImage3DFunctionName => "glTexSubImage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexSubImage3D;
    internal static ReadOnlySpan<byte> glCopyTexSubImage3DFunctionName => "glCopyTexSubImage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyTexSubImage3D;
    internal static ReadOnlySpan<byte> glActiveTextureFunctionName => "glActiveTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ActiveTexture;
    internal static ReadOnlySpan<byte> glSampleCoverageFunctionName => "glSampleCoverage"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void> SampleCoverage;
    internal static ReadOnlySpan<byte> glCompressedTexImage3DFunctionName => "glCompressedTexImage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexImage2DFunctionName => "glCompressedTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexImage2D;
    internal static ReadOnlySpan<byte> glCompressedTexImage1DFunctionName => "glCompressedTexImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexImage1D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage3DFunctionName => "glCompressedTexSubImage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexSubImage3D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage2DFunctionName => "glCompressedTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexSubImage2D;
    internal static ReadOnlySpan<byte> glCompressedTexSubImage1DFunctionName => "glCompressedTexSubImage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexSubImage1D;
    internal static ReadOnlySpan<byte> glGetCompressedTexImageFunctionName => "glGetCompressedTexImage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void*, /* void */ void> GetCompressedTexImage;
    internal static ReadOnlySpan<byte> glClientActiveTextureFunctionName => "glClientActiveTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ClientActiveTexture;
    internal static ReadOnlySpan<byte> glMultiTexCoord1dFunctionName => "glMultiTexCoord1d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* void */ void> MultiTexCoord1d;
    internal static ReadOnlySpan<byte> glMultiTexCoord1dvFunctionName => "glMultiTexCoord1dv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> MultiTexCoord1dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1fFunctionName => "glMultiTexCoord1f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> MultiTexCoord1f;
    internal static ReadOnlySpan<byte> glMultiTexCoord1fvFunctionName => "glMultiTexCoord1fv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> MultiTexCoord1fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1iFunctionName => "glMultiTexCoord1i"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> MultiTexCoord1i;
    internal static ReadOnlySpan<byte> glMultiTexCoord1ivFunctionName => "glMultiTexCoord1iv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> MultiTexCoord1iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord1sFunctionName => "glMultiTexCoord1s"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* void */ void> MultiTexCoord1s;
    internal static ReadOnlySpan<byte> glMultiTexCoord1svFunctionName => "glMultiTexCoord1sv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> MultiTexCoord1sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2dFunctionName => "glMultiTexCoord2d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> MultiTexCoord2d;
    internal static ReadOnlySpan<byte> glMultiTexCoord2dvFunctionName => "glMultiTexCoord2dv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> MultiTexCoord2dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2fFunctionName => "glMultiTexCoord2f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MultiTexCoord2f;
    internal static ReadOnlySpan<byte> glMultiTexCoord2fvFunctionName => "glMultiTexCoord2fv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> MultiTexCoord2fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2iFunctionName => "glMultiTexCoord2i"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* void */ void> MultiTexCoord2i;
    internal static ReadOnlySpan<byte> glMultiTexCoord2ivFunctionName => "glMultiTexCoord2iv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> MultiTexCoord2iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord2sFunctionName => "glMultiTexCoord2s"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* void */ void> MultiTexCoord2s;
    internal static ReadOnlySpan<byte> glMultiTexCoord2svFunctionName => "glMultiTexCoord2sv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> MultiTexCoord2sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3dFunctionName => "glMultiTexCoord3d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> MultiTexCoord3d;
    internal static ReadOnlySpan<byte> glMultiTexCoord3dvFunctionName => "glMultiTexCoord3dv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> MultiTexCoord3dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3fFunctionName => "glMultiTexCoord3f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MultiTexCoord3f;
    internal static ReadOnlySpan<byte> glMultiTexCoord3fvFunctionName => "glMultiTexCoord3fv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> MultiTexCoord3fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3iFunctionName => "glMultiTexCoord3i"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> MultiTexCoord3i;
    internal static ReadOnlySpan<byte> glMultiTexCoord3ivFunctionName => "glMultiTexCoord3iv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> MultiTexCoord3iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord3sFunctionName => "glMultiTexCoord3s"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> MultiTexCoord3s;
    internal static ReadOnlySpan<byte> glMultiTexCoord3svFunctionName => "glMultiTexCoord3sv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> MultiTexCoord3sv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4dFunctionName => "glMultiTexCoord4d"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> MultiTexCoord4d;
    internal static ReadOnlySpan<byte> glMultiTexCoord4dvFunctionName => "glMultiTexCoord4dv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLdouble */ double*, /* void */ void> MultiTexCoord4dv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4fFunctionName => "glMultiTexCoord4f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MultiTexCoord4f;
    internal static ReadOnlySpan<byte> glMultiTexCoord4fvFunctionName => "glMultiTexCoord4fv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> MultiTexCoord4fv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4iFunctionName => "glMultiTexCoord4i"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> MultiTexCoord4i;
    internal static ReadOnlySpan<byte> glMultiTexCoord4ivFunctionName => "glMultiTexCoord4iv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> MultiTexCoord4iv;
    internal static ReadOnlySpan<byte> glMultiTexCoord4sFunctionName => "glMultiTexCoord4s"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> MultiTexCoord4s;
    internal static ReadOnlySpan<byte> glMultiTexCoord4svFunctionName => "glMultiTexCoord4sv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLshort */ short*, /* void */ void> MultiTexCoord4sv;
    internal static ReadOnlySpan<byte> glLoadTransposeMatrixfFunctionName => "glLoadTransposeMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> LoadTransposeMatrixf;
    internal static ReadOnlySpan<byte> glLoadTransposeMatrixdFunctionName => "glLoadTransposeMatrixd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> LoadTransposeMatrixd;
    internal static ReadOnlySpan<byte> glMultTransposeMatrixfFunctionName => "glMultTransposeMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> MultTransposeMatrixf;
    internal static ReadOnlySpan<byte> glMultTransposeMatrixdFunctionName => "glMultTransposeMatrixd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> MultTransposeMatrixd;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateFunctionName => "glBlendFuncSeparate"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> BlendFuncSeparate;
    internal static ReadOnlySpan<byte> glMultiDrawArraysFunctionName => "glMultiDrawArrays"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* GLsizei */ int*, /* GLsizei */ int, /* void */ void> MultiDrawArrays;
    internal static ReadOnlySpan<byte> glMultiDrawElementsFunctionName => "glMultiDrawElements"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* void */ void> MultiDrawElements;
    internal static ReadOnlySpan<byte> glPointParameterfFunctionName => "glPointParameterf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> PointParameterf;
    internal static ReadOnlySpan<byte> glPointParameterfvFunctionName => "glPointParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> PointParameterfv;
    internal static ReadOnlySpan<byte> glPointParameteriFunctionName => "glPointParameteri"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> PointParameteri;
    internal static ReadOnlySpan<byte> glPointParameterivFunctionName => "glPointParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> PointParameteriv;
    internal static ReadOnlySpan<byte> glFogCoordfFunctionName => "glFogCoordf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> FogCoordf;
    internal static ReadOnlySpan<byte> glFogCoordfvFunctionName => "glFogCoordfv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> FogCoordfv;
    internal static ReadOnlySpan<byte> glFogCoorddFunctionName => "glFogCoordd"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* void */ void> FogCoordd;
    internal static ReadOnlySpan<byte> glFogCoorddvFunctionName => "glFogCoorddv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> FogCoorddv;
    internal static ReadOnlySpan<byte> glFogCoordPointerFunctionName => "glFogCoordPointer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> FogCoordPointer;
    internal static ReadOnlySpan<byte> glSecondaryColor3bFunctionName => "glSecondaryColor3b"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte, /* GLbyte */ byte, /* GLbyte */ byte, /* void */ void> SecondaryColor3b;
    internal static ReadOnlySpan<byte> glSecondaryColor3bvFunctionName => "glSecondaryColor3bv"u8;
    public readonly delegate* unmanaged</* GLbyte */ byte*, /* void */ void> SecondaryColor3bv;
    internal static ReadOnlySpan<byte> glSecondaryColor3dFunctionName => "glSecondaryColor3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> SecondaryColor3d;
    internal static ReadOnlySpan<byte> glSecondaryColor3dvFunctionName => "glSecondaryColor3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> SecondaryColor3dv;
    internal static ReadOnlySpan<byte> glSecondaryColor3fFunctionName => "glSecondaryColor3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> SecondaryColor3f;
    internal static ReadOnlySpan<byte> glSecondaryColor3fvFunctionName => "glSecondaryColor3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> SecondaryColor3fv;
    internal static ReadOnlySpan<byte> glSecondaryColor3iFunctionName => "glSecondaryColor3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> SecondaryColor3i;
    internal static ReadOnlySpan<byte> glSecondaryColor3ivFunctionName => "glSecondaryColor3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> SecondaryColor3iv;
    internal static ReadOnlySpan<byte> glSecondaryColor3sFunctionName => "glSecondaryColor3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> SecondaryColor3s;
    internal static ReadOnlySpan<byte> glSecondaryColor3svFunctionName => "glSecondaryColor3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> SecondaryColor3sv;
    internal static ReadOnlySpan<byte> glSecondaryColor3ubFunctionName => "glSecondaryColor3ub"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> SecondaryColor3ub;
    internal static ReadOnlySpan<byte> glSecondaryColor3ubvFunctionName => "glSecondaryColor3ubv"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte*, /* void */ void> SecondaryColor3ubv;
    internal static ReadOnlySpan<byte> glSecondaryColor3uiFunctionName => "glSecondaryColor3ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> SecondaryColor3ui;
    internal static ReadOnlySpan<byte> glSecondaryColor3uivFunctionName => "glSecondaryColor3uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint*, /* void */ void> SecondaryColor3uiv;
    internal static ReadOnlySpan<byte> glSecondaryColor3usFunctionName => "glSecondaryColor3us"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort, /* GLushort */ ushort, /* GLushort */ ushort, /* void */ void> SecondaryColor3us;
    internal static ReadOnlySpan<byte> glSecondaryColor3usvFunctionName => "glSecondaryColor3usv"u8;
    public readonly delegate* unmanaged</* GLushort */ ushort*, /* void */ void> SecondaryColor3usv;
    internal static ReadOnlySpan<byte> glSecondaryColorPointerFunctionName => "glSecondaryColorPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> SecondaryColorPointer;
    internal static ReadOnlySpan<byte> glWindowPos2dFunctionName => "glWindowPos2d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* void */ void> WindowPos2d;
    internal static ReadOnlySpan<byte> glWindowPos2dvFunctionName => "glWindowPos2dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> WindowPos2dv;
    internal static ReadOnlySpan<byte> glWindowPos2fFunctionName => "glWindowPos2f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> WindowPos2f;
    internal static ReadOnlySpan<byte> glWindowPos2fvFunctionName => "glWindowPos2fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> WindowPos2fv;
    internal static ReadOnlySpan<byte> glWindowPos2iFunctionName => "glWindowPos2i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> WindowPos2i;
    internal static ReadOnlySpan<byte> glWindowPos2ivFunctionName => "glWindowPos2iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> WindowPos2iv;
    internal static ReadOnlySpan<byte> glWindowPos2sFunctionName => "glWindowPos2s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* void */ void> WindowPos2s;
    internal static ReadOnlySpan<byte> glWindowPos2svFunctionName => "glWindowPos2sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> WindowPos2sv;
    internal static ReadOnlySpan<byte> glWindowPos3dFunctionName => "glWindowPos3d"u8;
    public readonly delegate* unmanaged</* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> WindowPos3d;
    internal static ReadOnlySpan<byte> glWindowPos3dvFunctionName => "glWindowPos3dv"u8;
    public readonly delegate* unmanaged</* GLdouble */ double*, /* void */ void> WindowPos3dv;
    internal static ReadOnlySpan<byte> glWindowPos3fFunctionName => "glWindowPos3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> WindowPos3f;
    internal static ReadOnlySpan<byte> glWindowPos3fvFunctionName => "glWindowPos3fv"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> WindowPos3fv;
    internal static ReadOnlySpan<byte> glWindowPos3iFunctionName => "glWindowPos3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> WindowPos3i;
    internal static ReadOnlySpan<byte> glWindowPos3ivFunctionName => "glWindowPos3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int*, /* void */ void> WindowPos3iv;
    internal static ReadOnlySpan<byte> glWindowPos3sFunctionName => "glWindowPos3s"u8;
    public readonly delegate* unmanaged</* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> WindowPos3s;
    internal static ReadOnlySpan<byte> glWindowPos3svFunctionName => "glWindowPos3sv"u8;
    public readonly delegate* unmanaged</* GLshort */ short*, /* void */ void> WindowPos3sv;
    internal static ReadOnlySpan<byte> glBlendColorFunctionName => "glBlendColor"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> BlendColor;
    internal static ReadOnlySpan<byte> glBlendEquationFunctionName => "glBlendEquation"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> BlendEquation;
    internal static ReadOnlySpan<byte> glGenQueriesFunctionName => "glGenQueries"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenQueries;
    internal static ReadOnlySpan<byte> glDeleteQueriesFunctionName => "glDeleteQueries"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteQueries;
    internal static ReadOnlySpan<byte> glIsQueryFunctionName => "glIsQuery"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsQuery;
    internal static ReadOnlySpan<byte> glBeginQueryFunctionName => "glBeginQuery"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BeginQuery;
    internal static ReadOnlySpan<byte> glEndQueryFunctionName => "glEndQuery"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> EndQuery;
    internal static ReadOnlySpan<byte> glGetQueryivFunctionName => "glGetQueryiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetQueryiv;
    internal static ReadOnlySpan<byte> glGetQueryObjectivFunctionName => "glGetQueryObjectiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetQueryObjectiv;
    internal static ReadOnlySpan<byte> glGetQueryObjectuivFunctionName => "glGetQueryObjectuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetQueryObjectuiv;
    internal static ReadOnlySpan<byte> glBindBufferFunctionName => "glBindBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindBuffer;
    internal static ReadOnlySpan<byte> glDeleteBuffersFunctionName => "glDeleteBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteBuffers;
    internal static ReadOnlySpan<byte> glGenBuffersFunctionName => "glGenBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenBuffers;
    internal static ReadOnlySpan<byte> glIsBufferFunctionName => "glIsBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsBuffer;
    internal static ReadOnlySpan<byte> glBufferDataFunctionName => "glBufferData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> BufferData;
    internal static ReadOnlySpan<byte> glBufferSubDataFunctionName => "glBufferSubData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> BufferSubData;
    internal static ReadOnlySpan<byte> glGetBufferSubDataFunctionName => "glGetBufferSubData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> GetBufferSubData;
    internal static ReadOnlySpan<byte> glMapBufferFunctionName => "glMapBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*> MapBuffer;
    internal static ReadOnlySpan<byte> glUnmapBufferFunctionName => "glUnmapBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> UnmapBuffer;
    internal static ReadOnlySpan<byte> glGetBufferParameterivFunctionName => "glGetBufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetBufferParameteriv;
    internal static ReadOnlySpan<byte> glGetBufferPointervFunctionName => "glGetBufferPointerv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void> GetBufferPointerv;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateFunctionName => "glBlendEquationSeparate"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> BlendEquationSeparate;
    internal static ReadOnlySpan<byte> glDrawBuffersFunctionName => "glDrawBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void> DrawBuffers;
    internal static ReadOnlySpan<byte> glStencilOpSeparateFunctionName => "glStencilOpSeparate"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> StencilOpSeparate;
    internal static ReadOnlySpan<byte> glStencilFuncSeparateFunctionName => "glStencilFuncSeparate"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> StencilFuncSeparate;
    internal static ReadOnlySpan<byte> glStencilMaskSeparateFunctionName => "glStencilMaskSeparate"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> StencilMaskSeparate;
    internal static ReadOnlySpan<byte> glAttachShaderFunctionName => "glAttachShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> AttachShader;
    internal static ReadOnlySpan<byte> glBindAttribLocationFunctionName => "glBindAttribLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> BindAttribLocation;
    internal static ReadOnlySpan<byte> glCompileShaderFunctionName => "glCompileShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> CompileShader;
    internal static ReadOnlySpan<byte> glCreateProgramFunctionName => "glCreateProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint> CreateProgram;
    internal static ReadOnlySpan<byte> glCreateShaderFunctionName => "glCreateShader"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint> CreateShader;
    internal static ReadOnlySpan<byte> glDeleteProgramFunctionName => "glDeleteProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> DeleteProgram;
    internal static ReadOnlySpan<byte> glDeleteShaderFunctionName => "glDeleteShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> DeleteShader;
    internal static ReadOnlySpan<byte> glDetachShaderFunctionName => "glDetachShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> DetachShader;
    internal static ReadOnlySpan<byte> glDisableVertexAttribArrayFunctionName => "glDisableVertexAttribArray"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> DisableVertexAttribArray;
    internal static ReadOnlySpan<byte> glEnableVertexAttribArrayFunctionName => "glEnableVertexAttribArray"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> EnableVertexAttribArray;
    internal static ReadOnlySpan<byte> glGetActiveAttribFunctionName => "glGetActiveAttrib"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> GetActiveAttrib;
    internal static ReadOnlySpan<byte> glGetActiveUniformFunctionName => "glGetActiveUniform"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> GetActiveUniform;
    internal static ReadOnlySpan<byte> glGetAttachedShadersFunctionName => "glGetAttachedShaders"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void> GetAttachedShaders;
    internal static ReadOnlySpan<byte> glGetAttribLocationFunctionName => "glGetAttribLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> GetAttribLocation;
    internal static ReadOnlySpan<byte> glGetProgramivFunctionName => "glGetProgramiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetProgramiv;
    internal static ReadOnlySpan<byte> glGetProgramInfoLogFunctionName => "glGetProgramInfoLog"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetProgramInfoLog;
    internal static ReadOnlySpan<byte> glGetShaderivFunctionName => "glGetShaderiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetShaderiv;
    internal static ReadOnlySpan<byte> glGetShaderInfoLogFunctionName => "glGetShaderInfoLog"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetShaderInfoLog;
    internal static ReadOnlySpan<byte> glGetShaderSourceFunctionName => "glGetShaderSource"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetShaderSource;
    internal static ReadOnlySpan<byte> glGetUniformLocationFunctionName => "glGetUniformLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> GetUniformLocation;
    internal static ReadOnlySpan<byte> glGetUniformfvFunctionName => "glGetUniformfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void> GetUniformfv;
    internal static ReadOnlySpan<byte> glGetUniformivFunctionName => "glGetUniformiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void> GetUniformiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribdvFunctionName => "glGetVertexAttribdv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetVertexAttribdv;
    internal static ReadOnlySpan<byte> glGetVertexAttribfvFunctionName => "glGetVertexAttribfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetVertexAttribfv;
    internal static ReadOnlySpan<byte> glGetVertexAttribivFunctionName => "glGetVertexAttribiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetVertexAttribiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribPointervFunctionName => "glGetVertexAttribPointerv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void> GetVertexAttribPointerv;
    internal static ReadOnlySpan<byte> glIsProgramFunctionName => "glIsProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsProgram;
    internal static ReadOnlySpan<byte> glIsShaderFunctionName => "glIsShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsShader;
    internal static ReadOnlySpan<byte> glLinkProgramFunctionName => "glLinkProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> LinkProgram;
    internal static ReadOnlySpan<byte> glShaderSourceFunctionName => "glShaderSource"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLint */ int*, /* void */ void> ShaderSource;
    internal static ReadOnlySpan<byte> glUseProgramFunctionName => "glUseProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> UseProgram;
    internal static ReadOnlySpan<byte> glUniform1fFunctionName => "glUniform1f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void> Uniform1f;
    internal static ReadOnlySpan<byte> glUniform2fFunctionName => "glUniform2f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Uniform2f;
    internal static ReadOnlySpan<byte> glUniform3fFunctionName => "glUniform3f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Uniform3f;
    internal static ReadOnlySpan<byte> glUniform4fFunctionName => "glUniform4f"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Uniform4f;
    internal static ReadOnlySpan<byte> glUniform1iFunctionName => "glUniform1i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void> Uniform1i;
    internal static ReadOnlySpan<byte> glUniform2iFunctionName => "glUniform2i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Uniform2i;
    internal static ReadOnlySpan<byte> glUniform3iFunctionName => "glUniform3i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Uniform3i;
    internal static ReadOnlySpan<byte> glUniform4iFunctionName => "glUniform4i"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> Uniform4i;
    internal static ReadOnlySpan<byte> glUniform1fvFunctionName => "glUniform1fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> Uniform1fv;
    internal static ReadOnlySpan<byte> glUniform2fvFunctionName => "glUniform2fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> Uniform2fv;
    internal static ReadOnlySpan<byte> glUniform3fvFunctionName => "glUniform3fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> Uniform3fv;
    internal static ReadOnlySpan<byte> glUniform4fvFunctionName => "glUniform4fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> Uniform4fv;
    internal static ReadOnlySpan<byte> glUniform1ivFunctionName => "glUniform1iv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> Uniform1iv;
    internal static ReadOnlySpan<byte> glUniform2ivFunctionName => "glUniform2iv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> Uniform2iv;
    internal static ReadOnlySpan<byte> glUniform3ivFunctionName => "glUniform3iv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> Uniform3iv;
    internal static ReadOnlySpan<byte> glUniform4ivFunctionName => "glUniform4iv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> Uniform4iv;
    internal static ReadOnlySpan<byte> glUniformMatrix2fvFunctionName => "glUniformMatrix2fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3fvFunctionName => "glUniformMatrix3fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4fvFunctionName => "glUniformMatrix4fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix4fv;
    internal static ReadOnlySpan<byte> glValidateProgramFunctionName => "glValidateProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> ValidateProgram;
    internal static ReadOnlySpan<byte> glVertexAttrib1dFunctionName => "glVertexAttrib1d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void> VertexAttrib1d;
    internal static ReadOnlySpan<byte> glVertexAttrib1dvFunctionName => "glVertexAttrib1dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttrib1dv;
    internal static ReadOnlySpan<byte> glVertexAttrib1fFunctionName => "glVertexAttrib1f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void> VertexAttrib1f;
    internal static ReadOnlySpan<byte> glVertexAttrib1fvFunctionName => "glVertexAttrib1fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> VertexAttrib1fv;
    internal static ReadOnlySpan<byte> glVertexAttrib1sFunctionName => "glVertexAttrib1s"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* void */ void> VertexAttrib1s;
    internal static ReadOnlySpan<byte> glVertexAttrib1svFunctionName => "glVertexAttrib1sv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttrib1sv;
    internal static ReadOnlySpan<byte> glVertexAttrib2dFunctionName => "glVertexAttrib2d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttrib2d;
    internal static ReadOnlySpan<byte> glVertexAttrib2dvFunctionName => "glVertexAttrib2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttrib2dv;
    internal static ReadOnlySpan<byte> glVertexAttrib2fFunctionName => "glVertexAttrib2f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> VertexAttrib2f;
    internal static ReadOnlySpan<byte> glVertexAttrib2fvFunctionName => "glVertexAttrib2fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> VertexAttrib2fv;
    internal static ReadOnlySpan<byte> glVertexAttrib2sFunctionName => "glVertexAttrib2s"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* void */ void> VertexAttrib2s;
    internal static ReadOnlySpan<byte> glVertexAttrib2svFunctionName => "glVertexAttrib2sv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttrib2sv;
    internal static ReadOnlySpan<byte> glVertexAttrib3dFunctionName => "glVertexAttrib3d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttrib3d;
    internal static ReadOnlySpan<byte> glVertexAttrib3dvFunctionName => "glVertexAttrib3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttrib3dv;
    internal static ReadOnlySpan<byte> glVertexAttrib3fFunctionName => "glVertexAttrib3f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> VertexAttrib3f;
    internal static ReadOnlySpan<byte> glVertexAttrib3fvFunctionName => "glVertexAttrib3fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> VertexAttrib3fv;
    internal static ReadOnlySpan<byte> glVertexAttrib3sFunctionName => "glVertexAttrib3s"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> VertexAttrib3s;
    internal static ReadOnlySpan<byte> glVertexAttrib3svFunctionName => "glVertexAttrib3sv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttrib3sv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NbvFunctionName => "glVertexAttrib4Nbv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> VertexAttrib4Nbv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NivFunctionName => "glVertexAttrib4Niv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttrib4Niv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NsvFunctionName => "glVertexAttrib4Nsv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttrib4Nsv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NubFunctionName => "glVertexAttrib4Nub"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> VertexAttrib4Nub;
    internal static ReadOnlySpan<byte> glVertexAttrib4NubvFunctionName => "glVertexAttrib4Nubv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> VertexAttrib4Nubv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NuivFunctionName => "glVertexAttrib4Nuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttrib4Nuiv;
    internal static ReadOnlySpan<byte> glVertexAttrib4NusvFunctionName => "glVertexAttrib4Nusv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> VertexAttrib4Nusv;
    internal static ReadOnlySpan<byte> glVertexAttrib4bvFunctionName => "glVertexAttrib4bv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> VertexAttrib4bv;
    internal static ReadOnlySpan<byte> glVertexAttrib4dFunctionName => "glVertexAttrib4d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttrib4d;
    internal static ReadOnlySpan<byte> glVertexAttrib4dvFunctionName => "glVertexAttrib4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttrib4dv;
    internal static ReadOnlySpan<byte> glVertexAttrib4fFunctionName => "glVertexAttrib4f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> VertexAttrib4f;
    internal static ReadOnlySpan<byte> glVertexAttrib4fvFunctionName => "glVertexAttrib4fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> VertexAttrib4fv;
    internal static ReadOnlySpan<byte> glVertexAttrib4ivFunctionName => "glVertexAttrib4iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttrib4iv;
    internal static ReadOnlySpan<byte> glVertexAttrib4sFunctionName => "glVertexAttrib4s"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* GLshort */ short, /* void */ void> VertexAttrib4s;
    internal static ReadOnlySpan<byte> glVertexAttrib4svFunctionName => "glVertexAttrib4sv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttrib4sv;
    internal static ReadOnlySpan<byte> glVertexAttrib4ubvFunctionName => "glVertexAttrib4ubv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> VertexAttrib4ubv;
    internal static ReadOnlySpan<byte> glVertexAttrib4uivFunctionName => "glVertexAttrib4uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttrib4uiv;
    internal static ReadOnlySpan<byte> glVertexAttrib4usvFunctionName => "glVertexAttrib4usv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> VertexAttrib4usv;
    internal static ReadOnlySpan<byte> glVertexAttribPointerFunctionName => "glVertexAttribPointer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> VertexAttribPointer;
    internal static ReadOnlySpan<byte> glUniformMatrix2x3fvFunctionName => "glUniformMatrix2x3fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x2fvFunctionName => "glUniformMatrix3x2fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x4fvFunctionName => "glUniformMatrix2x4fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x2fvFunctionName => "glUniformMatrix4x2fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x4fvFunctionName => "glUniformMatrix3x4fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x3fvFunctionName => "glUniformMatrix4x3fv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> UniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glColorMaskiFunctionName => "glColorMaski"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> ColorMaski;
    internal static ReadOnlySpan<byte> glGetBooleani_vFunctionName => "glGetBooleani_v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void> GetBooleani_v;
    internal static ReadOnlySpan<byte> glGetIntegeri_vFunctionName => "glGetIntegeri_v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void> GetIntegeri_v;
    internal static ReadOnlySpan<byte> glEnableiFunctionName => "glEnablei"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> Enablei;
    internal static ReadOnlySpan<byte> glDisableiFunctionName => "glDisablei"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> Disablei;
    internal static ReadOnlySpan<byte> glIsEnablediFunctionName => "glIsEnabledi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int> IsEnabledi;
    internal static ReadOnlySpan<byte> glBeginTransformFeedbackFunctionName => "glBeginTransformFeedback"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> BeginTransformFeedback;
    internal static ReadOnlySpan<byte> glEndTransformFeedbackFunctionName => "glEndTransformFeedback"u8;
    public readonly delegate* unmanaged</* void */ void> EndTransformFeedback;
    internal static ReadOnlySpan<byte> glBindBufferRangeFunctionName => "glBindBufferRange"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> BindBufferRange;
    internal static ReadOnlySpan<byte> glBindBufferBaseFunctionName => "glBindBufferBase"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> BindBufferBase;
    internal static ReadOnlySpan<byte> glTransformFeedbackVaryingsFunctionName => "glTransformFeedbackVaryings"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLenum */ int, /* void */ void> TransformFeedbackVaryings;
    internal static ReadOnlySpan<byte> glGetTransformFeedbackVaryingFunctionName => "glGetTransformFeedbackVarying"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void> GetTransformFeedbackVarying;
    internal static ReadOnlySpan<byte> glClampColorFunctionName => "glClampColor"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> ClampColor;
    internal static ReadOnlySpan<byte> glBeginConditionalRenderFunctionName => "glBeginConditionalRender"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> BeginConditionalRender;
    internal static ReadOnlySpan<byte> glEndConditionalRenderFunctionName => "glEndConditionalRender"u8;
    public readonly delegate* unmanaged</* void */ void> EndConditionalRender;
    internal static ReadOnlySpan<byte> glVertexAttribIPointerFunctionName => "glVertexAttribIPointer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> VertexAttribIPointer;
    internal static ReadOnlySpan<byte> glGetVertexAttribIivFunctionName => "glGetVertexAttribIiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetVertexAttribIiv;
    internal static ReadOnlySpan<byte> glGetVertexAttribIuivFunctionName => "glGetVertexAttribIuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetVertexAttribIuiv;
    internal static ReadOnlySpan<byte> glVertexAttribI1iFunctionName => "glVertexAttribI1i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void> VertexAttribI1i;
    internal static ReadOnlySpan<byte> glVertexAttribI2iFunctionName => "glVertexAttribI2i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> VertexAttribI2i;
    internal static ReadOnlySpan<byte> glVertexAttribI3iFunctionName => "glVertexAttribI3i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> VertexAttribI3i;
    internal static ReadOnlySpan<byte> glVertexAttribI4iFunctionName => "glVertexAttribI4i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> VertexAttribI4i;
    internal static ReadOnlySpan<byte> glVertexAttribI1uiFunctionName => "glVertexAttribI1ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribI1ui;
    internal static ReadOnlySpan<byte> glVertexAttribI2uiFunctionName => "glVertexAttribI2ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribI2ui;
    internal static ReadOnlySpan<byte> glVertexAttribI3uiFunctionName => "glVertexAttribI3ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribI3ui;
    internal static ReadOnlySpan<byte> glVertexAttribI4uiFunctionName => "glVertexAttribI4ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribI4ui;
    internal static ReadOnlySpan<byte> glVertexAttribI1ivFunctionName => "glVertexAttribI1iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttribI1iv;
    internal static ReadOnlySpan<byte> glVertexAttribI2ivFunctionName => "glVertexAttribI2iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttribI2iv;
    internal static ReadOnlySpan<byte> glVertexAttribI3ivFunctionName => "glVertexAttribI3iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttribI3iv;
    internal static ReadOnlySpan<byte> glVertexAttribI4ivFunctionName => "glVertexAttribI4iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> VertexAttribI4iv;
    internal static ReadOnlySpan<byte> glVertexAttribI1uivFunctionName => "glVertexAttribI1uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttribI1uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI2uivFunctionName => "glVertexAttribI2uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttribI2uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI3uivFunctionName => "glVertexAttribI3uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttribI3uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI4uivFunctionName => "glVertexAttribI4uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void> VertexAttribI4uiv;
    internal static ReadOnlySpan<byte> glVertexAttribI4bvFunctionName => "glVertexAttribI4bv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLbyte */ byte*, /* void */ void> VertexAttribI4bv;
    internal static ReadOnlySpan<byte> glVertexAttribI4svFunctionName => "glVertexAttribI4sv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLshort */ short*, /* void */ void> VertexAttribI4sv;
    internal static ReadOnlySpan<byte> glVertexAttribI4ubvFunctionName => "glVertexAttribI4ubv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLubyte */ byte*, /* void */ void> VertexAttribI4ubv;
    internal static ReadOnlySpan<byte> glVertexAttribI4usvFunctionName => "glVertexAttribI4usv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLushort */ ushort*, /* void */ void> VertexAttribI4usv;
    internal static ReadOnlySpan<byte> glGetUniformuivFunctionName => "glGetUniformuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void> GetUniformuiv;
    internal static ReadOnlySpan<byte> glBindFragDataLocationFunctionName => "glBindFragDataLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> BindFragDataLocation;
    internal static ReadOnlySpan<byte> glGetFragDataLocationFunctionName => "glGetFragDataLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> GetFragDataLocation;
    internal static ReadOnlySpan<byte> glUniform1uiFunctionName => "glUniform1ui"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void> Uniform1ui;
    internal static ReadOnlySpan<byte> glUniform2uiFunctionName => "glUniform2ui"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> Uniform2ui;
    internal static ReadOnlySpan<byte> glUniform3uiFunctionName => "glUniform3ui"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> Uniform3ui;
    internal static ReadOnlySpan<byte> glUniform4uiFunctionName => "glUniform4ui"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> Uniform4ui;
    internal static ReadOnlySpan<byte> glUniform1uivFunctionName => "glUniform1uiv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> Uniform1uiv;
    internal static ReadOnlySpan<byte> glUniform2uivFunctionName => "glUniform2uiv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> Uniform2uiv;
    internal static ReadOnlySpan<byte> glUniform3uivFunctionName => "glUniform3uiv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> Uniform3uiv;
    internal static ReadOnlySpan<byte> glUniform4uivFunctionName => "glUniform4uiv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> Uniform4uiv;
    internal static ReadOnlySpan<byte> glTexParameterIivFunctionName => "glTexParameterIiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexParameterIiv;
    internal static ReadOnlySpan<byte> glTexParameterIuivFunctionName => "glTexParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> TexParameterIuiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIivFunctionName => "glGetTexParameterIiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexParameterIiv;
    internal static ReadOnlySpan<byte> glGetTexParameterIuivFunctionName => "glGetTexParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetTexParameterIuiv;
    internal static ReadOnlySpan<byte> glClearBufferivFunctionName => "glClearBufferiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void> ClearBufferiv;
    internal static ReadOnlySpan<byte> glClearBufferuivFunctionName => "glClearBufferuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> ClearBufferuiv;
    internal static ReadOnlySpan<byte> glClearBufferfvFunctionName => "glClearBufferfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> ClearBufferfv;
    internal static ReadOnlySpan<byte> glClearBufferfiFunctionName => "glClearBufferfi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void> ClearBufferfi;
    internal static ReadOnlySpan<byte> glGetStringiFunctionName => "glGetStringi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*> GetStringi;
    internal static ReadOnlySpan<byte> glIsRenderbufferFunctionName => "glIsRenderbuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsRenderbuffer;
    internal static ReadOnlySpan<byte> glBindRenderbufferFunctionName => "glBindRenderbuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindRenderbuffer;
    internal static ReadOnlySpan<byte> glDeleteRenderbuffersFunctionName => "glDeleteRenderbuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteRenderbuffers;
    internal static ReadOnlySpan<byte> glGenRenderbuffersFunctionName => "glGenRenderbuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenRenderbuffers;
    internal static ReadOnlySpan<byte> glRenderbufferStorageFunctionName => "glRenderbufferStorage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> RenderbufferStorage;
    internal static ReadOnlySpan<byte> glGetRenderbufferParameterivFunctionName => "glGetRenderbufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetRenderbufferParameteriv;
    internal static ReadOnlySpan<byte> glIsFramebufferFunctionName => "glIsFramebuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsFramebuffer;
    internal static ReadOnlySpan<byte> glBindFramebufferFunctionName => "glBindFramebuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindFramebuffer;
    internal static ReadOnlySpan<byte> glDeleteFramebuffersFunctionName => "glDeleteFramebuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteFramebuffers;
    internal static ReadOnlySpan<byte> glGenFramebuffersFunctionName => "glGenFramebuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenFramebuffers;
    internal static ReadOnlySpan<byte> glCheckFramebufferStatusFunctionName => "glCheckFramebufferStatus"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int> CheckFramebufferStatus;
    internal static ReadOnlySpan<byte> glFramebufferTexture1DFunctionName => "glFramebufferTexture1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> FramebufferTexture1D;
    internal static ReadOnlySpan<byte> glFramebufferTexture2DFunctionName => "glFramebufferTexture2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> FramebufferTexture2D;
    internal static ReadOnlySpan<byte> glFramebufferTexture3DFunctionName => "glFramebufferTexture3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> FramebufferTexture3D;
    internal static ReadOnlySpan<byte> glFramebufferRenderbufferFunctionName => "glFramebufferRenderbuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> FramebufferRenderbuffer;
    internal static ReadOnlySpan<byte> glGetFramebufferAttachmentParameterivFunctionName => "glGetFramebufferAttachmentParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetFramebufferAttachmentParameteriv;
    internal static ReadOnlySpan<byte> glGenerateMipmapFunctionName => "glGenerateMipmap"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> GenerateMipmap;
    internal static ReadOnlySpan<byte> glBlitFramebufferFunctionName => "glBlitFramebuffer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void> BlitFramebuffer;
    internal static ReadOnlySpan<byte> glRenderbufferStorageMultisampleFunctionName => "glRenderbufferStorageMultisample"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> RenderbufferStorageMultisample;
    internal static ReadOnlySpan<byte> glFramebufferTextureLayerFunctionName => "glFramebufferTextureLayer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> FramebufferTextureLayer;
    internal static ReadOnlySpan<byte> glMapBufferRangeFunctionName => "glMapBufferRange"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*> MapBufferRange;
    internal static ReadOnlySpan<byte> glFlushMappedBufferRangeFunctionName => "glFlushMappedBufferRange"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> FlushMappedBufferRange;
    internal static ReadOnlySpan<byte> glBindVertexArrayFunctionName => "glBindVertexArray"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> BindVertexArray;
    internal static ReadOnlySpan<byte> glDeleteVertexArraysFunctionName => "glDeleteVertexArrays"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteVertexArrays;
    internal static ReadOnlySpan<byte> glGenVertexArraysFunctionName => "glGenVertexArrays"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenVertexArrays;
    internal static ReadOnlySpan<byte> glIsVertexArrayFunctionName => "glIsVertexArray"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsVertexArray;
    internal static ReadOnlySpan<byte> glDrawArraysInstancedFunctionName => "glDrawArraysInstanced"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> DrawArraysInstanced;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedFunctionName => "glDrawElementsInstanced"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> DrawElementsInstanced;
    internal static ReadOnlySpan<byte> glTexBufferFunctionName => "glTexBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> TexBuffer;
    internal static ReadOnlySpan<byte> glPrimitiveRestartIndexFunctionName => "glPrimitiveRestartIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> PrimitiveRestartIndex;
    internal static ReadOnlySpan<byte> glCopyBufferSubDataFunctionName => "glCopyBufferSubData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> CopyBufferSubData;
    internal static ReadOnlySpan<byte> glGetUniformIndicesFunctionName => "glGetUniformIndices"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint*, /* void */ void> GetUniformIndices;
    internal static ReadOnlySpan<byte> glGetActiveUniformsivFunctionName => "glGetActiveUniformsiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetActiveUniformsiv;
    internal static ReadOnlySpan<byte> glGetActiveUniformNameFunctionName => "glGetActiveUniformName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetActiveUniformName;
    internal static ReadOnlySpan<byte> glGetUniformBlockIndexFunctionName => "glGetUniformBlockIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint> GetUniformBlockIndex;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockivFunctionName => "glGetActiveUniformBlockiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetActiveUniformBlockiv;
    internal static ReadOnlySpan<byte> glGetActiveUniformBlockNameFunctionName => "glGetActiveUniformBlockName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetActiveUniformBlockName;
    internal static ReadOnlySpan<byte> glUniformBlockBindingFunctionName => "glUniformBlockBinding"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> UniformBlockBinding;
    internal static ReadOnlySpan<byte> glDrawElementsBaseVertexFunctionName => "glDrawElementsBaseVertex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> DrawElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawRangeElementsBaseVertexFunctionName => "glDrawRangeElementsBaseVertex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void> DrawRangeElementsBaseVertex;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseVertexFunctionName => "glDrawElementsInstancedBaseVertex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void> DrawElementsInstancedBaseVertex;
    internal static ReadOnlySpan<byte> glMultiDrawElementsBaseVertexFunctionName => "glMultiDrawElementsBaseVertex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int*, /* GLenum */ int, /* void */ void**, /* GLsizei */ int, /* GLint */ int*, /* void */ void> MultiDrawElementsBaseVertex;
    internal static ReadOnlySpan<byte> glProvokingVertexFunctionName => "glProvokingVertex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ProvokingVertex;
    internal static ReadOnlySpan<byte> glFenceSyncFunctionName => "glFenceSync"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*> FenceSync;
    internal static ReadOnlySpan<byte> glIsSyncFunctionName => "glIsSync"u8;
    public readonly delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int> IsSync;
    internal static ReadOnlySpan<byte> glDeleteSyncFunctionName => "glDeleteSync"u8;
    public readonly delegate* unmanaged</* GLsync */ void*, /* void */ void> DeleteSync;
    internal static ReadOnlySpan<byte> glClientWaitSyncFunctionName => "glClientWaitSync"u8;
    public readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int> ClientWaitSync;
    internal static ReadOnlySpan<byte> glWaitSyncFunctionName => "glWaitSync"u8;
    public readonly delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void> WaitSync;
    internal static ReadOnlySpan<byte> glGetInteger64vFunctionName => "glGetInteger64v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void> GetInteger64v;
    internal static ReadOnlySpan<byte> glGetSyncivFunctionName => "glGetSynciv"u8;
    public readonly delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> GetSynciv;
    internal static ReadOnlySpan<byte> glGetInteger64i_vFunctionName => "glGetInteger64i_v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void> GetInteger64i_v;
    internal static ReadOnlySpan<byte> glGetBufferParameteri64vFunctionName => "glGetBufferParameteri64v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> GetBufferParameteri64v;
    internal static ReadOnlySpan<byte> glFramebufferTextureFunctionName => "glFramebufferTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> FramebufferTexture;
    internal static ReadOnlySpan<byte> glTexImage2DMultisampleFunctionName => "glTexImage2DMultisample"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TexImage2DMultisample;
    internal static ReadOnlySpan<byte> glTexImage3DMultisampleFunctionName => "glTexImage3DMultisample"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TexImage3DMultisample;
    internal static ReadOnlySpan<byte> glGetMultisamplefvFunctionName => "glGetMultisamplefv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void> GetMultisamplefv;
    internal static ReadOnlySpan<byte> glSampleMaskiFunctionName => "glSampleMaski"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void> SampleMaski;
    internal static ReadOnlySpan<byte> glBindFragDataLocationIndexedFunctionName => "glBindFragDataLocationIndexed"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void> BindFragDataLocationIndexed;
    internal static ReadOnlySpan<byte> glGetFragDataIndexFunctionName => "glGetFragDataIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int> GetFragDataIndex;
    internal static ReadOnlySpan<byte> glGenSamplersFunctionName => "glGenSamplers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenSamplers;
    internal static ReadOnlySpan<byte> glDeleteSamplersFunctionName => "glDeleteSamplers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteSamplers;
    internal static ReadOnlySpan<byte> glIsSamplerFunctionName => "glIsSampler"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsSampler;
    internal static ReadOnlySpan<byte> glBindSamplerFunctionName => "glBindSampler"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> BindSampler;
    internal static ReadOnlySpan<byte> glSamplerParameteriFunctionName => "glSamplerParameteri"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> SamplerParameteri;
    internal static ReadOnlySpan<byte> glSamplerParameterivFunctionName => "glSamplerParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> SamplerParameteriv;
    internal static ReadOnlySpan<byte> glSamplerParameterfFunctionName => "glSamplerParameterf"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void> SamplerParameterf;
    internal static ReadOnlySpan<byte> glSamplerParameterfvFunctionName => "glSamplerParameterfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> SamplerParameterfv;
    internal static ReadOnlySpan<byte> glSamplerParameterIivFunctionName => "glSamplerParameterIiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> SamplerParameterIiv;
    internal static ReadOnlySpan<byte> glSamplerParameterIuivFunctionName => "glSamplerParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> SamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterivFunctionName => "glGetSamplerParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetSamplerParameteriv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIivFunctionName => "glGetSamplerParameterIiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetSamplerParameterIiv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterfvFunctionName => "glGetSamplerParameterfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetSamplerParameterfv;
    internal static ReadOnlySpan<byte> glGetSamplerParameterIuivFunctionName => "glGetSamplerParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetSamplerParameterIuiv;
    internal static ReadOnlySpan<byte> glQueryCounterFunctionName => "glQueryCounter"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> QueryCounter;
    internal static ReadOnlySpan<byte> glGetQueryObjecti64vFunctionName => "glGetQueryObjecti64v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> GetQueryObjecti64v;
    internal static ReadOnlySpan<byte> glGetQueryObjectui64vFunctionName => "glGetQueryObjectui64v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint64 */ ulong*, /* void */ void> GetQueryObjectui64v;
    internal static ReadOnlySpan<byte> glVertexAttribDivisorFunctionName => "glVertexAttribDivisor"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribDivisor;
    internal static ReadOnlySpan<byte> glVertexAttribP1uiFunctionName => "glVertexAttribP1ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexAttribP1ui;
    internal static ReadOnlySpan<byte> glVertexAttribP1uivFunctionName => "glVertexAttribP1uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> VertexAttribP1uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP2uiFunctionName => "glVertexAttribP2ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexAttribP2ui;
    internal static ReadOnlySpan<byte> glVertexAttribP2uivFunctionName => "glVertexAttribP2uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> VertexAttribP2uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP3uiFunctionName => "glVertexAttribP3ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexAttribP3ui;
    internal static ReadOnlySpan<byte> glVertexAttribP3uivFunctionName => "glVertexAttribP3uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> VertexAttribP3uiv;
    internal static ReadOnlySpan<byte> glVertexAttribP4uiFunctionName => "glVertexAttribP4ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexAttribP4ui;
    internal static ReadOnlySpan<byte> glVertexAttribP4uivFunctionName => "glVertexAttribP4uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint*, /* void */ void> VertexAttribP4uiv;
    internal static ReadOnlySpan<byte> glVertexP2uiFunctionName => "glVertexP2ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexP2ui;
    internal static ReadOnlySpan<byte> glVertexP2uivFunctionName => "glVertexP2uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> VertexP2uiv;
    internal static ReadOnlySpan<byte> glVertexP3uiFunctionName => "glVertexP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexP3ui;
    internal static ReadOnlySpan<byte> glVertexP3uivFunctionName => "glVertexP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> VertexP3uiv;
    internal static ReadOnlySpan<byte> glVertexP4uiFunctionName => "glVertexP4ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexP4ui;
    internal static ReadOnlySpan<byte> glVertexP4uivFunctionName => "glVertexP4uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> VertexP4uiv;
    internal static ReadOnlySpan<byte> glTexCoordP1uiFunctionName => "glTexCoordP1ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> TexCoordP1ui;
    internal static ReadOnlySpan<byte> glTexCoordP1uivFunctionName => "glTexCoordP1uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> TexCoordP1uiv;
    internal static ReadOnlySpan<byte> glTexCoordP2uiFunctionName => "glTexCoordP2ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> TexCoordP2ui;
    internal static ReadOnlySpan<byte> glTexCoordP2uivFunctionName => "glTexCoordP2uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> TexCoordP2uiv;
    internal static ReadOnlySpan<byte> glTexCoordP3uiFunctionName => "glTexCoordP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> TexCoordP3ui;
    internal static ReadOnlySpan<byte> glTexCoordP3uivFunctionName => "glTexCoordP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> TexCoordP3uiv;
    internal static ReadOnlySpan<byte> glTexCoordP4uiFunctionName => "glTexCoordP4ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> TexCoordP4ui;
    internal static ReadOnlySpan<byte> glTexCoordP4uivFunctionName => "glTexCoordP4uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> TexCoordP4uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP1uiFunctionName => "glMultiTexCoordP1ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> MultiTexCoordP1ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP1uivFunctionName => "glMultiTexCoordP1uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> MultiTexCoordP1uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP2uiFunctionName => "glMultiTexCoordP2ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> MultiTexCoordP2ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP2uivFunctionName => "glMultiTexCoordP2uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> MultiTexCoordP2uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP3uiFunctionName => "glMultiTexCoordP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> MultiTexCoordP3ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP3uivFunctionName => "glMultiTexCoordP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> MultiTexCoordP3uiv;
    internal static ReadOnlySpan<byte> glMultiTexCoordP4uiFunctionName => "glMultiTexCoordP4ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> MultiTexCoordP4ui;
    internal static ReadOnlySpan<byte> glMultiTexCoordP4uivFunctionName => "glMultiTexCoordP4uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> MultiTexCoordP4uiv;
    internal static ReadOnlySpan<byte> glNormalP3uiFunctionName => "glNormalP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> NormalP3ui;
    internal static ReadOnlySpan<byte> glNormalP3uivFunctionName => "glNormalP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> NormalP3uiv;
    internal static ReadOnlySpan<byte> glColorP3uiFunctionName => "glColorP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> ColorP3ui;
    internal static ReadOnlySpan<byte> glColorP3uivFunctionName => "glColorP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> ColorP3uiv;
    internal static ReadOnlySpan<byte> glColorP4uiFunctionName => "glColorP4ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> ColorP4ui;
    internal static ReadOnlySpan<byte> glColorP4uivFunctionName => "glColorP4uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> ColorP4uiv;
    internal static ReadOnlySpan<byte> glSecondaryColorP3uiFunctionName => "glSecondaryColorP3ui"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> SecondaryColorP3ui;
    internal static ReadOnlySpan<byte> glSecondaryColorP3uivFunctionName => "glSecondaryColorP3uiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint*, /* void */ void> SecondaryColorP3uiv;
    internal static ReadOnlySpan<byte> glMinSampleShadingFunctionName => "glMinSampleShading"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> MinSampleShading;
    internal static ReadOnlySpan<byte> glBlendEquationiFunctionName => "glBlendEquationi"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> BlendEquationi;
    internal static ReadOnlySpan<byte> glBlendEquationSeparateiFunctionName => "glBlendEquationSeparatei"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> BlendEquationSeparatei;
    internal static ReadOnlySpan<byte> glBlendFunciFunctionName => "glBlendFunci"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void> BlendFunci;
    internal static ReadOnlySpan<byte> glBlendFuncSeparateiFunctionName => "glBlendFuncSeparatei"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> BlendFuncSeparatei;
    internal static ReadOnlySpan<byte> glDrawArraysIndirectFunctionName => "glDrawArraysIndirect"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void> DrawArraysIndirect;
    internal static ReadOnlySpan<byte> glDrawElementsIndirectFunctionName => "glDrawElementsIndirect"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> DrawElementsIndirect;
    internal static ReadOnlySpan<byte> glUniform1dFunctionName => "glUniform1d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* void */ void> Uniform1d;
    internal static ReadOnlySpan<byte> glUniform2dFunctionName => "glUniform2d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Uniform2d;
    internal static ReadOnlySpan<byte> glUniform3dFunctionName => "glUniform3d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Uniform3d;
    internal static ReadOnlySpan<byte> glUniform4dFunctionName => "glUniform4d"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> Uniform4d;
    internal static ReadOnlySpan<byte> glUniform1dvFunctionName => "glUniform1dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> Uniform1dv;
    internal static ReadOnlySpan<byte> glUniform2dvFunctionName => "glUniform2dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> Uniform2dv;
    internal static ReadOnlySpan<byte> glUniform3dvFunctionName => "glUniform3dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> Uniform3dv;
    internal static ReadOnlySpan<byte> glUniform4dvFunctionName => "glUniform4dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> Uniform4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2dvFunctionName => "glUniformMatrix2dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3dvFunctionName => "glUniformMatrix3dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix3dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4dvFunctionName => "glUniformMatrix4dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x3dvFunctionName => "glUniformMatrix2x3dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix2x3dv;
    internal static ReadOnlySpan<byte> glUniformMatrix2x4dvFunctionName => "glUniformMatrix2x4dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix2x4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x2dvFunctionName => "glUniformMatrix3x2dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix3x2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix3x4dvFunctionName => "glUniformMatrix3x4dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix3x4dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x2dvFunctionName => "glUniformMatrix4x2dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix4x2dv;
    internal static ReadOnlySpan<byte> glUniformMatrix4x3dvFunctionName => "glUniformMatrix4x3dv"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> UniformMatrix4x3dv;
    internal static ReadOnlySpan<byte> glGetUniformdvFunctionName => "glGetUniformdv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double*, /* void */ void> GetUniformdv;
    internal static ReadOnlySpan<byte> glGetSubroutineUniformLocationFunctionName => "glGetSubroutineUniformLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> GetSubroutineUniformLocation;
    internal static ReadOnlySpan<byte> glGetSubroutineIndexFunctionName => "glGetSubroutineIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint> GetSubroutineIndex;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineUniformivFunctionName => "glGetActiveSubroutineUniformiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetActiveSubroutineUniformiv;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineUniformNameFunctionName => "glGetActiveSubroutineUniformName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetActiveSubroutineUniformName;
    internal static ReadOnlySpan<byte> glGetActiveSubroutineNameFunctionName => "glGetActiveSubroutineName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetActiveSubroutineName;
    internal static ReadOnlySpan<byte> glUniformSubroutinesuivFunctionName => "glUniformSubroutinesuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> UniformSubroutinesuiv;
    internal static ReadOnlySpan<byte> glGetUniformSubroutineuivFunctionName => "glGetUniformSubroutineuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> GetUniformSubroutineuiv;
    internal static ReadOnlySpan<byte> glGetProgramStageivFunctionName => "glGetProgramStageiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetProgramStageiv;
    internal static ReadOnlySpan<byte> glPatchParameteriFunctionName => "glPatchParameteri"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> PatchParameteri;
    internal static ReadOnlySpan<byte> glPatchParameterfvFunctionName => "glPatchParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> PatchParameterfv;
    internal static ReadOnlySpan<byte> glBindTransformFeedbackFunctionName => "glBindTransformFeedback"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindTransformFeedback;
    internal static ReadOnlySpan<byte> glDeleteTransformFeedbacksFunctionName => "glDeleteTransformFeedbacks"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteTransformFeedbacks;
    internal static ReadOnlySpan<byte> glGenTransformFeedbacksFunctionName => "glGenTransformFeedbacks"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenTransformFeedbacks;
    internal static ReadOnlySpan<byte> glIsTransformFeedbackFunctionName => "glIsTransformFeedback"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsTransformFeedback;
    internal static ReadOnlySpan<byte> glPauseTransformFeedbackFunctionName => "glPauseTransformFeedback"u8;
    public readonly delegate* unmanaged</* void */ void> PauseTransformFeedback;
    internal static ReadOnlySpan<byte> glResumeTransformFeedbackFunctionName => "glResumeTransformFeedback"u8;
    public readonly delegate* unmanaged</* void */ void> ResumeTransformFeedback;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackFunctionName => "glDrawTransformFeedback"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> DrawTransformFeedback;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackStreamFunctionName => "glDrawTransformFeedbackStream"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> DrawTransformFeedbackStream;
    internal static ReadOnlySpan<byte> glBeginQueryIndexedFunctionName => "glBeginQueryIndexed"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> BeginQueryIndexed;
    internal static ReadOnlySpan<byte> glEndQueryIndexedFunctionName => "glEndQueryIndexed"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> EndQueryIndexed;
    internal static ReadOnlySpan<byte> glGetQueryIndexedivFunctionName => "glGetQueryIndexediv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetQueryIndexediv;
    internal static ReadOnlySpan<byte> glReleaseShaderCompilerFunctionName => "glReleaseShaderCompiler"u8;
    public readonly delegate* unmanaged</* void */ void> ReleaseShaderCompiler;
    internal static ReadOnlySpan<byte> glShaderBinaryFunctionName => "glShaderBinary"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> ShaderBinary;
    internal static ReadOnlySpan<byte> glGetShaderPrecisionFormatFunctionName => "glGetShaderPrecisionFormat"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void> GetShaderPrecisionFormat;
    internal static ReadOnlySpan<byte> glDepthRangefFunctionName => "glDepthRangef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> DepthRangef;
    internal static ReadOnlySpan<byte> glClearDepthfFunctionName => "glClearDepthf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> ClearDepthf;
    internal static ReadOnlySpan<byte> glGetProgramBinaryFunctionName => "glGetProgramBinary"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void> GetProgramBinary;
    internal static ReadOnlySpan<byte> glProgramBinaryFunctionName => "glProgramBinary"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void> ProgramBinary;
    internal static ReadOnlySpan<byte> glProgramParameteriFunctionName => "glProgramParameteri"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> ProgramParameteri;
    internal static ReadOnlySpan<byte> glUseProgramStagesFunctionName => "glUseProgramStages"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void> UseProgramStages;
    internal static ReadOnlySpan<byte> glActiveShaderProgramFunctionName => "glActiveShaderProgram"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> ActiveShaderProgram;
    internal static ReadOnlySpan<byte> glCreateShaderProgramvFunctionName => "glCreateShaderProgramv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint> CreateShaderProgramv;
    internal static ReadOnlySpan<byte> glBindProgramPipelineFunctionName => "glBindProgramPipeline"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> BindProgramPipeline;
    internal static ReadOnlySpan<byte> glDeleteProgramPipelinesFunctionName => "glDeleteProgramPipelines"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteProgramPipelines;
    internal static ReadOnlySpan<byte> glGenProgramPipelinesFunctionName => "glGenProgramPipelines"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenProgramPipelines;
    internal static ReadOnlySpan<byte> glIsProgramPipelineFunctionName => "glIsProgramPipeline"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineivFunctionName => "glGetProgramPipelineiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetProgramPipelineiv;
    internal static ReadOnlySpan<byte> glProgramUniform1iFunctionName => "glProgramUniform1i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> ProgramUniform1i;
    internal static ReadOnlySpan<byte> glProgramUniform1ivFunctionName => "glProgramUniform1iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> ProgramUniform1iv;
    internal static ReadOnlySpan<byte> glProgramUniform1fFunctionName => "glProgramUniform1f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void> ProgramUniform1f;
    internal static ReadOnlySpan<byte> glProgramUniform1fvFunctionName => "glProgramUniform1fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> ProgramUniform1fv;
    internal static ReadOnlySpan<byte> glProgramUniform1dFunctionName => "glProgramUniform1d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* void */ void> ProgramUniform1d;
    internal static ReadOnlySpan<byte> glProgramUniform1dvFunctionName => "glProgramUniform1dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> ProgramUniform1dv;
    internal static ReadOnlySpan<byte> glProgramUniform1uiFunctionName => "glProgramUniform1ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void> ProgramUniform1ui;
    internal static ReadOnlySpan<byte> glProgramUniform1uivFunctionName => "glProgramUniform1uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> ProgramUniform1uiv;
    internal static ReadOnlySpan<byte> glProgramUniform2iFunctionName => "glProgramUniform2i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> ProgramUniform2i;
    internal static ReadOnlySpan<byte> glProgramUniform2ivFunctionName => "glProgramUniform2iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> ProgramUniform2iv;
    internal static ReadOnlySpan<byte> glProgramUniform2fFunctionName => "glProgramUniform2f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ProgramUniform2f;
    internal static ReadOnlySpan<byte> glProgramUniform2fvFunctionName => "glProgramUniform2fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> ProgramUniform2fv;
    internal static ReadOnlySpan<byte> glProgramUniform2dFunctionName => "glProgramUniform2d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> ProgramUniform2d;
    internal static ReadOnlySpan<byte> glProgramUniform2dvFunctionName => "glProgramUniform2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> ProgramUniform2dv;
    internal static ReadOnlySpan<byte> glProgramUniform2uiFunctionName => "glProgramUniform2ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> ProgramUniform2ui;
    internal static ReadOnlySpan<byte> glProgramUniform2uivFunctionName => "glProgramUniform2uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> ProgramUniform2uiv;
    internal static ReadOnlySpan<byte> glProgramUniform3iFunctionName => "glProgramUniform3i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> ProgramUniform3i;
    internal static ReadOnlySpan<byte> glProgramUniform3ivFunctionName => "glProgramUniform3iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> ProgramUniform3iv;
    internal static ReadOnlySpan<byte> glProgramUniform3fFunctionName => "glProgramUniform3f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ProgramUniform3f;
    internal static ReadOnlySpan<byte> glProgramUniform3fvFunctionName => "glProgramUniform3fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> ProgramUniform3fv;
    internal static ReadOnlySpan<byte> glProgramUniform3dFunctionName => "glProgramUniform3d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> ProgramUniform3d;
    internal static ReadOnlySpan<byte> glProgramUniform3dvFunctionName => "glProgramUniform3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> ProgramUniform3dv;
    internal static ReadOnlySpan<byte> glProgramUniform3uiFunctionName => "glProgramUniform3ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> ProgramUniform3ui;
    internal static ReadOnlySpan<byte> glProgramUniform3uivFunctionName => "glProgramUniform3uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> ProgramUniform3uiv;
    internal static ReadOnlySpan<byte> glProgramUniform4iFunctionName => "glProgramUniform4i"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void> ProgramUniform4i;
    internal static ReadOnlySpan<byte> glProgramUniform4ivFunctionName => "glProgramUniform4iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> ProgramUniform4iv;
    internal static ReadOnlySpan<byte> glProgramUniform4fFunctionName => "glProgramUniform4f"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ProgramUniform4f;
    internal static ReadOnlySpan<byte> glProgramUniform4fvFunctionName => "glProgramUniform4fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> ProgramUniform4fv;
    internal static ReadOnlySpan<byte> glProgramUniform4dFunctionName => "glProgramUniform4d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> ProgramUniform4d;
    internal static ReadOnlySpan<byte> glProgramUniform4dvFunctionName => "glProgramUniform4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> ProgramUniform4dv;
    internal static ReadOnlySpan<byte> glProgramUniform4uiFunctionName => "glProgramUniform4ui"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> ProgramUniform4ui;
    internal static ReadOnlySpan<byte> glProgramUniform4uivFunctionName => "glProgramUniform4uiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> ProgramUniform4uiv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2fvFunctionName => "glProgramUniformMatrix2fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3fvFunctionName => "glProgramUniformMatrix3fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4fvFunctionName => "glProgramUniformMatrix4fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2dvFunctionName => "glProgramUniformMatrix2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3dvFunctionName => "glProgramUniformMatrix3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix3dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4dvFunctionName => "glProgramUniformMatrix4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x3fvFunctionName => "glProgramUniformMatrix2x3fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix2x3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x2fvFunctionName => "glProgramUniformMatrix3x2fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix3x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x4fvFunctionName => "glProgramUniformMatrix2x4fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix2x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x2fvFunctionName => "glProgramUniformMatrix4x2fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix4x2fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x4fvFunctionName => "glProgramUniformMatrix3x4fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix3x4fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x3fvFunctionName => "glProgramUniformMatrix4x3fv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void> ProgramUniformMatrix4x3fv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x3dvFunctionName => "glProgramUniformMatrix2x3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix2x3dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x2dvFunctionName => "glProgramUniformMatrix3x2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix3x2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix2x4dvFunctionName => "glProgramUniformMatrix2x4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix2x4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x2dvFunctionName => "glProgramUniformMatrix4x2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix4x2dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix3x4dvFunctionName => "glProgramUniformMatrix3x4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix3x4dv;
    internal static ReadOnlySpan<byte> glProgramUniformMatrix4x3dvFunctionName => "glProgramUniformMatrix4x3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLdouble */ double*, /* void */ void> ProgramUniformMatrix4x3dv;
    internal static ReadOnlySpan<byte> glValidateProgramPipelineFunctionName => "glValidateProgramPipeline"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> ValidateProgramPipeline;
    internal static ReadOnlySpan<byte> glGetProgramPipelineInfoLogFunctionName => "glGetProgramPipelineInfoLog"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetProgramPipelineInfoLog;
    internal static ReadOnlySpan<byte> glVertexAttribL1dFunctionName => "glVertexAttribL1d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* void */ void> VertexAttribL1d;
    internal static ReadOnlySpan<byte> glVertexAttribL2dFunctionName => "glVertexAttribL2d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttribL2d;
    internal static ReadOnlySpan<byte> glVertexAttribL3dFunctionName => "glVertexAttribL3d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttribL3d;
    internal static ReadOnlySpan<byte> glVertexAttribL4dFunctionName => "glVertexAttribL4d"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> VertexAttribL4d;
    internal static ReadOnlySpan<byte> glVertexAttribL1dvFunctionName => "glVertexAttribL1dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttribL1dv;
    internal static ReadOnlySpan<byte> glVertexAttribL2dvFunctionName => "glVertexAttribL2dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttribL2dv;
    internal static ReadOnlySpan<byte> glVertexAttribL3dvFunctionName => "glVertexAttribL3dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttribL3dv;
    internal static ReadOnlySpan<byte> glVertexAttribL4dvFunctionName => "glVertexAttribL4dv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double*, /* void */ void> VertexAttribL4dv;
    internal static ReadOnlySpan<byte> glVertexAttribLPointerFunctionName => "glVertexAttribLPointer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> VertexAttribLPointer;
    internal static ReadOnlySpan<byte> glGetVertexAttribLdvFunctionName => "glGetVertexAttribLdv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLdouble */ double*, /* void */ void> GetVertexAttribLdv;
    internal static ReadOnlySpan<byte> glViewportArrayvFunctionName => "glViewportArrayv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> ViewportArrayv;
    internal static ReadOnlySpan<byte> glViewportIndexedfFunctionName => "glViewportIndexedf"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ViewportIndexedf;
    internal static ReadOnlySpan<byte> glViewportIndexedfvFunctionName => "glViewportIndexedfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void> ViewportIndexedfv;
    internal static ReadOnlySpan<byte> glScissorArrayvFunctionName => "glScissorArrayv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLint */ int*, /* void */ void> ScissorArrayv;
    internal static ReadOnlySpan<byte> glScissorIndexedFunctionName => "glScissorIndexed"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> ScissorIndexed;
    internal static ReadOnlySpan<byte> glScissorIndexedvFunctionName => "glScissorIndexedv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void> ScissorIndexedv;
    internal static ReadOnlySpan<byte> glDepthRangeArrayvFunctionName => "glDepthRangeArrayv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> DepthRangeArrayv;
    internal static ReadOnlySpan<byte> glDepthRangeIndexedFunctionName => "glDepthRangeIndexed"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLdouble */ double, /* GLdouble */ double, /* void */ void> DepthRangeIndexed;
    internal static ReadOnlySpan<byte> glGetFloati_vFunctionName => "glGetFloati_v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void> GetFloati_v;
    internal static ReadOnlySpan<byte> glGetDoublei_vFunctionName => "glGetDoublei_v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLdouble */ double*, /* void */ void> GetDoublei_v;
    internal static ReadOnlySpan<byte> glDrawArraysInstancedBaseInstanceFunctionName => "glDrawArraysInstancedBaseInstance"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLuint */ uint, /* void */ void> DrawArraysInstancedBaseInstance;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseInstanceFunctionName => "glDrawElementsInstancedBaseInstance"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLuint */ uint, /* void */ void> DrawElementsInstancedBaseInstance;
    internal static ReadOnlySpan<byte> glDrawElementsInstancedBaseVertexBaseInstanceFunctionName => "glDrawElementsInstancedBaseVertexBaseInstance"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> DrawElementsInstancedBaseVertexBaseInstance;
    internal static ReadOnlySpan<byte> glGetInternalformativFunctionName => "glGetInternalformativ"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> GetInternalformativ;
    internal static ReadOnlySpan<byte> glGetActiveAtomicCounterBufferivFunctionName => "glGetActiveAtomicCounterBufferiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetActiveAtomicCounterBufferiv;
    internal static ReadOnlySpan<byte> glBindImageTextureFunctionName => "glBindImageTexture"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> BindImageTexture;
    internal static ReadOnlySpan<byte> glMemoryBarrierFunctionName => "glMemoryBarrier"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> MemoryBarrier;
    internal static ReadOnlySpan<byte> glTexStorage1DFunctionName => "glTexStorage1D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void> TexStorage1D;
    internal static ReadOnlySpan<byte> glTexStorage2DFunctionName => "glTexStorage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> TexStorage2D;
    internal static ReadOnlySpan<byte> glTexStorage3DFunctionName => "glTexStorage3D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> TexStorage3D;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackInstancedFunctionName => "glDrawTransformFeedbackInstanced"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* void */ void> DrawTransformFeedbackInstanced;
    internal static ReadOnlySpan<byte> glDrawTransformFeedbackStreamInstancedFunctionName => "glDrawTransformFeedbackStreamInstanced"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* void */ void> DrawTransformFeedbackStreamInstanced;
    internal static ReadOnlySpan<byte> glClearBufferDataFunctionName => "glClearBufferData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearBufferData;
    internal static ReadOnlySpan<byte> glClearBufferSubDataFunctionName => "glClearBufferSubData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearBufferSubData;
    internal static ReadOnlySpan<byte> glDispatchComputeFunctionName => "glDispatchCompute"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> DispatchCompute;
    internal static ReadOnlySpan<byte> glDispatchComputeIndirectFunctionName => "glDispatchComputeIndirect"u8;
    public readonly delegate* unmanaged</* GLintptr */ nint, /* void */ void> DispatchComputeIndirect;
    internal static ReadOnlySpan<byte> glCopyImageSubDataFunctionName => "glCopyImageSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyImageSubData;
    internal static ReadOnlySpan<byte> glFramebufferParameteriFunctionName => "glFramebufferParameteri"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> FramebufferParameteri;
    internal static ReadOnlySpan<byte> glGetFramebufferParameterivFunctionName => "glGetFramebufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetFramebufferParameteriv;
    internal static ReadOnlySpan<byte> glGetInternalformati64vFunctionName => "glGetInternalformati64v"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint64 */ long*, /* void */ void> GetInternalformati64v;
    internal static ReadOnlySpan<byte> glInvalidateTexSubImageFunctionName => "glInvalidateTexSubImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> InvalidateTexSubImage;
    internal static ReadOnlySpan<byte> glInvalidateTexImageFunctionName => "glInvalidateTexImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* void */ void> InvalidateTexImage;
    internal static ReadOnlySpan<byte> glInvalidateBufferSubDataFunctionName => "glInvalidateBufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> InvalidateBufferSubData;
    internal static ReadOnlySpan<byte> glInvalidateBufferDataFunctionName => "glInvalidateBufferData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> InvalidateBufferData;
    internal static ReadOnlySpan<byte> glInvalidateFramebufferFunctionName => "glInvalidateFramebuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> InvalidateFramebuffer;
    internal static ReadOnlySpan<byte> glInvalidateSubFramebufferFunctionName => "glInvalidateSubFramebuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> InvalidateSubFramebuffer;
    internal static ReadOnlySpan<byte> glMultiDrawArraysIndirectFunctionName => "glMultiDrawArraysIndirect"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> MultiDrawArraysIndirect;
    internal static ReadOnlySpan<byte> glMultiDrawElementsIndirectFunctionName => "glMultiDrawElementsIndirect"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> MultiDrawElementsIndirect;
    internal static ReadOnlySpan<byte> glGetProgramInterfaceivFunctionName => "glGetProgramInterfaceiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetProgramInterfaceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceIndexFunctionName => "glGetProgramResourceIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint> GetProgramResourceIndex;
    internal static ReadOnlySpan<byte> glGetProgramResourceNameFunctionName => "glGetProgramResourceName"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetProgramResourceName;
    internal static ReadOnlySpan<byte> glGetProgramResourceivFunctionName => "glGetProgramResourceiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void> GetProgramResourceiv;
    internal static ReadOnlySpan<byte> glGetProgramResourceLocationFunctionName => "glGetProgramResourceLocation"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> GetProgramResourceLocation;
    internal static ReadOnlySpan<byte> glGetProgramResourceLocationIndexFunctionName => "glGetProgramResourceLocationIndex"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int> GetProgramResourceLocationIndex;
    internal static ReadOnlySpan<byte> glShaderStorageBlockBindingFunctionName => "glShaderStorageBlockBinding"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> ShaderStorageBlockBinding;
    internal static ReadOnlySpan<byte> glTexBufferRangeFunctionName => "glTexBufferRange"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> TexBufferRange;
    internal static ReadOnlySpan<byte> glTexStorage2DMultisampleFunctionName => "glTexStorage2DMultisample"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TexStorage2DMultisample;
    internal static ReadOnlySpan<byte> glTexStorage3DMultisampleFunctionName => "glTexStorage3DMultisample"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TexStorage3DMultisample;
    internal static ReadOnlySpan<byte> glTextureViewFunctionName => "glTextureView"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> TextureView;
    internal static ReadOnlySpan<byte> glBindVertexBufferFunctionName => "glBindVertexBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void> BindVertexBuffer;
    internal static ReadOnlySpan<byte> glVertexAttribFormatFunctionName => "glVertexAttribFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexAttribFormat;
    internal static ReadOnlySpan<byte> glVertexAttribIFormatFunctionName => "glVertexAttribIFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexAttribIFormat;
    internal static ReadOnlySpan<byte> glVertexAttribLFormatFunctionName => "glVertexAttribLFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexAttribLFormat;
    internal static ReadOnlySpan<byte> glVertexAttribBindingFunctionName => "glVertexAttribBinding"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexAttribBinding;
    internal static ReadOnlySpan<byte> glVertexBindingDivisorFunctionName => "glVertexBindingDivisor"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexBindingDivisor;
    internal static ReadOnlySpan<byte> glDebugMessageControlFunctionName => "glDebugMessageControl"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void> DebugMessageControl;
    internal static ReadOnlySpan<byte> glDebugMessageInsertFunctionName => "glDebugMessageInsert"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> DebugMessageInsert;
    internal static ReadOnlySpan<byte> glDebugMessageCallbackFunctionName => "glDebugMessageCallback"u8;
    public readonly delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void> DebugMessageCallback;
    internal static ReadOnlySpan<byte> glGetDebugMessageLogFunctionName => "glGetDebugMessageLog"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint> GetDebugMessageLog;
    internal static ReadOnlySpan<byte> glPushDebugGroupFunctionName => "glPushDebugGroup"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> PushDebugGroup;
    internal static ReadOnlySpan<byte> glPopDebugGroupFunctionName => "glPopDebugGroup"u8;
    public readonly delegate* unmanaged</* void */ void> PopDebugGroup;
    internal static ReadOnlySpan<byte> glObjectLabelFunctionName => "glObjectLabel"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> ObjectLabel;
    internal static ReadOnlySpan<byte> glGetObjectLabelFunctionName => "glGetObjectLabel"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetObjectLabel;
    internal static ReadOnlySpan<byte> glObjectPtrLabelFunctionName => "glObjectPtrLabel"u8;
    public readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void> ObjectPtrLabel;
    internal static ReadOnlySpan<byte> glGetObjectPtrLabelFunctionName => "glGetObjectPtrLabel"u8;
    public readonly delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void> GetObjectPtrLabel;
    internal static ReadOnlySpan<byte> glBufferStorageFunctionName => "glBufferStorage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void> BufferStorage;
    internal static ReadOnlySpan<byte> glClearTexImageFunctionName => "glClearTexImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearTexImage;
    internal static ReadOnlySpan<byte> glClearTexSubImageFunctionName => "glClearTexSubImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearTexSubImage;
    internal static ReadOnlySpan<byte> glBindBuffersBaseFunctionName => "glBindBuffersBase"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> BindBuffersBase;
    internal static ReadOnlySpan<byte> glBindBuffersRangeFunctionName => "glBindBuffersRange"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizeiptr */ nint*, /* void */ void> BindBuffersRange;
    internal static ReadOnlySpan<byte> glBindTexturesFunctionName => "glBindTextures"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> BindTextures;
    internal static ReadOnlySpan<byte> glBindSamplersFunctionName => "glBindSamplers"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> BindSamplers;
    internal static ReadOnlySpan<byte> glBindImageTexturesFunctionName => "glBindImageTextures"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> BindImageTextures;
    internal static ReadOnlySpan<byte> glBindVertexBuffersFunctionName => "glBindVertexBuffers"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void> BindVertexBuffers;
    internal static ReadOnlySpan<byte> glClipControlFunctionName => "glClipControl"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> ClipControl;
    internal static ReadOnlySpan<byte> glCreateTransformFeedbacksFunctionName => "glCreateTransformFeedbacks"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateTransformFeedbacks;
    internal static ReadOnlySpan<byte> glTransformFeedbackBufferBaseFunctionName => "glTransformFeedbackBufferBase"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> TransformFeedbackBufferBase;
    internal static ReadOnlySpan<byte> glTransformFeedbackBufferRangeFunctionName => "glTransformFeedbackBufferRange"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> TransformFeedbackBufferRange;
    internal static ReadOnlySpan<byte> glGetTransformFeedbackivFunctionName => "glGetTransformFeedbackiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTransformFeedbackiv;
    internal static ReadOnlySpan<byte> glGetTransformFeedbacki_vFunctionName => "glGetTransformFeedbacki_v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void> GetTransformFeedbacki_v;
    internal static ReadOnlySpan<byte> glGetTransformFeedbacki64_vFunctionName => "glGetTransformFeedbacki64_v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void> GetTransformFeedbacki64_v;
    internal static ReadOnlySpan<byte> glCreateBuffersFunctionName => "glCreateBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateBuffers;
    internal static ReadOnlySpan<byte> glNamedBufferStorageFunctionName => "glNamedBufferStorage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLbitfield */ int, /* void */ void> NamedBufferStorage;
    internal static ReadOnlySpan<byte> glNamedBufferDataFunctionName => "glNamedBufferData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> NamedBufferData;
    internal static ReadOnlySpan<byte> glNamedBufferSubDataFunctionName => "glNamedBufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> NamedBufferSubData;
    internal static ReadOnlySpan<byte> glCopyNamedBufferSubDataFunctionName => "glCopyNamedBufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> CopyNamedBufferSubData;
    internal static ReadOnlySpan<byte> glClearNamedBufferDataFunctionName => "glClearNamedBufferData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearNamedBufferData;
    internal static ReadOnlySpan<byte> glClearNamedBufferSubDataFunctionName => "glClearNamedBufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ClearNamedBufferSubData;
    internal static ReadOnlySpan<byte> glMapNamedBufferFunctionName => "glMapNamedBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*> MapNamedBuffer;
    internal static ReadOnlySpan<byte> glMapNamedBufferRangeFunctionName => "glMapNamedBufferRange"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*> MapNamedBufferRange;
    internal static ReadOnlySpan<byte> glUnmapNamedBufferFunctionName => "glUnmapNamedBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> UnmapNamedBuffer;
    internal static ReadOnlySpan<byte> glFlushMappedNamedBufferRangeFunctionName => "glFlushMappedNamedBufferRange"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> FlushMappedNamedBufferRange;
    internal static ReadOnlySpan<byte> glGetNamedBufferParameterivFunctionName => "glGetNamedBufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetNamedBufferParameteriv;
    internal static ReadOnlySpan<byte> glGetNamedBufferParameteri64vFunctionName => "glGetNamedBufferParameteri64v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> GetNamedBufferParameteri64v;
    internal static ReadOnlySpan<byte> glGetNamedBufferPointervFunctionName => "glGetNamedBufferPointerv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void> GetNamedBufferPointerv;
    internal static ReadOnlySpan<byte> glGetNamedBufferSubDataFunctionName => "glGetNamedBufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> GetNamedBufferSubData;
    internal static ReadOnlySpan<byte> glCreateFramebuffersFunctionName => "glCreateFramebuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateFramebuffers;
    internal static ReadOnlySpan<byte> glNamedFramebufferRenderbufferFunctionName => "glNamedFramebufferRenderbuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> NamedFramebufferRenderbuffer;
    internal static ReadOnlySpan<byte> glNamedFramebufferParameteriFunctionName => "glNamedFramebufferParameteri"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> NamedFramebufferParameteri;
    internal static ReadOnlySpan<byte> glNamedFramebufferTextureFunctionName => "glNamedFramebufferTexture"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void> NamedFramebufferTexture;
    internal static ReadOnlySpan<byte> glNamedFramebufferTextureLayerFunctionName => "glNamedFramebufferTextureLayer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void> NamedFramebufferTextureLayer;
    internal static ReadOnlySpan<byte> glNamedFramebufferDrawBufferFunctionName => "glNamedFramebufferDrawBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> NamedFramebufferDrawBuffer;
    internal static ReadOnlySpan<byte> glNamedFramebufferDrawBuffersFunctionName => "glNamedFramebufferDrawBuffers"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> NamedFramebufferDrawBuffers;
    internal static ReadOnlySpan<byte> glNamedFramebufferReadBufferFunctionName => "glNamedFramebufferReadBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void> NamedFramebufferReadBuffer;
    internal static ReadOnlySpan<byte> glInvalidateNamedFramebufferDataFunctionName => "glInvalidateNamedFramebufferData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* void */ void> InvalidateNamedFramebufferData;
    internal static ReadOnlySpan<byte> glInvalidateNamedFramebufferSubDataFunctionName => "glInvalidateNamedFramebufferSubData"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> InvalidateNamedFramebufferSubData;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferivFunctionName => "glClearNamedFramebufferiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void> ClearNamedFramebufferiv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferuivFunctionName => "glClearNamedFramebufferuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void> ClearNamedFramebufferuiv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferfvFunctionName => "glClearNamedFramebufferfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void> ClearNamedFramebufferfv;
    internal static ReadOnlySpan<byte> glClearNamedFramebufferfiFunctionName => "glClearNamedFramebufferfi"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void> ClearNamedFramebufferfi;
    internal static ReadOnlySpan<byte> glBlitNamedFramebufferFunctionName => "glBlitNamedFramebuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void> BlitNamedFramebuffer;
    internal static ReadOnlySpan<byte> glCheckNamedFramebufferStatusFunctionName => "glCheckNamedFramebufferStatus"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int> CheckNamedFramebufferStatus;
    internal static ReadOnlySpan<byte> glGetNamedFramebufferParameterivFunctionName => "glGetNamedFramebufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetNamedFramebufferParameteriv;
    internal static ReadOnlySpan<byte> glGetNamedFramebufferAttachmentParameterivFunctionName => "glGetNamedFramebufferAttachmentParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetNamedFramebufferAttachmentParameteriv;
    internal static ReadOnlySpan<byte> glCreateRenderbuffersFunctionName => "glCreateRenderbuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateRenderbuffers;
    internal static ReadOnlySpan<byte> glNamedRenderbufferStorageFunctionName => "glNamedRenderbufferStorage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> NamedRenderbufferStorage;
    internal static ReadOnlySpan<byte> glNamedRenderbufferStorageMultisampleFunctionName => "glNamedRenderbufferStorageMultisample"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> NamedRenderbufferStorageMultisample;
    internal static ReadOnlySpan<byte> glGetNamedRenderbufferParameterivFunctionName => "glGetNamedRenderbufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetNamedRenderbufferParameteriv;
    internal static ReadOnlySpan<byte> glCreateTexturesFunctionName => "glCreateTextures"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateTextures;
    internal static ReadOnlySpan<byte> glTextureBufferFunctionName => "glTextureBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* void */ void> TextureBuffer;
    internal static ReadOnlySpan<byte> glTextureBufferRangeFunctionName => "glTextureBufferRange"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void> TextureBufferRange;
    internal static ReadOnlySpan<byte> glTextureStorage1DFunctionName => "glTextureStorage1D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void> TextureStorage1D;
    internal static ReadOnlySpan<byte> glTextureStorage2DFunctionName => "glTextureStorage2D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> TextureStorage2D;
    internal static ReadOnlySpan<byte> glTextureStorage3DFunctionName => "glTextureStorage3D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> TextureStorage3D;
    internal static ReadOnlySpan<byte> glTextureStorage2DMultisampleFunctionName => "glTextureStorage2DMultisample"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TextureStorage2DMultisample;
    internal static ReadOnlySpan<byte> glTextureStorage3DMultisampleFunctionName => "glTextureStorage3DMultisample"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void> TextureStorage3DMultisample;
    internal static ReadOnlySpan<byte> glTextureSubImage1DFunctionName => "glTextureSubImage1D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TextureSubImage1D;
    internal static ReadOnlySpan<byte> glTextureSubImage2DFunctionName => "glTextureSubImage2D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TextureSubImage2D;
    internal static ReadOnlySpan<byte> glTextureSubImage3DFunctionName => "glTextureSubImage3D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TextureSubImage3D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage1DFunctionName => "glCompressedTextureSubImage1D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTextureSubImage1D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage2DFunctionName => "glCompressedTextureSubImage2D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTextureSubImage2D;
    internal static ReadOnlySpan<byte> glCompressedTextureSubImage3DFunctionName => "glCompressedTextureSubImage3D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTextureSubImage3D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage1DFunctionName => "glCopyTextureSubImage1D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> CopyTextureSubImage1D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage2DFunctionName => "glCopyTextureSubImage2D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyTextureSubImage2D;
    internal static ReadOnlySpan<byte> glCopyTextureSubImage3DFunctionName => "glCopyTextureSubImage3D"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyTextureSubImage3D;
    internal static ReadOnlySpan<byte> glTextureParameterfFunctionName => "glTextureParameterf"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TextureParameterf;
    internal static ReadOnlySpan<byte> glTextureParameterfvFunctionName => "glTextureParameterfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TextureParameterfv;
    internal static ReadOnlySpan<byte> glTextureParameteriFunctionName => "glTextureParameteri"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void> TextureParameteri;
    internal static ReadOnlySpan<byte> glTextureParameterIivFunctionName => "glTextureParameterIiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> TextureParameterIiv;
    internal static ReadOnlySpan<byte> glTextureParameterIuivFunctionName => "glTextureParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> TextureParameterIuiv;
    internal static ReadOnlySpan<byte> glTextureParameterivFunctionName => "glTextureParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> TextureParameteriv;
    internal static ReadOnlySpan<byte> glGenerateTextureMipmapFunctionName => "glGenerateTextureMipmap"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> GenerateTextureMipmap;
    internal static ReadOnlySpan<byte> glBindTextureUnitFunctionName => "glBindTextureUnit"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> BindTextureUnit;
    internal static ReadOnlySpan<byte> glGetTextureImageFunctionName => "glGetTextureImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetTextureImage;
    internal static ReadOnlySpan<byte> glGetCompressedTextureImageFunctionName => "glGetCompressedTextureImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetCompressedTextureImage;
    internal static ReadOnlySpan<byte> glGetTextureLevelParameterfvFunctionName => "glGetTextureLevelParameterfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTextureLevelParameterfv;
    internal static ReadOnlySpan<byte> glGetTextureLevelParameterivFunctionName => "glGetTextureLevelParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTextureLevelParameteriv;
    internal static ReadOnlySpan<byte> glGetTextureParameterfvFunctionName => "glGetTextureParameterfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTextureParameterfv;
    internal static ReadOnlySpan<byte> glGetTextureParameterIivFunctionName => "glGetTextureParameterIiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTextureParameterIiv;
    internal static ReadOnlySpan<byte> glGetTextureParameterIuivFunctionName => "glGetTextureParameterIuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void> GetTextureParameterIuiv;
    internal static ReadOnlySpan<byte> glGetTextureParameterivFunctionName => "glGetTextureParameteriv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTextureParameteriv;
    internal static ReadOnlySpan<byte> glCreateVertexArraysFunctionName => "glCreateVertexArrays"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateVertexArrays;
    internal static ReadOnlySpan<byte> glDisableVertexArrayAttribFunctionName => "glDisableVertexArrayAttrib"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> DisableVertexArrayAttrib;
    internal static ReadOnlySpan<byte> glEnableVertexArrayAttribFunctionName => "glEnableVertexArrayAttrib"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> EnableVertexArrayAttrib;
    internal static ReadOnlySpan<byte> glVertexArrayElementBufferFunctionName => "glVertexArrayElementBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexArrayElementBuffer;
    internal static ReadOnlySpan<byte> glVertexArrayVertexBufferFunctionName => "glVertexArrayVertexBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void> VertexArrayVertexBuffer;
    internal static ReadOnlySpan<byte> glVertexArrayVertexBuffersFunctionName => "glVertexArrayVertexBuffers"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLintptr */ nint*, /* GLsizei */ int*, /* void */ void> VertexArrayVertexBuffers;
    internal static ReadOnlySpan<byte> glVertexArrayAttribBindingFunctionName => "glVertexArrayAttribBinding"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexArrayAttribBinding;
    internal static ReadOnlySpan<byte> glVertexArrayAttribFormatFunctionName => "glVertexArrayAttribFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void> VertexArrayAttribFormat;
    internal static ReadOnlySpan<byte> glVertexArrayAttribIFormatFunctionName => "glVertexArrayAttribIFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexArrayAttribIFormat;
    internal static ReadOnlySpan<byte> glVertexArrayAttribLFormatFunctionName => "glVertexArrayAttribLFormat"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void> VertexArrayAttribLFormat;
    internal static ReadOnlySpan<byte> glVertexArrayBindingDivisorFunctionName => "glVertexArrayBindingDivisor"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void> VertexArrayBindingDivisor;
    internal static ReadOnlySpan<byte> glGetVertexArrayivFunctionName => "glGetVertexArrayiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetVertexArrayiv;
    internal static ReadOnlySpan<byte> glGetVertexArrayIndexedivFunctionName => "glGetVertexArrayIndexediv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetVertexArrayIndexediv;
    internal static ReadOnlySpan<byte> glGetVertexArrayIndexed64ivFunctionName => "glGetVertexArrayIndexed64iv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint64 */ long*, /* void */ void> GetVertexArrayIndexed64iv;
    internal static ReadOnlySpan<byte> glCreateSamplersFunctionName => "glCreateSamplers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateSamplers;
    internal static ReadOnlySpan<byte> glCreateProgramPipelinesFunctionName => "glCreateProgramPipelines"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateProgramPipelines;
    internal static ReadOnlySpan<byte> glCreateQueriesFunctionName => "glCreateQueries"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> CreateQueries;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjecti64vFunctionName => "glGetQueryBufferObjecti64v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> GetQueryBufferObjecti64v;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectivFunctionName => "glGetQueryBufferObjectiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> GetQueryBufferObjectiv;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectui64vFunctionName => "glGetQueryBufferObjectui64v"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> GetQueryBufferObjectui64v;
    internal static ReadOnlySpan<byte> glGetQueryBufferObjectuivFunctionName => "glGetQueryBufferObjectuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLintptr */ nint, /* void */ void> GetQueryBufferObjectuiv;
    internal static ReadOnlySpan<byte> glMemoryBarrierByRegionFunctionName => "glMemoryBarrierByRegion"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> MemoryBarrierByRegion;
    internal static ReadOnlySpan<byte> glGetTextureSubImageFunctionName => "glGetTextureSubImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetTextureSubImage;
    internal static ReadOnlySpan<byte> glGetCompressedTextureSubImageFunctionName => "glGetCompressedTextureSubImage"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetCompressedTextureSubImage;
    internal static ReadOnlySpan<byte> glGetGraphicsResetStatusFunctionName => "glGetGraphicsResetStatus"u8;
    public readonly delegate* unmanaged</* GLenum */ int> GetGraphicsResetStatus;
    internal static ReadOnlySpan<byte> glGetnCompressedTexImageFunctionName => "glGetnCompressedTexImage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnCompressedTexImage;
    internal static ReadOnlySpan<byte> glGetnTexImageFunctionName => "glGetnTexImage"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnTexImage;
    internal static ReadOnlySpan<byte> glGetnUniformdvFunctionName => "glGetnUniformdv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> GetnUniformdv;
    internal static ReadOnlySpan<byte> glGetnUniformfvFunctionName => "glGetnUniformfv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> GetnUniformfv;
    internal static ReadOnlySpan<byte> glGetnUniformivFunctionName => "glGetnUniformiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> GetnUniformiv;
    internal static ReadOnlySpan<byte> glGetnUniformuivFunctionName => "glGetnUniformuiv"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GetnUniformuiv;
    internal static ReadOnlySpan<byte> glReadnPixelsFunctionName => "glReadnPixels"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> ReadnPixels;
    internal static ReadOnlySpan<byte> glGetnMapdvFunctionName => "glGetnMapdv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLdouble */ double*, /* void */ void> GetnMapdv;
    internal static ReadOnlySpan<byte> glGetnMapfvFunctionName => "glGetnMapfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> GetnMapfv;
    internal static ReadOnlySpan<byte> glGetnMapivFunctionName => "glGetnMapiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void> GetnMapiv;
    internal static ReadOnlySpan<byte> glGetnPixelMapfvFunctionName => "glGetnPixelMapfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void> GetnPixelMapfv;
    internal static ReadOnlySpan<byte> glGetnPixelMapuivFunctionName => "glGetnPixelMapuiv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GetnPixelMapuiv;
    internal static ReadOnlySpan<byte> glGetnPixelMapusvFunctionName => "glGetnPixelMapusv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLushort */ ushort*, /* void */ void> GetnPixelMapusv;
    internal static ReadOnlySpan<byte> glGetnPolygonStippleFunctionName => "glGetnPolygonStipple"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLubyte */ byte*, /* void */ void> GetnPolygonStipple;
    internal static ReadOnlySpan<byte> glGetnColorTableFunctionName => "glGetnColorTable"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnColorTable;
    internal static ReadOnlySpan<byte> glGetnConvolutionFilterFunctionName => "glGetnConvolutionFilter"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnConvolutionFilter;
    internal static ReadOnlySpan<byte> glGetnSeparableFilterFunctionName => "glGetnSeparableFilter"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* GLsizei */ int, /* void */ void*, /* void */ void*, /* void */ void> GetnSeparableFilter;
    internal static ReadOnlySpan<byte> glGetnHistogramFunctionName => "glGetnHistogram"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnHistogram;
    internal static ReadOnlySpan<byte> glGetnMinmaxFunctionName => "glGetnMinmax"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> GetnMinmax;
    internal static ReadOnlySpan<byte> glTextureBarrierFunctionName => "glTextureBarrier"u8;
    public readonly delegate* unmanaged</* void */ void> TextureBarrier;
    internal static ReadOnlySpan<byte> glSpecializeShaderFunctionName => "glSpecializeShader"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint, /* GLuint */ uint*, /* GLuint */ uint*, /* void */ void> SpecializeShader;
    internal static ReadOnlySpan<byte> glMultiDrawArraysIndirectCountFunctionName => "glMultiDrawArraysIndirectCount"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> MultiDrawArraysIndirectCount;
    internal static ReadOnlySpan<byte> glMultiDrawElementsIndirectCountFunctionName => "glMultiDrawElementsIndirectCount"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* GLintptr */ nint, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> MultiDrawElementsIndirectCount;
    internal static ReadOnlySpan<byte> glPolygonOffsetClampFunctionName => "glPolygonOffsetClamp"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> PolygonOffsetClamp;
}
