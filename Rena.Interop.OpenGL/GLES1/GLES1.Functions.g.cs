using System.Buffers;
using System.Buffers.Text;
using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGL;

public unsafe partial class GLES1
{
    public static ReadOnlySpan<byte> glAlphaFuncFunctionName => "glAlphaFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> AlphaFunc;
    public static ReadOnlySpan<byte> glClearColorFunctionName => "glClearColor"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> ClearColor;
    public static ReadOnlySpan<byte> glClearDepthfFunctionName => "glClearDepthf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> ClearDepthf;
    public static ReadOnlySpan<byte> glClipPlanefFunctionName => "glClipPlanef"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> ClipPlanef;
    public static ReadOnlySpan<byte> glColor4fFunctionName => "glColor4f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Color4f;
    public static ReadOnlySpan<byte> glDepthRangefFunctionName => "glDepthRangef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> DepthRangef;
    public static ReadOnlySpan<byte> glFogfFunctionName => "glFogf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> Fogf;
    public static ReadOnlySpan<byte> glFogfvFunctionName => "glFogfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> Fogfv;
    public static ReadOnlySpan<byte> glFrustumfFunctionName => "glFrustumf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Frustumf;
    public static ReadOnlySpan<byte> glGetClipPlanefFunctionName => "glGetClipPlanef"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetClipPlanef;
    public static ReadOnlySpan<byte> glGetFloatvFunctionName => "glGetFloatv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetFloatv;
    public static ReadOnlySpan<byte> glGetLightfvFunctionName => "glGetLightfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetLightfv;
    public static ReadOnlySpan<byte> glGetMaterialfvFunctionName => "glGetMaterialfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetMaterialfv;
    public static ReadOnlySpan<byte> glGetTexEnvfvFunctionName => "glGetTexEnvfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexEnvfv;
    public static ReadOnlySpan<byte> glGetTexParameterfvFunctionName => "glGetTexParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> GetTexParameterfv;
    public static ReadOnlySpan<byte> glLightModelfFunctionName => "glLightModelf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> LightModelf;
    public static ReadOnlySpan<byte> glLightModelfvFunctionName => "glLightModelfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> LightModelfv;
    public static ReadOnlySpan<byte> glLightfFunctionName => "glLightf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> Lightf;
    public static ReadOnlySpan<byte> glLightfvFunctionName => "glLightfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> Lightfv;
    public static ReadOnlySpan<byte> glLineWidthFunctionName => "glLineWidth"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> LineWidth;
    public static ReadOnlySpan<byte> glLoadMatrixfFunctionName => "glLoadMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> LoadMatrixf;
    public static ReadOnlySpan<byte> glMaterialfFunctionName => "glMaterialf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> Materialf;
    public static ReadOnlySpan<byte> glMaterialfvFunctionName => "glMaterialfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> Materialfv;
    public static ReadOnlySpan<byte> glMultMatrixfFunctionName => "glMultMatrixf"u8;
    public readonly delegate* unmanaged</* GLfloat */ float*, /* void */ void> MultMatrixf;
    public static ReadOnlySpan<byte> glMultiTexCoord4fFunctionName => "glMultiTexCoord4f"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> MultiTexCoord4f;
    public static ReadOnlySpan<byte> glNormal3fFunctionName => "glNormal3f"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Normal3f;
    public static ReadOnlySpan<byte> glOrthofFunctionName => "glOrthof"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Orthof;
    public static ReadOnlySpan<byte> glPointParameterfFunctionName => "glPointParameterf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void> PointParameterf;
    public static ReadOnlySpan<byte> glPointParameterfvFunctionName => "glPointParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void> PointParameterfv;
    public static ReadOnlySpan<byte> glPointSizeFunctionName => "glPointSize"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* void */ void> PointSize;
    public static ReadOnlySpan<byte> glPolygonOffsetFunctionName => "glPolygonOffset"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void> PolygonOffset;
    public static ReadOnlySpan<byte> glRotatefFunctionName => "glRotatef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Rotatef;
    public static ReadOnlySpan<byte> glScalefFunctionName => "glScalef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Scalef;
    public static ReadOnlySpan<byte> glTexEnvfFunctionName => "glTexEnvf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TexEnvf;
    public static ReadOnlySpan<byte> glTexEnvfvFunctionName => "glTexEnvfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TexEnvfv;
    public static ReadOnlySpan<byte> glTexParameterfFunctionName => "glTexParameterf"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void> TexParameterf;
    public static ReadOnlySpan<byte> glTexParameterfvFunctionName => "glTexParameterfv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void> TexParameterfv;
    public static ReadOnlySpan<byte> glTranslatefFunctionName => "glTranslatef"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void> Translatef;
    public static ReadOnlySpan<byte> glActiveTextureFunctionName => "glActiveTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ActiveTexture;
    public static ReadOnlySpan<byte> glAlphaFuncxFunctionName => "glAlphaFuncx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> AlphaFuncx;
    public static ReadOnlySpan<byte> glBindBufferFunctionName => "glBindBuffer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindBuffer;
    public static ReadOnlySpan<byte> glBindTextureFunctionName => "glBindTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void> BindTexture;
    public static ReadOnlySpan<byte> glBlendFuncFunctionName => "glBlendFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> BlendFunc;
    public static ReadOnlySpan<byte> glBufferDataFunctionName => "glBufferData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void> BufferData;
    public static ReadOnlySpan<byte> glBufferSubDataFunctionName => "glBufferSubData"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void> BufferSubData;
    public static ReadOnlySpan<byte> glClearFunctionName => "glClear"u8;
    public readonly delegate* unmanaged</* GLbitfield */ int, /* void */ void> Clear;
    public static ReadOnlySpan<byte> glClearColorxFunctionName => "glClearColorx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> ClearColorx;
    public static ReadOnlySpan<byte> glClearDepthxFunctionName => "glClearDepthx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> ClearDepthx;
    public static ReadOnlySpan<byte> glClearStencilFunctionName => "glClearStencil"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* void */ void> ClearStencil;
    public static ReadOnlySpan<byte> glClientActiveTextureFunctionName => "glClientActiveTexture"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ClientActiveTexture;
    public static ReadOnlySpan<byte> glClipPlanexFunctionName => "glClipPlanex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> ClipPlanex;
    public static ReadOnlySpan<byte> glColor4ubFunctionName => "glColor4ub"u8;
    public readonly delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void> Color4ub;
    public static ReadOnlySpan<byte> glColor4xFunctionName => "glColor4x"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Color4x;
    public static ReadOnlySpan<byte> glColorMaskFunctionName => "glColorMask"u8;
    public readonly delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void> ColorMask;
    public static ReadOnlySpan<byte> glColorPointerFunctionName => "glColorPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> ColorPointer;
    public static ReadOnlySpan<byte> glCompressedTexImage2DFunctionName => "glCompressedTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexImage2D;
    public static ReadOnlySpan<byte> glCompressedTexSubImage2DFunctionName => "glCompressedTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> CompressedTexSubImage2D;
    public static ReadOnlySpan<byte> glCopyTexImage2DFunctionName => "glCopyTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void> CopyTexImage2D;
    public static ReadOnlySpan<byte> glCopyTexSubImage2DFunctionName => "glCopyTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> CopyTexSubImage2D;
    public static ReadOnlySpan<byte> glCullFaceFunctionName => "glCullFace"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> CullFace;
    public static ReadOnlySpan<byte> glDeleteBuffersFunctionName => "glDeleteBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteBuffers;
    public static ReadOnlySpan<byte> glDeleteTexturesFunctionName => "glDeleteTextures"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> DeleteTextures;
    public static ReadOnlySpan<byte> glDepthFuncFunctionName => "glDepthFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> DepthFunc;
    public static ReadOnlySpan<byte> glDepthMaskFunctionName => "glDepthMask"u8;
    public readonly delegate* unmanaged</* GLboolean */ int, /* void */ void> DepthMask;
    public static ReadOnlySpan<byte> glDepthRangexFunctionName => "glDepthRangex"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> DepthRangex;
    public static ReadOnlySpan<byte> glDisableFunctionName => "glDisable"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> Disable;
    public static ReadOnlySpan<byte> glDisableClientStateFunctionName => "glDisableClientState"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> DisableClientState;
    public static ReadOnlySpan<byte> glDrawArraysFunctionName => "glDrawArrays"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void> DrawArrays;
    public static ReadOnlySpan<byte> glDrawElementsFunctionName => "glDrawElements"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void> DrawElements;
    public static ReadOnlySpan<byte> glEnableFunctionName => "glEnable"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> Enable;
    public static ReadOnlySpan<byte> glEnableClientStateFunctionName => "glEnableClientState"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> EnableClientState;
    public static ReadOnlySpan<byte> glFinishFunctionName => "glFinish"u8;
    public readonly delegate* unmanaged</* void */ void> Finish;
    public static ReadOnlySpan<byte> glFlushFunctionName => "glFlush"u8;
    public readonly delegate* unmanaged</* void */ void> Flush;
    public static ReadOnlySpan<byte> glFogxFunctionName => "glFogx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> Fogx;
    public static ReadOnlySpan<byte> glFogxvFunctionName => "glFogxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> Fogxv;
    public static ReadOnlySpan<byte> glFrontFaceFunctionName => "glFrontFace"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> FrontFace;
    public static ReadOnlySpan<byte> glFrustumxFunctionName => "glFrustumx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Frustumx;
    public static ReadOnlySpan<byte> glGetBooleanvFunctionName => "glGetBooleanv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void> GetBooleanv;
    public static ReadOnlySpan<byte> glGetBufferParameterivFunctionName => "glGetBufferParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetBufferParameteriv;
    public static ReadOnlySpan<byte> glGetClipPlanexFunctionName => "glGetClipPlanex"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetClipPlanex;
    public static ReadOnlySpan<byte> glGenBuffersFunctionName => "glGenBuffers"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenBuffers;
    public static ReadOnlySpan<byte> glGenTexturesFunctionName => "glGenTextures"u8;
    public readonly delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void> GenTextures;
    public static ReadOnlySpan<byte> glGetErrorFunctionName => "glGetError"u8;
    public readonly delegate* unmanaged</* GLenum */ int> GetError;
    public static ReadOnlySpan<byte> glGetFixedvFunctionName => "glGetFixedv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetFixedv;
    public static ReadOnlySpan<byte> glGetIntegervFunctionName => "glGetIntegerv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void> GetIntegerv;
    public static ReadOnlySpan<byte> glGetLightxvFunctionName => "glGetLightxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetLightxv;
    public static ReadOnlySpan<byte> glGetMaterialxvFunctionName => "glGetMaterialxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetMaterialxv;
    public static ReadOnlySpan<byte> glGetPointervFunctionName => "glGetPointerv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void> GetPointerv;
    public static ReadOnlySpan<byte> glGetStringFunctionName => "glGetString"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*> GetString;
    public static ReadOnlySpan<byte> glGetTexEnvivFunctionName => "glGetTexEnviv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexEnviv;
    public static ReadOnlySpan<byte> glGetTexEnvxvFunctionName => "glGetTexEnvxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetTexEnvxv;
    public static ReadOnlySpan<byte> glGetTexParameterivFunctionName => "glGetTexParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> GetTexParameteriv;
    public static ReadOnlySpan<byte> glGetTexParameterxvFunctionName => "glGetTexParameterxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> GetTexParameterxv;
    public static ReadOnlySpan<byte> glHintFunctionName => "glHint"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void> Hint;
    public static ReadOnlySpan<byte> glIsBufferFunctionName => "glIsBuffer"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsBuffer;
    public static ReadOnlySpan<byte> glIsEnabledFunctionName => "glIsEnabled"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLboolean */ int> IsEnabled;
    public static ReadOnlySpan<byte> glIsTextureFunctionName => "glIsTexture"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int> IsTexture;
    public static ReadOnlySpan<byte> glLightModelxFunctionName => "glLightModelx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> LightModelx;
    public static ReadOnlySpan<byte> glLightModelxvFunctionName => "glLightModelxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> LightModelxv;
    public static ReadOnlySpan<byte> glLightxFunctionName => "glLightx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> Lightx;
    public static ReadOnlySpan<byte> glLightxvFunctionName => "glLightxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> Lightxv;
    public static ReadOnlySpan<byte> glLineWidthxFunctionName => "glLineWidthx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> LineWidthx;
    public static ReadOnlySpan<byte> glLoadIdentityFunctionName => "glLoadIdentity"u8;
    public readonly delegate* unmanaged</* void */ void> LoadIdentity;
    public static ReadOnlySpan<byte> glLoadMatrixxFunctionName => "glLoadMatrixx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint*, /* void */ void> LoadMatrixx;
    public static ReadOnlySpan<byte> glLogicOpFunctionName => "glLogicOp"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> LogicOp;
    public static ReadOnlySpan<byte> glMaterialxFunctionName => "glMaterialx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> Materialx;
    public static ReadOnlySpan<byte> glMaterialxvFunctionName => "glMaterialxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> Materialxv;
    public static ReadOnlySpan<byte> glMatrixModeFunctionName => "glMatrixMode"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> MatrixMode;
    public static ReadOnlySpan<byte> glMultMatrixxFunctionName => "glMultMatrixx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint*, /* void */ void> MultMatrixx;
    public static ReadOnlySpan<byte> glMultiTexCoord4xFunctionName => "glMultiTexCoord4x"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> MultiTexCoord4x;
    public static ReadOnlySpan<byte> glNormal3xFunctionName => "glNormal3x"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Normal3x;
    public static ReadOnlySpan<byte> glNormalPointerFunctionName => "glNormalPointer"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> NormalPointer;
    public static ReadOnlySpan<byte> glOrthoxFunctionName => "glOrthox"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Orthox;
    public static ReadOnlySpan<byte> glPixelStoreiFunctionName => "glPixelStorei"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void> PixelStorei;
    public static ReadOnlySpan<byte> glPointParameterxFunctionName => "glPointParameterx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void> PointParameterx;
    public static ReadOnlySpan<byte> glPointParameterxvFunctionName => "glPointParameterxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void> PointParameterxv;
    public static ReadOnlySpan<byte> glPointSizexFunctionName => "glPointSizex"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* void */ void> PointSizex;
    public static ReadOnlySpan<byte> glPolygonOffsetxFunctionName => "glPolygonOffsetx"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> PolygonOffsetx;
    public static ReadOnlySpan<byte> glPopMatrixFunctionName => "glPopMatrix"u8;
    public readonly delegate* unmanaged</* void */ void> PopMatrix;
    public static ReadOnlySpan<byte> glPushMatrixFunctionName => "glPushMatrix"u8;
    public readonly delegate* unmanaged</* void */ void> PushMatrix;
    public static ReadOnlySpan<byte> glReadPixelsFunctionName => "glReadPixels"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> ReadPixels;
    public static ReadOnlySpan<byte> glRotatexFunctionName => "glRotatex"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Rotatex;
    public static ReadOnlySpan<byte> glSampleCoverageFunctionName => "glSampleCoverage"u8;
    public readonly delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void> SampleCoverage;
    public static ReadOnlySpan<byte> glSampleCoveragexFunctionName => "glSampleCoveragex"u8;
    public readonly delegate* unmanaged</* GLclampx */ int, /* GLboolean */ int, /* void */ void> SampleCoveragex;
    public static ReadOnlySpan<byte> glScalexFunctionName => "glScalex"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Scalex;
    public static ReadOnlySpan<byte> glScissorFunctionName => "glScissor"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> Scissor;
    public static ReadOnlySpan<byte> glShadeModelFunctionName => "glShadeModel"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* void */ void> ShadeModel;
    public static ReadOnlySpan<byte> glStencilFuncFunctionName => "glStencilFunc"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void> StencilFunc;
    public static ReadOnlySpan<byte> glStencilMaskFunctionName => "glStencilMask"u8;
    public readonly delegate* unmanaged</* GLuint */ uint, /* void */ void> StencilMask;
    public static ReadOnlySpan<byte> glStencilOpFunctionName => "glStencilOp"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void> StencilOp;
    public static ReadOnlySpan<byte> glTexCoordPointerFunctionName => "glTexCoordPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> TexCoordPointer;
    public static ReadOnlySpan<byte> glTexEnviFunctionName => "glTexEnvi"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> TexEnvi;
    public static ReadOnlySpan<byte> glTexEnvxFunctionName => "glTexEnvx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> TexEnvx;
    public static ReadOnlySpan<byte> glTexEnvivFunctionName => "glTexEnviv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexEnviv;
    public static ReadOnlySpan<byte> glTexEnvxvFunctionName => "glTexEnvxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> TexEnvxv;
    public static ReadOnlySpan<byte> glTexImage2DFunctionName => "glTexImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexImage2D;
    public static ReadOnlySpan<byte> glTexParameteriFunctionName => "glTexParameteri"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void> TexParameteri;
    public static ReadOnlySpan<byte> glTexParameterxFunctionName => "glTexParameterx"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void> TexParameterx;
    public static ReadOnlySpan<byte> glTexParameterivFunctionName => "glTexParameteriv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void> TexParameteriv;
    public static ReadOnlySpan<byte> glTexParameterxvFunctionName => "glTexParameterxv"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void> TexParameterxv;
    public static ReadOnlySpan<byte> glTexSubImage2DFunctionName => "glTexSubImage2D"u8;
    public readonly delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void> TexSubImage2D;
    public static ReadOnlySpan<byte> glTranslatexFunctionName => "glTranslatex"u8;
    public readonly delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void> Translatex;
    public static ReadOnlySpan<byte> glVertexPointerFunctionName => "glVertexPointer"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void> VertexPointer;
    public static ReadOnlySpan<byte> glViewportFunctionName => "glViewport"u8;
    public readonly delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void> Viewport;
}
