using System.Buffers;
using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGL;

public unsafe partial class GLES2
{
    public delegate void* LoadFunction(byte* name);
    public readonly ushort Major;
    public readonly ushort Minor;
    
    public readonly bool Version20;
    public readonly bool Version30;
    public readonly bool Version31;
    public readonly bool Version32;
    public GLES2(LoadFunction loadFunc)
    {
        delegate* unmanaged<int, byte*> glGetString;
        fixed(byte* name = glGetStringFunctionName)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        var version = glGetString(GL_VERSION);
        if(version is null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor, out IsEmbedded)) return;
        
        Version20 = Major > 2 || (Major == 2 && Minor >= 0);
        Version30 = Major > 3 || (Major == 3 && Minor >= 0);
        Version31 = Major > 3 || (Major == 3 && Minor >= 1);
        Version32 = Major > 3 || (Major == 3 && Minor >= 2);
        
        if(IsEmbedded & Version20)
        {
            fixed(byte* name = glActiveTextureFunctionName)
                this.glActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAttachShaderFunctionName)
                this.glAttachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindAttribLocationFunctionName)
                this.glBindAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferFunctionName)
                this.glBindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindFramebufferFunctionName)
                this.glBindFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindRenderbufferFunctionName)
                this.glBindRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureFunctionName)
                this.glBindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendColorFunctionName)
                this.glBlendColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationFunctionName)
                this.glBlendEquation = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationSeparateFunctionName)
                this.glBlendEquationSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncFunctionName)
                this.glBlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncSeparateFunctionName)
                this.glBlendFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferDataFunctionName)
                this.glBufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferSubDataFunctionName)
                this.glBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCheckFramebufferStatusFunctionName)
                this.glCheckFramebufferStatus = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glClearFunctionName)
                this.glClear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorFunctionName)
                this.glClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthfFunctionName)
                this.glClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearStencilFunctionName)
                this.glClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskFunctionName)
                this.glColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompileShaderFunctionName)
                this.glCompileShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage2DFunctionName)
                this.glCompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage2DFunctionName)
                this.glCompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage2DFunctionName)
                this.glCopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage2DFunctionName)
                this.glCopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateProgramFunctionName)
                this.glCreateProgram = (delegate* unmanaged</* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glCreateShaderFunctionName)
                this.glCreateShader = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glCullFaceFunctionName)
                this.glCullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteBuffersFunctionName)
                this.glDeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteFramebuffersFunctionName)
                this.glDeleteFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteProgramFunctionName)
                this.glDeleteProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteRenderbuffersFunctionName)
                this.glDeleteRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteShaderFunctionName)
                this.glDeleteShader = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTexturesFunctionName)
                this.glDeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthFuncFunctionName)
                this.glDepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthMaskFunctionName)
                this.glDepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangefFunctionName)
                this.glDepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDetachShaderFunctionName)
                this.glDetachShader = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableFunctionName)
                this.glDisable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableVertexAttribArrayFunctionName)
                this.glDisableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysFunctionName)
                this.glDrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsFunctionName)
                this.glDrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableFunctionName)
                this.glEnable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableVertexAttribArrayFunctionName)
                this.glEnableVertexAttribArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFinishFunctionName)
                this.glFinish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFlushFunctionName)
                this.glFlush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferRenderbufferFunctionName)
                this.glFramebufferRenderbuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTexture2DFunctionName)
                this.glFramebufferTexture2D = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrontFaceFunctionName)
                this.glFrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenBuffersFunctionName)
                this.glGenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenerateMipmapFunctionName)
                this.glGenerateMipmap = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenFramebuffersFunctionName)
                this.glGenFramebuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenRenderbuffersFunctionName)
                this.glGenRenderbuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTexturesFunctionName)
                this.glGenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveAttribFunctionName)
                this.glGetActiveAttrib = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformFunctionName)
                this.glGetActiveUniform = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttachedShadersFunctionName)
                this.glGetAttachedShaders = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetAttribLocationFunctionName)
                this.glGetAttribLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetBooleanvFunctionName)
                this.glGetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameterivFunctionName)
                this.glGetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetErrorFunctionName)
                this.glGetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetFloatvFunctionName)
                this.glGetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferAttachmentParameterivFunctionName)
                this.glGetFramebufferAttachmentParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegervFunctionName)
                this.glGetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramivFunctionName)
                this.glGetProgramiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInfoLogFunctionName)
                this.glGetProgramInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetRenderbufferParameterivFunctionName)
                this.glGetRenderbufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderivFunctionName)
                this.glGetShaderiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderInfoLogFunctionName)
                this.glGetShaderInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderPrecisionFormatFunctionName)
                this.glGetShaderPrecisionFormat = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetShaderSourceFunctionName)
                this.glGetShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringFunctionName)
                this.glGetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glGetTexParameterfvFunctionName)
                this.glGetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterivFunctionName)
                this.glGetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformfvFunctionName)
                this.glGetUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformivFunctionName)
                this.glGetUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformLocationFunctionName)
                this.glGetUniformLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribfvFunctionName)
                this.glGetVertexAttribfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribivFunctionName)
                this.glGetVertexAttribiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribPointervFunctionName)
                this.glGetVertexAttribPointerv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glHintFunctionName)
                this.glHint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsBufferFunctionName)
                this.glIsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsEnabledFunctionName)
                this.glIsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsFramebufferFunctionName)
                this.glIsFramebuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsProgramFunctionName)
                this.glIsProgram = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsRenderbufferFunctionName)
                this.glIsRenderbuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsShaderFunctionName)
                this.glIsShader = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsTextureFunctionName)
                this.glIsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glLineWidthFunctionName)
                this.glLineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLinkProgramFunctionName)
                this.glLinkProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStoreiFunctionName)
                this.glPixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetFunctionName)
                this.glPolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReadPixelsFunctionName)
                this.glReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glReleaseShaderCompilerFunctionName)
                this.glReleaseShaderCompiler = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageFunctionName)
                this.glRenderbufferStorage = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoverageFunctionName)
                this.glSampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorFunctionName)
                this.glScissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderBinaryFunctionName)
                this.glShaderBinary = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShaderSourceFunctionName)
                this.glShaderSource = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncFunctionName)
                this.glStencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncSeparateFunctionName)
                this.glStencilFuncSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskFunctionName)
                this.glStencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskSeparateFunctionName)
                this.glStencilMaskSeparate = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpFunctionName)
                this.glStencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpSeparateFunctionName)
                this.glStencilOpSeparate = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DFunctionName)
                this.glTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfFunctionName)
                this.glTexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfvFunctionName)
                this.glTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameteriFunctionName)
                this.glTexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterivFunctionName)
                this.glTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage2DFunctionName)
                this.glTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fFunctionName)
                this.glUniform1f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1fvFunctionName)
                this.glUniform1fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1iFunctionName)
                this.glUniform1i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1ivFunctionName)
                this.glUniform1iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fFunctionName)
                this.glUniform2f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2fvFunctionName)
                this.glUniform2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2iFunctionName)
                this.glUniform2i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2ivFunctionName)
                this.glUniform2iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fFunctionName)
                this.glUniform3f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3fvFunctionName)
                this.glUniform3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3iFunctionName)
                this.glUniform3i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3ivFunctionName)
                this.glUniform3iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fFunctionName)
                this.glUniform4f = (delegate* unmanaged</* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4fvFunctionName)
                this.glUniform4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4iFunctionName)
                this.glUniform4i = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4ivFunctionName)
                this.glUniform4iv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2fvFunctionName)
                this.glUniformMatrix2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3fvFunctionName)
                this.glUniformMatrix3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4fvFunctionName)
                this.glUniformMatrix4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUseProgramFunctionName)
                this.glUseProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramFunctionName)
                this.glValidateProgram = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fFunctionName)
                this.glVertexAttrib1f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib1fvFunctionName)
                this.glVertexAttrib1fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fFunctionName)
                this.glVertexAttrib2f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib2fvFunctionName)
                this.glVertexAttrib2fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fFunctionName)
                this.glVertexAttrib3f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib3fvFunctionName)
                this.glVertexAttrib3fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fFunctionName)
                this.glVertexAttrib4f = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttrib4fvFunctionName)
                this.glVertexAttrib4fv = (delegate* unmanaged</* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribPointerFunctionName)
                this.glVertexAttribPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportFunctionName)
                this.glViewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
        
        if(IsEmbedded & Version30)
        {
            fixed(byte* name = glReadBufferFunctionName)
                this.glReadBuffer = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawRangeElementsFunctionName)
                this.glDrawRangeElements = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage3DFunctionName)
                this.glTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage3DFunctionName)
                this.glTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage3DFunctionName)
                this.glCopyTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage3DFunctionName)
                this.glCompressedTexImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage3DFunctionName)
                this.glCompressedTexSubImage3D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenQueriesFunctionName)
                this.glGenQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteQueriesFunctionName)
                this.glDeleteQueries = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsQueryFunctionName)
                this.glIsQuery = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBeginQueryFunctionName)
                this.glBeginQuery = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndQueryFunctionName)
                this.glEndQuery = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryivFunctionName)
                this.glGetQueryiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetQueryObjectuivFunctionName)
                this.glGetQueryObjectuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUnmapBufferFunctionName)
                this.glUnmapBuffer = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetBufferPointervFunctionName)
                this.glGetBufferPointerv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawBuffersFunctionName)
                this.glDrawBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x3fvFunctionName)
                this.glUniformMatrix2x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x2fvFunctionName)
                this.glUniformMatrix3x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix2x4fvFunctionName)
                this.glUniformMatrix2x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x2fvFunctionName)
                this.glUniformMatrix4x2fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix3x4fvFunctionName)
                this.glUniformMatrix3x4fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformMatrix4x3fvFunctionName)
                this.glUniformMatrix4x3fv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlitFramebufferFunctionName)
                this.glBlitFramebuffer = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLbitfield */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRenderbufferStorageMultisampleFunctionName)
                this.glRenderbufferStorageMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureLayerFunctionName)
                this.glFramebufferTextureLayer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMapBufferRangeFunctionName)
                this.glMapBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* GLbitfield */ int, /* void */ void*>)loadFunc(name);
            fixed(byte* name = glFlushMappedBufferRangeFunctionName)
                this.glFlushMappedBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexArrayFunctionName)
                this.glBindVertexArray = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteVertexArraysFunctionName)
                this.glDeleteVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenVertexArraysFunctionName)
                this.glGenVertexArrays = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsVertexArrayFunctionName)
                this.glIsVertexArray = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetIntegeri_vFunctionName)
                this.glGetIntegeri_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBeginTransformFeedbackFunctionName)
                this.glBeginTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEndTransformFeedbackFunctionName)
                this.glEndTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferRangeFunctionName)
                this.glBindBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferBaseFunctionName)
                this.glBindBufferBase = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTransformFeedbackVaryingsFunctionName)
                this.glTransformFeedbackVaryings = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTransformFeedbackVaryingFunctionName)
                this.glGetTransformFeedbackVarying = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLsizei */ int*, /* GLenum */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIPointerFunctionName)
                this.glVertexAttribIPointer = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIivFunctionName)
                this.glGetVertexAttribIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetVertexAttribIuivFunctionName)
                this.glGetVertexAttribIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4iFunctionName)
                this.glVertexAttribI4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uiFunctionName)
                this.glVertexAttribI4ui = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4ivFunctionName)
                this.glVertexAttribI4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribI4uivFunctionName)
                this.glVertexAttribI4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformuivFunctionName)
                this.glGetUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFragDataLocationFunctionName)
                this.glGetFragDataLocation = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glUniform1uiFunctionName)
                this.glUniform1ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uiFunctionName)
                this.glUniform2ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uiFunctionName)
                this.glUniform3ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uiFunctionName)
                this.glUniform4ui = (delegate* unmanaged</* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform1uivFunctionName)
                this.glUniform1uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform2uivFunctionName)
                this.glUniform2uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform3uivFunctionName)
                this.glUniform3uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniform4uivFunctionName)
                this.glUniform4uiv = (delegate* unmanaged</* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferivFunctionName)
                this.glClearBufferiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferuivFunctionName)
                this.glClearBufferuiv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfvFunctionName)
                this.glClearBufferfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearBufferfiFunctionName)
                this.glClearBufferfi = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLfloat */ float, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringiFunctionName)
                this.glGetStringi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glCopyBufferSubDataFunctionName)
                this.glCopyBufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLintptr */ nint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformIndicesFunctionName)
                this.glGetUniformIndices = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformsivFunctionName)
                this.glGetActiveUniformsiv = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLuint */ uint*, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetUniformBlockIndexFunctionName)
                this.glGetUniformBlockIndex = (delegate* unmanaged</* GLuint */ uint, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockivFunctionName)
                this.glGetActiveUniformBlockiv = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetActiveUniformBlockNameFunctionName)
                this.glGetActiveUniformBlockName = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glUniformBlockBindingFunctionName)
                this.glUniformBlockBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysInstancedFunctionName)
                this.glDrawArraysInstanced = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedFunctionName)
                this.glDrawElementsInstanced = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFenceSyncFunctionName)
                this.glFenceSync = (delegate* unmanaged</* GLenum */ int, /* GLbitfield */ int, /* GLsync */ void*>)loadFunc(name);
            fixed(byte* name = glIsSyncFunctionName)
                this.glIsSync = (delegate* unmanaged</* GLsync */ void*, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDeleteSyncFunctionName)
                this.glDeleteSync = (delegate* unmanaged</* GLsync */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientWaitSyncFunctionName)
                this.glClientWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glWaitSyncFunctionName)
                this.glWaitSync = (delegate* unmanaged</* GLsync */ void*, /* GLbitfield */ int, /* GLuint64 */ ulong, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64vFunctionName)
                this.glGetInteger64v = (delegate* unmanaged</* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSyncivFunctionName)
                this.glGetSynciv = (delegate* unmanaged</* GLsync */ void*, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInteger64i_vFunctionName)
                this.glGetInteger64i_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameteri64vFunctionName)
                this.glGetBufferParameteri64v = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint64 */ long*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenSamplersFunctionName)
                this.glGenSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteSamplersFunctionName)
                this.glDeleteSamplers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsSamplerFunctionName)
                this.glIsSampler = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glBindSamplerFunctionName)
                this.glBindSampler = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameteriFunctionName)
                this.glSamplerParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterivFunctionName)
                this.glSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfFunctionName)
                this.glSamplerParameterf = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterfvFunctionName)
                this.glSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterivFunctionName)
                this.glGetSamplerParameteriv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterfvFunctionName)
                this.glGetSamplerParameterfv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribDivisorFunctionName)
                this.glVertexAttribDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTransformFeedbackFunctionName)
                this.glBindTransformFeedback = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTransformFeedbacksFunctionName)
                this.glDeleteTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTransformFeedbacksFunctionName)
                this.glGenTransformFeedbacks = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsTransformFeedbackFunctionName)
                this.glIsTransformFeedback = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glPauseTransformFeedbackFunctionName)
                this.glPauseTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glResumeTransformFeedbackFunctionName)
                this.glResumeTransformFeedback = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramBinaryFunctionName)
                this.glGetProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLenum */ int*, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramBinaryFunctionName)
                this.glProgramBinary = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramParameteriFunctionName)
                this.glProgramParameteri = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateFramebufferFunctionName)
                this.glInvalidateFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glInvalidateSubFramebufferFunctionName)
                this.glInvalidateSubFramebuffer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int*, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DFunctionName)
                this.glTexStorage2D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DFunctionName)
                this.glTexStorage3D = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetInternalformativFunctionName)
                this.glGetInternalformativ = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
        }
        
        if(IsEmbedded & Version31)
        {
            fixed(byte* name = glDispatchComputeFunctionName)
                this.glDispatchCompute = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDispatchComputeIndirectFunctionName)
                this.glDispatchComputeIndirect = (delegate* unmanaged</* GLintptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysIndirectFunctionName)
                this.glDrawArraysIndirect = (delegate* unmanaged</* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsIndirectFunctionName)
                this.glDrawElementsIndirect = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferParameteriFunctionName)
                this.glFramebufferParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFramebufferParameterivFunctionName)
                this.glGetFramebufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramInterfaceivFunctionName)
                this.glGetProgramInterfaceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceIndexFunctionName)
                this.glGetProgramResourceIndex = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceNameFunctionName)
                this.glGetProgramResourceName = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceivFunctionName)
                this.glGetProgramResourceiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLsizei */ int, /* GLsizei */ int*, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramResourceLocationFunctionName)
                this.glGetProgramResourceLocation = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLchar */ byte*, /* GLint */ int>)loadFunc(name);
            fixed(byte* name = glUseProgramStagesFunctionName)
                this.glUseProgramStages = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glActiveShaderProgramFunctionName)
                this.glActiveShaderProgram = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCreateShaderProgramvFunctionName)
                this.glCreateShaderProgramv = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte**, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glBindProgramPipelineFunctionName)
                this.glBindProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteProgramPipelinesFunctionName)
                this.glDeleteProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenProgramPipelinesFunctionName)
                this.glGenProgramPipelines = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsProgramPipelineFunctionName)
                this.glIsProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineivFunctionName)
                this.glGetProgramPipelineiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1iFunctionName)
                this.glProgramUniform1i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2iFunctionName)
                this.glProgramUniform2i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3iFunctionName)
                this.glProgramUniform3i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4iFunctionName)
                this.glProgramUniform4i = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uiFunctionName)
                this.glProgramUniform1ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uiFunctionName)
                this.glProgramUniform2ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uiFunctionName)
                this.glProgramUniform3ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uiFunctionName)
                this.glProgramUniform4ui = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fFunctionName)
                this.glProgramUniform1f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fFunctionName)
                this.glProgramUniform2f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fFunctionName)
                this.glProgramUniform3f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fFunctionName)
                this.glProgramUniform4f = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1ivFunctionName)
                this.glProgramUniform1iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2ivFunctionName)
                this.glProgramUniform2iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3ivFunctionName)
                this.glProgramUniform3iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4ivFunctionName)
                this.glProgramUniform4iv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1uivFunctionName)
                this.glProgramUniform1uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2uivFunctionName)
                this.glProgramUniform2uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3uivFunctionName)
                this.glProgramUniform3uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4uivFunctionName)
                this.glProgramUniform4uiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform1fvFunctionName)
                this.glProgramUniform1fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform2fvFunctionName)
                this.glProgramUniform2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform3fvFunctionName)
                this.glProgramUniform3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniform4fvFunctionName)
                this.glProgramUniform4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2fvFunctionName)
                this.glProgramUniformMatrix2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3fvFunctionName)
                this.glProgramUniformMatrix3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4fvFunctionName)
                this.glProgramUniformMatrix4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x3fvFunctionName)
                this.glProgramUniformMatrix2x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x2fvFunctionName)
                this.glProgramUniformMatrix3x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix2x4fvFunctionName)
                this.glProgramUniformMatrix2x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x2fvFunctionName)
                this.glProgramUniformMatrix4x2fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix3x4fvFunctionName)
                this.glProgramUniformMatrix3x4fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glProgramUniformMatrix4x3fvFunctionName)
                this.glProgramUniformMatrix4x3fv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLboolean */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glValidateProgramPipelineFunctionName)
                this.glValidateProgramPipeline = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetProgramPipelineInfoLogFunctionName)
                this.glGetProgramPipelineInfoLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindImageTextureFunctionName)
                this.glBindImageTexture = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLint */ int, /* GLboolean */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleani_vFunctionName)
                this.glGetBooleani_v = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierFunctionName)
                this.glMemoryBarrier = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMemoryBarrierByRegionFunctionName)
                this.glMemoryBarrierByRegion = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage2DMultisampleFunctionName)
                this.glTexStorage2DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMultisamplefvFunctionName)
                this.glGetMultisamplefv = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleMaskiFunctionName)
                this.glSampleMaski = (delegate* unmanaged</* GLuint */ uint, /* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterivFunctionName)
                this.glGetTexLevelParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexLevelParameterfvFunctionName)
                this.glGetTexLevelParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindVertexBufferFunctionName)
                this.glBindVertexBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribFormatFunctionName)
                this.glVertexAttribFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLboolean */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribIFormatFunctionName)
                this.glVertexAttribIFormat = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexAttribBindingFunctionName)
                this.glVertexAttribBinding = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexBindingDivisorFunctionName)
                this.glVertexBindingDivisor = (delegate* unmanaged</* GLuint */ uint, /* GLuint */ uint, /* void */ void>)loadFunc(name);
        }
        
        if(IsEmbedded & Version32)
        {
            fixed(byte* name = glBlendBarrierFunctionName)
                this.glBlendBarrier = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyImageSubDataFunctionName)
                this.glCopyImageSubData = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLuint */ uint, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageControlFunctionName)
                this.glDebugMessageControl = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* GLuint */ uint*, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageInsertFunctionName)
                this.glDebugMessageInsert = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLenum */ int, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDebugMessageCallbackFunctionName)
                this.glDebugMessageCallback = (delegate* unmanaged</* GLDEBUGPROC */ delegate* unmanaged<int, int, uint, int, nint, sbyte*, void*, void>, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetDebugMessageLogFunctionName)
                this.glGetDebugMessageLog = (delegate* unmanaged</* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int*, /* GLenum */ int*, /* GLuint */ uint*, /* GLenum */ int*, /* GLsizei */ int*, /* GLchar */ byte*, /* GLuint */ uint>)loadFunc(name);
            fixed(byte* name = glPushDebugGroupFunctionName)
                this.glPushDebugGroup = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopDebugGroupFunctionName)
                this.glPopDebugGroup = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectLabelFunctionName)
                this.glObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectLabelFunctionName)
                this.glGetObjectLabel = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glObjectPtrLabelFunctionName)
                this.glObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetObjectPtrLabelFunctionName)
                this.glGetObjectPtrLabel = (delegate* unmanaged</* void */ void*, /* GLsizei */ int, /* GLsizei */ int*, /* GLchar */ byte*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPointervFunctionName)
                this.glGetPointerv = (delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableiFunctionName)
                this.glEnablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableiFunctionName)
                this.glDisablei = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationiFunctionName)
                this.glBlendEquationi = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendEquationSeparateiFunctionName)
                this.glBlendEquationSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFunciFunctionName)
                this.glBlendFunci = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncSeparateiFunctionName)
                this.glBlendFuncSeparatei = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskiFunctionName)
                this.glColorMaski = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsEnablediFunctionName)
                this.glIsEnabledi = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glDrawElementsBaseVertexFunctionName)
                this.glDrawElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawRangeElementsBaseVertexFunctionName)
                this.glDrawRangeElementsBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* GLuint */ uint, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsInstancedBaseVertexFunctionName)
                this.glDrawElementsInstancedBaseVertex = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFramebufferTextureFunctionName)
                this.glFramebufferTexture = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPrimitiveBoundingBoxFunctionName)
                this.glPrimitiveBoundingBox = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetGraphicsResetStatusFunctionName)
                this.glGetGraphicsResetStatus = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glReadnPixelsFunctionName)
                this.glReadnPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformfvFunctionName)
                this.glGetnUniformfv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformivFunctionName)
                this.glGetnUniformiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetnUniformuivFunctionName)
                this.glGetnUniformuiv = (delegate* unmanaged</* GLuint */ uint, /* GLint */ int, /* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMinSampleShadingFunctionName)
                this.glMinSampleShading = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPatchParameteriFunctionName)
                this.glPatchParameteri = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIivFunctionName)
                this.glTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterIuivFunctionName)
                this.glTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIivFunctionName)
                this.glGetTexParameterIiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterIuivFunctionName)
                this.glGetTexParameterIuiv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIivFunctionName)
                this.glSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSamplerParameterIuivFunctionName)
                this.glSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIivFunctionName)
                this.glGetSamplerParameterIiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetSamplerParameterIuivFunctionName)
                this.glGetSamplerParameterIuiv = (delegate* unmanaged</* GLuint */ uint, /* GLenum */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferFunctionName)
                this.glTexBuffer = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexBufferRangeFunctionName)
                this.glTexBufferRange = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLuint */ uint, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexStorage3DMultisampleFunctionName)
                this.glTexStorage3DMultisample = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
        }
    }
}
