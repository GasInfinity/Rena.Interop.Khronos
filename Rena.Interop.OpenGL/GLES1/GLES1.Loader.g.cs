using System.Buffers;
using System.Buffers.Text;
using System.Runtime.InteropServices;

namespace Rena.Interop.OpenGL;

public unsafe partial class GLES1
{
    public delegate void* LoadFunction(byte* name);
    internal static ReadOnlySpan<byte> glGetStringiFunctionName => "glGetStringi"u8;
    internal const int GL_NUM_EXTENSIONS = 0x821D;
    public readonly ushort Major;
    public readonly ushort Minor;
    
    public readonly bool Version10;
    
    public readonly bool IsEmbedded;
    
    public GLES1(LoadFunction loadFunc)
    {
        delegate* unmanaged<int, byte*> glGetString;
        fixed(byte* name = glGetStringFunctionName)
            glGetString = (delegate* unmanaged<int, byte*>)loadFunc(name);
        if(glGetString == null) return;
        var version = glGetString(GL_VERSION);
        if(version is null) return;
        if(!TryParseVersion(MemoryMarshal.CreateReadOnlySpanFromNullTerminated(version), out Major, out Minor, out IsEmbedded)) return;
        
        Version10 = Major > 1 | (Major == 1 & Minor >= 0);
        
        if(IsEmbedded & Version10)
        {
            fixed(byte* name = glAlphaFuncFunctionName)
                this.AlphaFunc = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorFunctionName)
                this.ClearColor = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthfFunctionName)
                this.ClearDepthf = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClipPlanefFunctionName)
                this.ClipPlanef = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4fFunctionName)
                this.Color4f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangefFunctionName)
                this.DepthRangef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfFunctionName)
                this.Fogf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogfvFunctionName)
                this.Fogfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrustumfFunctionName)
                this.Frustumf = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetClipPlanefFunctionName)
                this.GetClipPlanef = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetFloatvFunctionName)
                this.GetFloatv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightfvFunctionName)
                this.GetLightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialfvFunctionName)
                this.GetMaterialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvfvFunctionName)
                this.GetTexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterfvFunctionName)
                this.GetTexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfFunctionName)
                this.LightModelf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelfvFunctionName)
                this.LightModelfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfFunctionName)
                this.Lightf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightfvFunctionName)
                this.Lightfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthFunctionName)
                this.LineWidth = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixfFunctionName)
                this.LoadMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfFunctionName)
                this.Materialf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialfvFunctionName)
                this.Materialfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixfFunctionName)
                this.MultMatrixf = (delegate* unmanaged</* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4fFunctionName)
                this.MultiTexCoord4f = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3fFunctionName)
                this.Normal3f = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glOrthofFunctionName)
                this.Orthof = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfFunctionName)
                this.PointParameterf = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterfvFunctionName)
                this.PointParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizeFunctionName)
                this.PointSize = (delegate* unmanaged</* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetFunctionName)
                this.PolygonOffset = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatefFunctionName)
                this.Rotatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScalefFunctionName)
                this.Scalef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfFunctionName)
                this.TexEnvf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvfvFunctionName)
                this.TexEnvfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfFunctionName)
                this.TexParameterf = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterfvFunctionName)
                this.TexParameterfv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfloat */ float*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatefFunctionName)
                this.Translatef = (delegate* unmanaged</* GLfloat */ float, /* GLfloat */ float, /* GLfloat */ float, /* void */ void>)loadFunc(name);
            fixed(byte* name = glActiveTextureFunctionName)
                this.ActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glAlphaFuncxFunctionName)
                this.AlphaFuncx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindBufferFunctionName)
                this.BindBuffer = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBindTextureFunctionName)
                this.BindTexture = (delegate* unmanaged</* GLenum */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBlendFuncFunctionName)
                this.BlendFunc = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferDataFunctionName)
                this.BufferData = (delegate* unmanaged</* GLenum */ int, /* GLsizeiptr */ nint, /* void */ void*, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glBufferSubDataFunctionName)
                this.BufferSubData = (delegate* unmanaged</* GLenum */ int, /* GLintptr */ nint, /* GLsizeiptr */ nint, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearFunctionName)
                this.Clear = (delegate* unmanaged</* GLbitfield */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearColorxFunctionName)
                this.ClearColorx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearDepthxFunctionName)
                this.ClearDepthx = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClearStencilFunctionName)
                this.ClearStencil = (delegate* unmanaged</* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClientActiveTextureFunctionName)
                this.ClientActiveTexture = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glClipPlanexFunctionName)
                this.ClipPlanex = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4ubFunctionName)
                this.Color4ub = (delegate* unmanaged</* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* GLubyte */ byte, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColor4xFunctionName)
                this.Color4x = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorMaskFunctionName)
                this.ColorMask = (delegate* unmanaged</* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glColorPointerFunctionName)
                this.ColorPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexImage2DFunctionName)
                this.CompressedTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCompressedTexSubImage2DFunctionName)
                this.CompressedTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexImage2DFunctionName)
                this.CopyTexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCopyTexSubImage2DFunctionName)
                this.CopyTexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glCullFaceFunctionName)
                this.CullFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteBuffersFunctionName)
                this.DeleteBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDeleteTexturesFunctionName)
                this.DeleteTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthFuncFunctionName)
                this.DepthFunc = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthMaskFunctionName)
                this.DepthMask = (delegate* unmanaged</* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDepthRangexFunctionName)
                this.DepthRangex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableFunctionName)
                this.Disable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDisableClientStateFunctionName)
                this.DisableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawArraysFunctionName)
                this.DrawArrays = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glDrawElementsFunctionName)
                this.DrawElements = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableFunctionName)
                this.Enable = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glEnableClientStateFunctionName)
                this.EnableClientState = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFinishFunctionName)
                this.Finish = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFlushFunctionName)
                this.Flush = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glFogxFunctionName)
                this.Fogx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFogxvFunctionName)
                this.Fogxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrontFaceFunctionName)
                this.FrontFace = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glFrustumxFunctionName)
                this.Frustumx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBooleanvFunctionName)
                this.GetBooleanv = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetBufferParameterivFunctionName)
                this.GetBufferParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetClipPlanexFunctionName)
                this.GetClipPlanex = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenBuffersFunctionName)
                this.GenBuffers = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGenTexturesFunctionName)
                this.GenTextures = (delegate* unmanaged</* GLsizei */ int, /* GLuint */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetErrorFunctionName)
                this.GetError = (delegate* unmanaged</* GLenum */ int>)loadFunc(name);
            fixed(byte* name = glGetFixedvFunctionName)
                this.GetFixedv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetIntegervFunctionName)
                this.GetIntegerv = (delegate* unmanaged</* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetLightxvFunctionName)
                this.GetLightxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetMaterialxvFunctionName)
                this.GetMaterialxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetPointervFunctionName)
                this.GetPointerv = (delegate* unmanaged</* GLenum */ int, /* void */ void**, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetStringFunctionName)
                this.GetString = (delegate* unmanaged</* GLenum */ int, /* GLubyte */ byte*>)loadFunc(name);
            fixed(byte* name = glGetTexEnvivFunctionName)
                this.GetTexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexEnvxvFunctionName)
                this.GetTexEnvxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterivFunctionName)
                this.GetTexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glGetTexParameterxvFunctionName)
                this.GetTexParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glHintFunctionName)
                this.Hint = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glIsBufferFunctionName)
                this.IsBuffer = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsEnabledFunctionName)
                this.IsEnabled = (delegate* unmanaged</* GLenum */ int, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glIsTextureFunctionName)
                this.IsTexture = (delegate* unmanaged</* GLuint */ uint, /* GLboolean */ int>)loadFunc(name);
            fixed(byte* name = glLightModelxFunctionName)
                this.LightModelx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightModelxvFunctionName)
                this.LightModelxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightxFunctionName)
                this.Lightx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLightxvFunctionName)
                this.Lightxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLineWidthxFunctionName)
                this.LineWidthx = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadIdentityFunctionName)
                this.LoadIdentity = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glLoadMatrixxFunctionName)
                this.LoadMatrixx = (delegate* unmanaged</* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glLogicOpFunctionName)
                this.LogicOp = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialxFunctionName)
                this.Materialx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMaterialxvFunctionName)
                this.Materialxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMatrixModeFunctionName)
                this.MatrixMode = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultMatrixxFunctionName)
                this.MultMatrixx = (delegate* unmanaged</* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glMultiTexCoord4xFunctionName)
                this.MultiTexCoord4x = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormal3xFunctionName)
                this.Normal3x = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glNormalPointerFunctionName)
                this.NormalPointer = (delegate* unmanaged</* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glOrthoxFunctionName)
                this.Orthox = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPixelStoreiFunctionName)
                this.PixelStorei = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterxFunctionName)
                this.PointParameterx = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointParameterxvFunctionName)
                this.PointParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPointSizexFunctionName)
                this.PointSizex = (delegate* unmanaged</* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPolygonOffsetxFunctionName)
                this.PolygonOffsetx = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glPopMatrixFunctionName)
                this.PopMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glPushMatrixFunctionName)
                this.PushMatrix = (delegate* unmanaged</* void */ void>)loadFunc(name);
            fixed(byte* name = glReadPixelsFunctionName)
                this.ReadPixels = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glRotatexFunctionName)
                this.Rotatex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoverageFunctionName)
                this.SampleCoverage = (delegate* unmanaged</* GLfloat */ float, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glSampleCoveragexFunctionName)
                this.SampleCoveragex = (delegate* unmanaged</* GLclampx */ int, /* GLboolean */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScalexFunctionName)
                this.Scalex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glScissorFunctionName)
                this.Scissor = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glShadeModelFunctionName)
                this.ShadeModel = (delegate* unmanaged</* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilFuncFunctionName)
                this.StencilFunc = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilMaskFunctionName)
                this.StencilMask = (delegate* unmanaged</* GLuint */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glStencilOpFunctionName)
                this.StencilOp = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexCoordPointerFunctionName)
                this.TexCoordPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnviFunctionName)
                this.TexEnvi = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvxFunctionName)
                this.TexEnvx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvivFunctionName)
                this.TexEnviv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexEnvxvFunctionName)
                this.TexEnvxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexImage2DFunctionName)
                this.TexImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLint */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameteriFunctionName)
                this.TexParameteri = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterxFunctionName)
                this.TexParameterx = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterivFunctionName)
                this.TexParameteriv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLint */ int*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexParameterxvFunctionName)
                this.TexParameterxv = (delegate* unmanaged</* GLenum */ int, /* GLenum */ int, /* GLfixed */ uint*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTexSubImage2DFunctionName)
                this.TexSubImage2D = (delegate* unmanaged</* GLenum */ int, /* GLint */ int, /* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* GLenum */ int, /* GLenum */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glTranslatexFunctionName)
                this.Translatex = (delegate* unmanaged</* GLfixed */ uint, /* GLfixed */ uint, /* GLfixed */ uint, /* void */ void>)loadFunc(name);
            fixed(byte* name = glVertexPointerFunctionName)
                this.VertexPointer = (delegate* unmanaged</* GLint */ int, /* GLenum */ int, /* GLsizei */ int, /* void */ void*, /* void */ void>)loadFunc(name);
            fixed(byte* name = glViewportFunctionName)
                this.Viewport = (delegate* unmanaged</* GLint */ int, /* GLint */ int, /* GLsizei */ int, /* GLsizei */ int, /* void */ void>)loadFunc(name);
        }
    }
}
